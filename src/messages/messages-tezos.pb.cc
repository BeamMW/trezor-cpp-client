// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-tezos.proto

#include "messages-tezos.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messages_2dtezos_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dtezos_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TezosSignTx_TezosContractID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dtezos_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TezosSignTx_TezosDelegationOp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dtezos_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TezosSignTx_TezosOriginationOp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dtezos_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TezosSignTx_TezosRevealOp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dtezos_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TezosSignTx_TezosTransactionOp;
}  // namespace protobuf_messages_2dtezos_2eproto
namespace hw {
namespace trezor {
namespace messages {
namespace tezos {
class TezosGetAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosGetAddress>
      _instance;
} _TezosGetAddress_default_instance_;
class TezosAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosAddress>
      _instance;
} _TezosAddress_default_instance_;
class TezosGetPublicKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosGetPublicKey>
      _instance;
} _TezosGetPublicKey_default_instance_;
class TezosPublicKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosPublicKey>
      _instance;
} _TezosPublicKey_default_instance_;
class TezosSignTx_TezosContractIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosSignTx_TezosContractID>
      _instance;
} _TezosSignTx_TezosContractID_default_instance_;
class TezosSignTx_TezosRevealOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosSignTx_TezosRevealOp>
      _instance;
} _TezosSignTx_TezosRevealOp_default_instance_;
class TezosSignTx_TezosTransactionOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosSignTx_TezosTransactionOp>
      _instance;
} _TezosSignTx_TezosTransactionOp_default_instance_;
class TezosSignTx_TezosOriginationOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosSignTx_TezosOriginationOp>
      _instance;
} _TezosSignTx_TezosOriginationOp_default_instance_;
class TezosSignTx_TezosDelegationOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosSignTx_TezosDelegationOp>
      _instance;
} _TezosSignTx_TezosDelegationOp_default_instance_;
class TezosSignTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosSignTx>
      _instance;
} _TezosSignTx_default_instance_;
class TezosSignedTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TezosSignedTx>
      _instance;
} _TezosSignedTx_default_instance_;
}  // namespace tezos
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace protobuf_messages_2dtezos_2eproto {
static void InitDefaultsTezosGetAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosGetAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosGetAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosGetAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TezosGetAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTezosGetAddress}, {}};

static void InitDefaultsTezosAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TezosAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTezosAddress}, {}};

static void InitDefaultsTezosGetPublicKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosGetPublicKey_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosGetPublicKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosGetPublicKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TezosGetPublicKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTezosGetPublicKey}, {}};

static void InitDefaultsTezosPublicKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosPublicKey_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosPublicKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosPublicKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TezosPublicKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTezosPublicKey}, {}};

static void InitDefaultsTezosSignTx_TezosContractID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosSignTx_TezosContractID_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TezosSignTx_TezosContractID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTezosSignTx_TezosContractID}, {}};

static void InitDefaultsTezosSignTx_TezosRevealOp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosSignTx_TezosRevealOp_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TezosSignTx_TezosRevealOp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTezosSignTx_TezosRevealOp}, {
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosContractID.base,}};

static void InitDefaultsTezosSignTx_TezosTransactionOp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosSignTx_TezosTransactionOp_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TezosSignTx_TezosTransactionOp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTezosSignTx_TezosTransactionOp}, {
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosContractID.base,}};

static void InitDefaultsTezosSignTx_TezosOriginationOp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosSignTx_TezosOriginationOp_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TezosSignTx_TezosOriginationOp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTezosSignTx_TezosOriginationOp}, {
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosContractID.base,}};

static void InitDefaultsTezosSignTx_TezosDelegationOp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosSignTx_TezosDelegationOp_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TezosSignTx_TezosDelegationOp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTezosSignTx_TezosDelegationOp}, {
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosContractID.base,}};

static void InitDefaultsTezosSignTx() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosSignTx_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosSignTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosSignTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_TezosSignTx =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsTezosSignTx}, {
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosRevealOp.base,
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosTransactionOp.base,
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosOriginationOp.base,
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosDelegationOp.base,}};

static void InitDefaultsTezosSignedTx() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::tezos::_TezosSignedTx_default_instance_;
    new (ptr) ::hw::trezor::messages::tezos::TezosSignedTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::tezos::TezosSignedTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TezosSignedTx =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTezosSignedTx}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TezosGetAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosGetPublicKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosPublicKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosSignTx_TezosContractID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosSignTx_TezosRevealOp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosSignTx_TezosTransactionOp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosSignTx_TezosOriginationOp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosSignTx_TezosDelegationOp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosSignTx.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TezosSignedTx.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosGetAddress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosGetAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosGetAddress, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosGetAddress, show_display_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosAddress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosAddress, address_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosGetPublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosGetPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosGetPublicKey, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosGetPublicKey, show_display_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosPublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosPublicKey, public_key_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosContractID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosContractID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosContractID, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosContractID, hash_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp, fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp, counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp, gas_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp, storage_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp, public_key_),
  1,
  2,
  3,
  4,
  5,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, gas_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, storage_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp, parameters_),
  1,
  3,
  4,
  5,
  6,
  7,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, gas_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, storage_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, manager_pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, spendable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, delegatable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, delegate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp, script_),
  3,
  4,
  5,
  6,
  7,
  0,
  8,
  9,
  10,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp, fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp, counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp, gas_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp, storage_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp, delegate_),
  1,
  2,
  3,
  4,
  5,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx, branch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx, reveal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx, transaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx, origination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignTx, delegation_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignedTx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignedTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignedTx, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignedTx, sig_op_contents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::tezos::TezosSignedTx, operation_hash_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::hw::trezor::messages::tezos::TezosGetAddress)},
  { 9, 15, sizeof(::hw::trezor::messages::tezos::TezosAddress)},
  { 16, 23, sizeof(::hw::trezor::messages::tezos::TezosGetPublicKey)},
  { 25, 31, sizeof(::hw::trezor::messages::tezos::TezosPublicKey)},
  { 32, 39, sizeof(::hw::trezor::messages::tezos::TezosSignTx_TezosContractID)},
  { 41, 52, sizeof(::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp)},
  { 58, 71, sizeof(::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp)},
  { 79, 95, sizeof(::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp)},
  { 106, 117, sizeof(::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp)},
  { 123, 134, sizeof(::hw::trezor::messages::tezos::TezosSignTx)},
  { 140, 148, sizeof(::hw::trezor::messages::tezos::TezosSignedTx)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosGetAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosGetPublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosPublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosSignTx_TezosContractID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosSignTx_TezosRevealOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosSignTx_TezosTransactionOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosSignTx_TezosOriginationOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosSignTx_TezosDelegationOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosSignTx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::tezos::_TezosSignedTx_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages-tezos.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024messages-tezos.proto\022\030hw.trezor.messag"
      "es.tezos\":\n\017TezosGetAddress\022\021\n\taddress_n"
      "\030\001 \003(\r\022\024\n\014show_display\030\002 \001(\010\"\037\n\014TezosAdd"
      "ress\022\017\n\007address\030\001 \001(\t\"<\n\021TezosGetPublicK"
      "ey\022\021\n\taddress_n\030\001 \003(\r\022\024\n\014show_display\030\002 "
      "\001(\010\"$\n\016TezosPublicKey\022\022\n\npublic_key\030\001 \001("
      "\t\"\246\013\n\013TezosSignTx\022\021\n\taddress_n\030\001 \003(\r\022\016\n\006"
      "branch\030\002 \001(\014\022C\n\006reveal\030\003 \001(\01323.hw.trezor"
      ".messages.tezos.TezosSignTx.TezosRevealO"
      "p\022M\n\013transaction\030\004 \001(\01328.hw.trezor.messa"
      "ges.tezos.TezosSignTx.TezosTransactionOp"
      "\022M\n\013origination\030\005 \001(\01328.hw.trezor.messag"
      "es.tezos.TezosSignTx.TezosOriginationOp\022"
      "K\n\ndelegation\030\006 \001(\01327.hw.trezor.messages"
      ".tezos.TezosSignTx.TezosDelegationOp\032\250\001\n"
      "\017TezosContractID\022T\n\003tag\030\001 \001(\0162G.hw.trezo"
      "r.messages.tezos.TezosSignTx.TezosContra"
      "ctID.TezosContractType\022\014\n\004hash\030\002 \001(\014\"1\n\021"
      "TezosContractType\022\014\n\010Implicit\020\000\022\016\n\nOrigi"
      "nated\020\001\032\262\001\n\rTezosRevealOp\022E\n\006source\030\001 \001("
      "\01325.hw.trezor.messages.tezos.TezosSignTx"
      ".TezosContractID\022\013\n\003fee\030\002 \001(\004\022\017\n\007counter"
      "\030\003 \001(\004\022\021\n\tgas_limit\030\004 \001(\004\022\025\n\rstorage_lim"
      "it\030\005 \001(\004\022\022\n\npublic_key\030\006 \001(\014\032\223\002\n\022TezosTr"
      "ansactionOp\022E\n\006source\030\001 \001(\01325.hw.trezor."
      "messages.tezos.TezosSignTx.TezosContract"
      "ID\022\013\n\003fee\030\002 \001(\004\022\017\n\007counter\030\003 \001(\004\022\021\n\tgas_"
      "limit\030\004 \001(\004\022\025\n\rstorage_limit\030\005 \001(\004\022\016\n\006am"
      "ount\030\006 \001(\004\022J\n\013destination\030\007 \001(\01325.hw.tre"
      "zor.messages.tezos.TezosSignTx.TezosCont"
      "ractID\022\022\n\nparameters\030\010 \001(\014\032\226\002\n\022TezosOrig"
      "inationOp\022E\n\006source\030\001 \001(\01325.hw.trezor.me"
      "ssages.tezos.TezosSignTx.TezosContractID"
      "\022\013\n\003fee\030\002 \001(\004\022\017\n\007counter\030\003 \001(\004\022\021\n\tgas_li"
      "mit\030\004 \001(\004\022\025\n\rstorage_limit\030\005 \001(\004\022\026\n\016mana"
      "ger_pubkey\030\006 \001(\014\022\017\n\007balance\030\007 \001(\004\022\021\n\tspe"
      "ndable\030\010 \001(\010\022\023\n\013delegatable\030\t \001(\010\022\020\n\010del"
      "egate\030\n \001(\014\022\016\n\006script\030\013 \001(\014\032\264\001\n\021TezosDel"
      "egationOp\022E\n\006source\030\001 \001(\01325.hw.trezor.me"
      "ssages.tezos.TezosSignTx.TezosContractID"
      "\022\013\n\003fee\030\002 \001(\004\022\017\n\007counter\030\003 \001(\004\022\021\n\tgas_li"
      "mit\030\004 \001(\004\022\025\n\rstorage_limit\030\005 \001(\004\022\020\n\010dele"
      "gate\030\006 \001(\014\"S\n\rTezosSignedTx\022\021\n\tsignature"
      "\030\001 \001(\t\022\027\n\017sig_op_contents\030\002 \001(\014\022\026\n\016opera"
      "tion_hash\030\003 \001(\tB9\n#com.satoshilabs.trezo"
      "r.lib.protobufB\022TrezorMessageTezos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1834);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages-tezos.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2dtezos_2eproto
namespace hw {
namespace trezor {
namespace messages {
namespace tezos {
const ::google::protobuf::EnumDescriptor* TezosSignTx_TezosContractID_TezosContractType_descriptor() {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_2dtezos_2eproto::file_level_enum_descriptors[0];
}
bool TezosSignTx_TezosContractID_TezosContractType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TezosSignTx_TezosContractID_TezosContractType TezosSignTx_TezosContractID::Implicit;
const TezosSignTx_TezosContractID_TezosContractType TezosSignTx_TezosContractID::Originated;
const TezosSignTx_TezosContractID_TezosContractType TezosSignTx_TezosContractID::TezosContractType_MIN;
const TezosSignTx_TezosContractID_TezosContractType TezosSignTx_TezosContractID::TezosContractType_MAX;
const int TezosSignTx_TezosContractID::TezosContractType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TezosGetAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosGetAddress::kAddressNFieldNumber;
const int TezosGetAddress::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosGetAddress::TezosGetAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosGetAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosGetAddress)
}
TezosGetAddress::TezosGetAddress(const TezosGetAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosGetAddress)
}

void TezosGetAddress::SharedCtor() {
  show_display_ = false;
}

TezosGetAddress::~TezosGetAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosGetAddress)
  SharedDtor();
}

void TezosGetAddress::SharedDtor() {
}

void TezosGetAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosGetAddress::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosGetAddress& TezosGetAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosGetAddress.base);
  return *internal_default_instance();
}


void TezosGetAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosGetAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosGetAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_show_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosGetAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosGetAddress)
  return false;
#undef DO_
}

void TezosGetAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosGetAddress)
}

::google::protobuf::uint8* TezosGetAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosGetAddress)
  return target;
}

size_t TezosGetAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosGetAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  // optional bool show_display = 2;
  if (has_show_display()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosGetAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosGetAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosGetAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosGetAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosGetAddress)
    MergeFrom(*source);
  }
}

void TezosGetAddress::MergeFrom(const TezosGetAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  if (from.has_show_display()) {
    set_show_display(from.show_display());
  }
}

void TezosGetAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosGetAddress::CopyFrom(const TezosGetAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosGetAddress::IsInitialized() const {
  return true;
}

void TezosGetAddress::Swap(TezosGetAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosGetAddress::InternalSwap(TezosGetAddress* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  swap(show_display_, other->show_display_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosGetAddress::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosAddress::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosAddress::TezosAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosAddress)
}
TezosAddress::TezosAddress(const TezosAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosAddress)
}

void TezosAddress::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TezosAddress::~TezosAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosAddress)
  SharedDtor();
}

void TezosAddress::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TezosAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosAddress::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosAddress& TezosAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosAddress.base);
  return *internal_default_instance();
}


void TezosAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    address_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.tezos.TezosAddress.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosAddress)
  return false;
#undef DO_
}

void TezosAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.tezos.TezosAddress.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosAddress)
}

::google::protobuf::uint8* TezosAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.tezos.TezosAddress.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosAddress)
  return target;
}

size_t TezosAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string address = 1;
  if (has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosAddress)
    MergeFrom(*source);
  }
}

void TezosAddress::MergeFrom(const TezosAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    set_has_address();
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void TezosAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosAddress::CopyFrom(const TezosAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosAddress::IsInitialized() const {
  return true;
}

void TezosAddress::Swap(TezosAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosAddress::InternalSwap(TezosAddress* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosAddress::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosGetPublicKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosGetPublicKey::kAddressNFieldNumber;
const int TezosGetPublicKey::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosGetPublicKey::TezosGetPublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosGetPublicKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosGetPublicKey)
}
TezosGetPublicKey::TezosGetPublicKey(const TezosGetPublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosGetPublicKey)
}

void TezosGetPublicKey::SharedCtor() {
  show_display_ = false;
}

TezosGetPublicKey::~TezosGetPublicKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosGetPublicKey)
  SharedDtor();
}

void TezosGetPublicKey::SharedDtor() {
}

void TezosGetPublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosGetPublicKey::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosGetPublicKey& TezosGetPublicKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosGetPublicKey.base);
  return *internal_default_instance();
}


void TezosGetPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosGetPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosGetPublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosGetPublicKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_show_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosGetPublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosGetPublicKey)
  return false;
#undef DO_
}

void TezosGetPublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosGetPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosGetPublicKey)
}

::google::protobuf::uint8* TezosGetPublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosGetPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosGetPublicKey)
  return target;
}

size_t TezosGetPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosGetPublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  // optional bool show_display = 2;
  if (has_show_display()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosGetPublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosGetPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosGetPublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosGetPublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosGetPublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosGetPublicKey)
    MergeFrom(*source);
  }
}

void TezosGetPublicKey::MergeFrom(const TezosGetPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosGetPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  if (from.has_show_display()) {
    set_show_display(from.show_display());
  }
}

void TezosGetPublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosGetPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosGetPublicKey::CopyFrom(const TezosGetPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosGetPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosGetPublicKey::IsInitialized() const {
  return true;
}

void TezosGetPublicKey::Swap(TezosGetPublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosGetPublicKey::InternalSwap(TezosGetPublicKey* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  swap(show_display_, other->show_display_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosGetPublicKey::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosPublicKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosPublicKey::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosPublicKey::TezosPublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosPublicKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosPublicKey)
}
TezosPublicKey::TezosPublicKey(const TezosPublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosPublicKey)
}

void TezosPublicKey::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TezosPublicKey::~TezosPublicKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosPublicKey)
  SharedDtor();
}

void TezosPublicKey::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TezosPublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosPublicKey::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosPublicKey& TezosPublicKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosPublicKey.base);
  return *internal_default_instance();
}


void TezosPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    public_key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosPublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosPublicKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.tezos.TezosPublicKey.public_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosPublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosPublicKey)
  return false;
#undef DO_
}

void TezosPublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.tezos.TezosPublicKey.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosPublicKey)
}

::google::protobuf::uint8* TezosPublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.tezos.TezosPublicKey.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosPublicKey)
  return target;
}

size_t TezosPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosPublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string public_key = 1;
  if (has_public_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosPublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosPublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosPublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosPublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosPublicKey)
    MergeFrom(*source);
  }
}

void TezosPublicKey::MergeFrom(const TezosPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_public_key()) {
    set_has_public_key();
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
}

void TezosPublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosPublicKey::CopyFrom(const TezosPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosPublicKey::IsInitialized() const {
  return true;
}

void TezosPublicKey::Swap(TezosPublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosPublicKey::InternalSwap(TezosPublicKey* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosPublicKey::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosSignTx_TezosContractID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosSignTx_TezosContractID::kTagFieldNumber;
const int TezosSignTx_TezosContractID::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosSignTx_TezosContractID::TezosSignTx_TezosContractID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosContractID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
}
TezosSignTx_TezosContractID::TezosSignTx_TezosContractID(const TezosSignTx_TezosContractID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hash()) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  tag_ = from.tag_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
}

void TezosSignTx_TezosContractID::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_ = 0;
}

TezosSignTx_TezosContractID::~TezosSignTx_TezosContractID() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  SharedDtor();
}

void TezosSignTx_TezosContractID::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TezosSignTx_TezosContractID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosSignTx_TezosContractID::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosSignTx_TezosContractID& TezosSignTx_TezosContractID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosContractID.base);
  return *internal_default_instance();
}


void TezosSignTx_TezosContractID::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    hash_.ClearNonDefaultToEmptyNoArena();
  }
  tag_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosSignTx_TezosContractID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID.TezosContractType tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::tezos::TezosSignTx_TezosContractID_TezosContractType_IsValid(value)) {
            set_tag(static_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID_TezosContractType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  return false;
#undef DO_
}

void TezosSignTx_TezosContractID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID.TezosContractType tag = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tag(), output);
  }

  // optional bytes hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
}

::google::protobuf::uint8* TezosSignTx_TezosContractID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID.TezosContractType tag = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tag(), target);
  }

  // optional bytes hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  return target;
}

size_t TezosSignTx_TezosContractID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes hash = 2;
    if (has_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->hash());
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID.TezosContractType tag = 1;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->tag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosSignTx_TezosContractID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosSignTx_TezosContractID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosSignTx_TezosContractID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
    MergeFrom(*source);
  }
}

void TezosSignTx_TezosContractID::MergeFrom(const TezosSignTx_TezosContractID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hash();
      hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      tag_ = from.tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TezosSignTx_TezosContractID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosSignTx_TezosContractID::CopyFrom(const TezosSignTx_TezosContractID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosContractID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosSignTx_TezosContractID::IsInitialized() const {
  return true;
}

void TezosSignTx_TezosContractID::Swap(TezosSignTx_TezosContractID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosSignTx_TezosContractID::InternalSwap(TezosSignTx_TezosContractID* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tag_, other->tag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosSignTx_TezosContractID::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosSignTx_TezosRevealOp::InitAsDefaultInstance() {
  ::hw::trezor::messages::tezos::_TezosSignTx_TezosRevealOp_default_instance_._instance.get_mutable()->source_ = const_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID*>(
      ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosSignTx_TezosRevealOp::kSourceFieldNumber;
const int TezosSignTx_TezosRevealOp::kFeeFieldNumber;
const int TezosSignTx_TezosRevealOp::kCounterFieldNumber;
const int TezosSignTx_TezosRevealOp::kGasLimitFieldNumber;
const int TezosSignTx_TezosRevealOp::kStorageLimitFieldNumber;
const int TezosSignTx_TezosRevealOp::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosSignTx_TezosRevealOp::TezosSignTx_TezosRevealOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosRevealOp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
}
TezosSignTx_TezosRevealOp::TezosSignTx_TezosRevealOp(const TezosSignTx_TezosRevealOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  if (from.has_source()) {
    source_ = new ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID(*from.source_);
  } else {
    source_ = NULL;
  }
  ::memcpy(&fee_, &from.fee_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_limit_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(storage_limit_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
}

void TezosSignTx_TezosRevealOp::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&storage_limit_) -
      reinterpret_cast<char*>(&source_)) + sizeof(storage_limit_));
}

TezosSignTx_TezosRevealOp::~TezosSignTx_TezosRevealOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  SharedDtor();
}

void TezosSignTx_TezosRevealOp::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_;
}

void TezosSignTx_TezosRevealOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosSignTx_TezosRevealOp::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosSignTx_TezosRevealOp& TezosSignTx_TezosRevealOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosRevealOp.base);
  return *internal_default_instance();
}


void TezosSignTx_TezosRevealOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      public_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(source_ != NULL);
      source_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&fee_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&storage_limit_) -
        reinterpret_cast<char*>(&fee_)) + sizeof(storage_limit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosSignTx_TezosRevealOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fee = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fee();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 counter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_gas_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 storage_limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_storage_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &storage_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes public_key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  return false;
#undef DO_
}

void TezosSignTx_TezosRevealOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->fee(), output);
  }

  // optional uint64 counter = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->counter(), output);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gas_limit(), output);
  }

  // optional uint64 storage_limit = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->storage_limit(), output);
  }

  // optional bytes public_key = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->public_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
}

::google::protobuf::uint8* TezosSignTx_TezosRevealOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->fee(), target);
  }

  // optional uint64 counter = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->counter(), target);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gas_limit(), target);
  }

  // optional uint64 storage_limit = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->storage_limit(), target);
  }

  // optional bytes public_key = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->public_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  return target;
}

size_t TezosSignTx_TezosRevealOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes public_key = 6;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_key());
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_);
    }

    // optional uint64 fee = 2;
    if (has_fee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fee());
    }

    // optional uint64 counter = 3;
    if (has_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->counter());
    }

    // optional uint64 gas_limit = 4;
    if (has_gas_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_limit());
    }

    // optional uint64 storage_limit = 5;
    if (has_storage_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->storage_limit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosSignTx_TezosRevealOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosSignTx_TezosRevealOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosSignTx_TezosRevealOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
    MergeFrom(*source);
  }
}

void TezosSignTx_TezosRevealOp::MergeFrom(const TezosSignTx_TezosRevealOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_public_key();
      public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_source()->::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::MergeFrom(from.source());
    }
    if (cached_has_bits & 0x00000004u) {
      fee_ = from.fee_;
    }
    if (cached_has_bits & 0x00000008u) {
      counter_ = from.counter_;
    }
    if (cached_has_bits & 0x00000010u) {
      gas_limit_ = from.gas_limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      storage_limit_ = from.storage_limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TezosSignTx_TezosRevealOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosSignTx_TezosRevealOp::CopyFrom(const TezosSignTx_TezosRevealOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosSignTx_TezosRevealOp::IsInitialized() const {
  return true;
}

void TezosSignTx_TezosRevealOp::Swap(TezosSignTx_TezosRevealOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosSignTx_TezosRevealOp::InternalSwap(TezosSignTx_TezosRevealOp* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_, other->source_);
  swap(fee_, other->fee_);
  swap(counter_, other->counter_);
  swap(gas_limit_, other->gas_limit_);
  swap(storage_limit_, other->storage_limit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosSignTx_TezosRevealOp::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosSignTx_TezosTransactionOp::InitAsDefaultInstance() {
  ::hw::trezor::messages::tezos::_TezosSignTx_TezosTransactionOp_default_instance_._instance.get_mutable()->source_ = const_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID*>(
      ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::internal_default_instance());
  ::hw::trezor::messages::tezos::_TezosSignTx_TezosTransactionOp_default_instance_._instance.get_mutable()->destination_ = const_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID*>(
      ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosSignTx_TezosTransactionOp::kSourceFieldNumber;
const int TezosSignTx_TezosTransactionOp::kFeeFieldNumber;
const int TezosSignTx_TezosTransactionOp::kCounterFieldNumber;
const int TezosSignTx_TezosTransactionOp::kGasLimitFieldNumber;
const int TezosSignTx_TezosTransactionOp::kStorageLimitFieldNumber;
const int TezosSignTx_TezosTransactionOp::kAmountFieldNumber;
const int TezosSignTx_TezosTransactionOp::kDestinationFieldNumber;
const int TezosSignTx_TezosTransactionOp::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosSignTx_TezosTransactionOp::TezosSignTx_TezosTransactionOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosTransactionOp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
}
TezosSignTx_TezosTransactionOp::TezosSignTx_TezosTransactionOp(const TezosSignTx_TezosTransactionOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameters_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parameters()) {
    parameters_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameters_);
  }
  if (from.has_source()) {
    source_ = new ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID(*from.source_);
  } else {
    source_ = NULL;
  }
  if (from.has_destination()) {
    destination_ = new ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID(*from.destination_);
  } else {
    destination_ = NULL;
  }
  ::memcpy(&fee_, &from.fee_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
}

void TezosSignTx_TezosTransactionOp::SharedCtor() {
  parameters_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&source_)) + sizeof(amount_));
}

TezosSignTx_TezosTransactionOp::~TezosSignTx_TezosTransactionOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  SharedDtor();
}

void TezosSignTx_TezosTransactionOp::SharedDtor() {
  parameters_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete destination_;
}

void TezosSignTx_TezosTransactionOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosSignTx_TezosTransactionOp::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosSignTx_TezosTransactionOp& TezosSignTx_TezosTransactionOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosTransactionOp.base);
  return *internal_default_instance();
}


void TezosSignTx_TezosTransactionOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      parameters_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(source_ != NULL);
      source_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(destination_ != NULL);
      destination_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&fee_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&amount_) -
        reinterpret_cast<char*>(&fee_)) + sizeof(amount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosSignTx_TezosTransactionOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fee = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fee();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 counter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_gas_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 storage_limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_storage_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &storage_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 amount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID destination = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes parameters = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  return false;
#undef DO_
}

void TezosSignTx_TezosTransactionOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->fee(), output);
  }

  // optional uint64 counter = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->counter(), output);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gas_limit(), output);
  }

  // optional uint64 storage_limit = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->storage_limit(), output);
  }

  // optional uint64 amount = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->amount(), output);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID destination = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_destination(), output);
  }

  // optional bytes parameters = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->parameters(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
}

::google::protobuf::uint8* TezosSignTx_TezosTransactionOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->fee(), target);
  }

  // optional uint64 counter = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->counter(), target);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gas_limit(), target);
  }

  // optional uint64 storage_limit = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->storage_limit(), target);
  }

  // optional uint64 amount = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->amount(), target);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID destination = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_destination(), deterministic, target);
  }

  // optional bytes parameters = 8;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->parameters(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  return target;
}

size_t TezosSignTx_TezosTransactionOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes parameters = 8;
    if (has_parameters()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->parameters());
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_);
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID destination = 7;
    if (has_destination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *destination_);
    }

    // optional uint64 fee = 2;
    if (has_fee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fee());
    }

    // optional uint64 counter = 3;
    if (has_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->counter());
    }

    // optional uint64 gas_limit = 4;
    if (has_gas_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_limit());
    }

    // optional uint64 storage_limit = 5;
    if (has_storage_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->storage_limit());
    }

    // optional uint64 amount = 6;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosSignTx_TezosTransactionOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosSignTx_TezosTransactionOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosSignTx_TezosTransactionOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
    MergeFrom(*source);
  }
}

void TezosSignTx_TezosTransactionOp::MergeFrom(const TezosSignTx_TezosTransactionOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_parameters();
      parameters_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameters_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_source()->::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::MergeFrom(from.source());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_destination()->::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::MergeFrom(from.destination());
    }
    if (cached_has_bits & 0x00000008u) {
      fee_ = from.fee_;
    }
    if (cached_has_bits & 0x00000010u) {
      counter_ = from.counter_;
    }
    if (cached_has_bits & 0x00000020u) {
      gas_limit_ = from.gas_limit_;
    }
    if (cached_has_bits & 0x00000040u) {
      storage_limit_ = from.storage_limit_;
    }
    if (cached_has_bits & 0x00000080u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TezosSignTx_TezosTransactionOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosSignTx_TezosTransactionOp::CopyFrom(const TezosSignTx_TezosTransactionOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosSignTx_TezosTransactionOp::IsInitialized() const {
  return true;
}

void TezosSignTx_TezosTransactionOp::Swap(TezosSignTx_TezosTransactionOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosSignTx_TezosTransactionOp::InternalSwap(TezosSignTx_TezosTransactionOp* other) {
  using std::swap;
  parameters_.Swap(&other->parameters_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_, other->source_);
  swap(destination_, other->destination_);
  swap(fee_, other->fee_);
  swap(counter_, other->counter_);
  swap(gas_limit_, other->gas_limit_);
  swap(storage_limit_, other->storage_limit_);
  swap(amount_, other->amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosSignTx_TezosTransactionOp::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosSignTx_TezosOriginationOp::InitAsDefaultInstance() {
  ::hw::trezor::messages::tezos::_TezosSignTx_TezosOriginationOp_default_instance_._instance.get_mutable()->source_ = const_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID*>(
      ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosSignTx_TezosOriginationOp::kSourceFieldNumber;
const int TezosSignTx_TezosOriginationOp::kFeeFieldNumber;
const int TezosSignTx_TezosOriginationOp::kCounterFieldNumber;
const int TezosSignTx_TezosOriginationOp::kGasLimitFieldNumber;
const int TezosSignTx_TezosOriginationOp::kStorageLimitFieldNumber;
const int TezosSignTx_TezosOriginationOp::kManagerPubkeyFieldNumber;
const int TezosSignTx_TezosOriginationOp::kBalanceFieldNumber;
const int TezosSignTx_TezosOriginationOp::kSpendableFieldNumber;
const int TezosSignTx_TezosOriginationOp::kDelegatableFieldNumber;
const int TezosSignTx_TezosOriginationOp::kDelegateFieldNumber;
const int TezosSignTx_TezosOriginationOp::kScriptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosSignTx_TezosOriginationOp::TezosSignTx_TezosOriginationOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosOriginationOp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
}
TezosSignTx_TezosOriginationOp::TezosSignTx_TezosOriginationOp(const TezosSignTx_TezosOriginationOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  manager_pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_manager_pubkey()) {
    manager_pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manager_pubkey_);
  }
  delegate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_delegate()) {
    delegate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delegate_);
  }
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_script()) {
    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
  if (from.has_source()) {
    source_ = new ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID(*from.source_);
  } else {
    source_ = NULL;
  }
  ::memcpy(&fee_, &from.fee_,
    static_cast<size_t>(reinterpret_cast<char*>(&delegatable_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(delegatable_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
}

void TezosSignTx_TezosOriginationOp::SharedCtor() {
  manager_pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delegate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delegatable_) -
      reinterpret_cast<char*>(&source_)) + sizeof(delegatable_));
}

TezosSignTx_TezosOriginationOp::~TezosSignTx_TezosOriginationOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  SharedDtor();
}

void TezosSignTx_TezosOriginationOp::SharedDtor() {
  manager_pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delegate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_;
}

void TezosSignTx_TezosOriginationOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosSignTx_TezosOriginationOp::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosSignTx_TezosOriginationOp& TezosSignTx_TezosOriginationOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosOriginationOp.base);
  return *internal_default_instance();
}


void TezosSignTx_TezosOriginationOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      manager_pubkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      delegate_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      script_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(source_ != NULL);
      source_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&fee_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&storage_limit_) -
        reinterpret_cast<char*>(&fee_)) + sizeof(storage_limit_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&balance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delegatable_) -
        reinterpret_cast<char*>(&balance_)) + sizeof(delegatable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosSignTx_TezosOriginationOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fee = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fee();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 counter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_gas_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 storage_limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_storage_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &storage_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes manager_pubkey = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_manager_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 balance = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool spendable = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_spendable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &spendable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool delegatable = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_delegatable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delegatable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes delegate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_delegate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes script = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_script()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  return false;
#undef DO_
}

void TezosSignTx_TezosOriginationOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->fee(), output);
  }

  // optional uint64 counter = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->counter(), output);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gas_limit(), output);
  }

  // optional uint64 storage_limit = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->storage_limit(), output);
  }

  // optional bytes manager_pubkey = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->manager_pubkey(), output);
  }

  // optional uint64 balance = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->balance(), output);
  }

  // optional bool spendable = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->spendable(), output);
  }

  // optional bool delegatable = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->delegatable(), output);
  }

  // optional bytes delegate = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->delegate(), output);
  }

  // optional bytes script = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->script(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
}

::google::protobuf::uint8* TezosSignTx_TezosOriginationOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->fee(), target);
  }

  // optional uint64 counter = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->counter(), target);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gas_limit(), target);
  }

  // optional uint64 storage_limit = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->storage_limit(), target);
  }

  // optional bytes manager_pubkey = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->manager_pubkey(), target);
  }

  // optional uint64 balance = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->balance(), target);
  }

  // optional bool spendable = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->spendable(), target);
  }

  // optional bool delegatable = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->delegatable(), target);
  }

  // optional bytes delegate = 10;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->delegate(), target);
  }

  // optional bytes script = 11;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->script(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  return target;
}

size_t TezosSignTx_TezosOriginationOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes manager_pubkey = 6;
    if (has_manager_pubkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->manager_pubkey());
    }

    // optional bytes delegate = 10;
    if (has_delegate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->delegate());
    }

    // optional bytes script = 11;
    if (has_script()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->script());
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_);
    }

    // optional uint64 fee = 2;
    if (has_fee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fee());
    }

    // optional uint64 counter = 3;
    if (has_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->counter());
    }

    // optional uint64 gas_limit = 4;
    if (has_gas_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_limit());
    }

    // optional uint64 storage_limit = 5;
    if (has_storage_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->storage_limit());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint64 balance = 7;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->balance());
    }

    // optional bool spendable = 8;
    if (has_spendable()) {
      total_size += 1 + 1;
    }

    // optional bool delegatable = 9;
    if (has_delegatable()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosSignTx_TezosOriginationOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosSignTx_TezosOriginationOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosSignTx_TezosOriginationOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
    MergeFrom(*source);
  }
}

void TezosSignTx_TezosOriginationOp::MergeFrom(const TezosSignTx_TezosOriginationOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_manager_pubkey();
      manager_pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manager_pubkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_delegate();
      delegate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delegate_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_script();
      script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_source()->::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::MergeFrom(from.source());
    }
    if (cached_has_bits & 0x00000010u) {
      fee_ = from.fee_;
    }
    if (cached_has_bits & 0x00000020u) {
      counter_ = from.counter_;
    }
    if (cached_has_bits & 0x00000040u) {
      gas_limit_ = from.gas_limit_;
    }
    if (cached_has_bits & 0x00000080u) {
      storage_limit_ = from.storage_limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      balance_ = from.balance_;
    }
    if (cached_has_bits & 0x00000200u) {
      spendable_ = from.spendable_;
    }
    if (cached_has_bits & 0x00000400u) {
      delegatable_ = from.delegatable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TezosSignTx_TezosOriginationOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosSignTx_TezosOriginationOp::CopyFrom(const TezosSignTx_TezosOriginationOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosSignTx_TezosOriginationOp::IsInitialized() const {
  return true;
}

void TezosSignTx_TezosOriginationOp::Swap(TezosSignTx_TezosOriginationOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosSignTx_TezosOriginationOp::InternalSwap(TezosSignTx_TezosOriginationOp* other) {
  using std::swap;
  manager_pubkey_.Swap(&other->manager_pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  delegate_.Swap(&other->delegate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  script_.Swap(&other->script_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_, other->source_);
  swap(fee_, other->fee_);
  swap(counter_, other->counter_);
  swap(gas_limit_, other->gas_limit_);
  swap(storage_limit_, other->storage_limit_);
  swap(balance_, other->balance_);
  swap(spendable_, other->spendable_);
  swap(delegatable_, other->delegatable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosSignTx_TezosOriginationOp::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosSignTx_TezosDelegationOp::InitAsDefaultInstance() {
  ::hw::trezor::messages::tezos::_TezosSignTx_TezosDelegationOp_default_instance_._instance.get_mutable()->source_ = const_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID*>(
      ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosSignTx_TezosDelegationOp::kSourceFieldNumber;
const int TezosSignTx_TezosDelegationOp::kFeeFieldNumber;
const int TezosSignTx_TezosDelegationOp::kCounterFieldNumber;
const int TezosSignTx_TezosDelegationOp::kGasLimitFieldNumber;
const int TezosSignTx_TezosDelegationOp::kStorageLimitFieldNumber;
const int TezosSignTx_TezosDelegationOp::kDelegateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosSignTx_TezosDelegationOp::TezosSignTx_TezosDelegationOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosDelegationOp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
}
TezosSignTx_TezosDelegationOp::TezosSignTx_TezosDelegationOp(const TezosSignTx_TezosDelegationOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  delegate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_delegate()) {
    delegate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delegate_);
  }
  if (from.has_source()) {
    source_ = new ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID(*from.source_);
  } else {
    source_ = NULL;
  }
  ::memcpy(&fee_, &from.fee_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_limit_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(storage_limit_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
}

void TezosSignTx_TezosDelegationOp::SharedCtor() {
  delegate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&storage_limit_) -
      reinterpret_cast<char*>(&source_)) + sizeof(storage_limit_));
}

TezosSignTx_TezosDelegationOp::~TezosSignTx_TezosDelegationOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  SharedDtor();
}

void TezosSignTx_TezosDelegationOp::SharedDtor() {
  delegate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_;
}

void TezosSignTx_TezosDelegationOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosSignTx_TezosDelegationOp::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosSignTx_TezosDelegationOp& TezosSignTx_TezosDelegationOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx_TezosDelegationOp.base);
  return *internal_default_instance();
}


void TezosSignTx_TezosDelegationOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      delegate_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(source_ != NULL);
      source_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&fee_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&storage_limit_) -
        reinterpret_cast<char*>(&fee_)) + sizeof(storage_limit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosSignTx_TezosDelegationOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fee = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fee();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 counter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_gas_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 storage_limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_storage_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &storage_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes delegate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_delegate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  return false;
#undef DO_
}

void TezosSignTx_TezosDelegationOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->fee(), output);
  }

  // optional uint64 counter = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->counter(), output);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gas_limit(), output);
  }

  // optional uint64 storage_limit = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->storage_limit(), output);
  }

  // optional bytes delegate = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->delegate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
}

::google::protobuf::uint8* TezosSignTx_TezosDelegationOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->fee(), target);
  }

  // optional uint64 counter = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->counter(), target);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gas_limit(), target);
  }

  // optional uint64 storage_limit = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->storage_limit(), target);
  }

  // optional bytes delegate = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->delegate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  return target;
}

size_t TezosSignTx_TezosDelegationOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes delegate = 6;
    if (has_delegate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->delegate());
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosContractID source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_);
    }

    // optional uint64 fee = 2;
    if (has_fee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fee());
    }

    // optional uint64 counter = 3;
    if (has_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->counter());
    }

    // optional uint64 gas_limit = 4;
    if (has_gas_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_limit());
    }

    // optional uint64 storage_limit = 5;
    if (has_storage_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->storage_limit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosSignTx_TezosDelegationOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosSignTx_TezosDelegationOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosSignTx_TezosDelegationOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
    MergeFrom(*source);
  }
}

void TezosSignTx_TezosDelegationOp::MergeFrom(const TezosSignTx_TezosDelegationOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_delegate();
      delegate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delegate_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_source()->::hw::trezor::messages::tezos::TezosSignTx_TezosContractID::MergeFrom(from.source());
    }
    if (cached_has_bits & 0x00000004u) {
      fee_ = from.fee_;
    }
    if (cached_has_bits & 0x00000008u) {
      counter_ = from.counter_;
    }
    if (cached_has_bits & 0x00000010u) {
      gas_limit_ = from.gas_limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      storage_limit_ = from.storage_limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TezosSignTx_TezosDelegationOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosSignTx_TezosDelegationOp::CopyFrom(const TezosSignTx_TezosDelegationOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosSignTx_TezosDelegationOp::IsInitialized() const {
  return true;
}

void TezosSignTx_TezosDelegationOp::Swap(TezosSignTx_TezosDelegationOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosSignTx_TezosDelegationOp::InternalSwap(TezosSignTx_TezosDelegationOp* other) {
  using std::swap;
  delegate_.Swap(&other->delegate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_, other->source_);
  swap(fee_, other->fee_);
  swap(counter_, other->counter_);
  swap(gas_limit_, other->gas_limit_);
  swap(storage_limit_, other->storage_limit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosSignTx_TezosDelegationOp::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosSignTx::InitAsDefaultInstance() {
  ::hw::trezor::messages::tezos::_TezosSignTx_default_instance_._instance.get_mutable()->reveal_ = const_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp*>(
      ::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp::internal_default_instance());
  ::hw::trezor::messages::tezos::_TezosSignTx_default_instance_._instance.get_mutable()->transaction_ = const_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp*>(
      ::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp::internal_default_instance());
  ::hw::trezor::messages::tezos::_TezosSignTx_default_instance_._instance.get_mutable()->origination_ = const_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp*>(
      ::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp::internal_default_instance());
  ::hw::trezor::messages::tezos::_TezosSignTx_default_instance_._instance.get_mutable()->delegation_ = const_cast< ::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp*>(
      ::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosSignTx::kAddressNFieldNumber;
const int TezosSignTx::kBranchFieldNumber;
const int TezosSignTx::kRevealFieldNumber;
const int TezosSignTx::kTransactionFieldNumber;
const int TezosSignTx::kOriginationFieldNumber;
const int TezosSignTx::kDelegationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosSignTx::TezosSignTx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosSignTx)
}
TezosSignTx::TezosSignTx(const TezosSignTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_branch()) {
    branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
  }
  if (from.has_reveal()) {
    reveal_ = new ::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp(*from.reveal_);
  } else {
    reveal_ = NULL;
  }
  if (from.has_transaction()) {
    transaction_ = new ::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp(*from.transaction_);
  } else {
    transaction_ = NULL;
  }
  if (from.has_origination()) {
    origination_ = new ::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp(*from.origination_);
  } else {
    origination_ = NULL;
  }
  if (from.has_delegation()) {
    delegation_ = new ::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp(*from.delegation_);
  } else {
    delegation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosSignTx)
}

void TezosSignTx::SharedCtor() {
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reveal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delegation_) -
      reinterpret_cast<char*>(&reveal_)) + sizeof(delegation_));
}

TezosSignTx::~TezosSignTx() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosSignTx)
  SharedDtor();
}

void TezosSignTx::SharedDtor() {
  branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete reveal_;
  if (this != internal_default_instance()) delete transaction_;
  if (this != internal_default_instance()) delete origination_;
  if (this != internal_default_instance()) delete delegation_;
}

void TezosSignTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosSignTx::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosSignTx& TezosSignTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosSignTx.base);
  return *internal_default_instance();
}


void TezosSignTx::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosSignTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      branch_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(reveal_ != NULL);
      reveal_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(transaction_ != NULL);
      transaction_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(origination_ != NULL);
      origination_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(delegation_ != NULL);
      delegation_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosSignTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosSignTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes branch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_branch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp reveal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reveal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp transaction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp origination = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp delegation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delegation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosSignTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosSignTx)
  return false;
#undef DO_
}

void TezosSignTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosSignTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes branch = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->branch(), output);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp reveal = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_reveal(), output);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp transaction = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_transaction(), output);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp origination = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_origination(), output);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp delegation = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_delegation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosSignTx)
}

::google::protobuf::uint8* TezosSignTx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosSignTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional bytes branch = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->branch(), target);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp reveal = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_reveal(), deterministic, target);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp transaction = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_transaction(), deterministic, target);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp origination = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_origination(), deterministic, target);
  }

  // optional .hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp delegation = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_delegation(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosSignTx)
  return target;
}

size_t TezosSignTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosSignTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes branch = 2;
    if (has_branch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->branch());
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosRevealOp reveal = 3;
    if (has_reveal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reveal_);
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosTransactionOp transaction = 4;
    if (has_transaction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *transaction_);
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosOriginationOp origination = 5;
    if (has_origination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *origination_);
    }

    // optional .hw.trezor.messages.tezos.TezosSignTx.TezosDelegationOp delegation = 6;
    if (has_delegation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *delegation_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosSignTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosSignTx)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosSignTx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosSignTx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosSignTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosSignTx)
    MergeFrom(*source);
  }
}

void TezosSignTx::MergeFrom(const TezosSignTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosSignTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_branch();
      branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_reveal()->::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp::MergeFrom(from.reveal());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_transaction()->::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp::MergeFrom(from.transaction());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_origination()->::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp::MergeFrom(from.origination());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_delegation()->::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp::MergeFrom(from.delegation());
    }
  }
}

void TezosSignTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosSignTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosSignTx::CopyFrom(const TezosSignTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosSignTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosSignTx::IsInitialized() const {
  return true;
}

void TezosSignTx::Swap(TezosSignTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosSignTx::InternalSwap(TezosSignTx* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  branch_.Swap(&other->branch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reveal_, other->reveal_);
  swap(transaction_, other->transaction_);
  swap(origination_, other->origination_);
  swap(delegation_, other->delegation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosSignTx::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TezosSignedTx::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TezosSignedTx::kSignatureFieldNumber;
const int TezosSignedTx::kSigOpContentsFieldNumber;
const int TezosSignedTx::kOperationHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TezosSignedTx::TezosSignedTx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dtezos_2eproto::scc_info_TezosSignedTx.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.tezos.TezosSignedTx)
}
TezosSignedTx::TezosSignedTx(const TezosSignedTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  sig_op_contents_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sig_op_contents()) {
    sig_op_contents_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_op_contents_);
  }
  operation_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_operation_hash()) {
    operation_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_hash_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.tezos.TezosSignedTx)
}

void TezosSignedTx::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sig_op_contents_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TezosSignedTx::~TezosSignedTx() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.tezos.TezosSignedTx)
  SharedDtor();
}

void TezosSignedTx::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sig_op_contents_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TezosSignedTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TezosSignedTx::descriptor() {
  ::protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TezosSignedTx& TezosSignedTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dtezos_2eproto::scc_info_TezosSignedTx.base);
  return *internal_default_instance();
}


void TezosSignedTx::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.tezos.TezosSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      signature_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sig_op_contents_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      operation_hash_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TezosSignedTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.tezos.TezosSignedTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.tezos.TezosSignedTx.signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sig_op_contents = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sig_op_contents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string operation_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_hash()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operation_hash().data(), static_cast<int>(this->operation_hash().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.tezos.TezosSignedTx.operation_hash");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.tezos.TezosSignedTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.tezos.TezosSignedTx)
  return false;
#undef DO_
}

void TezosSignedTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.tezos.TezosSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string signature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.tezos.TezosSignedTx.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // optional bytes sig_op_contents = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sig_op_contents(), output);
  }

  // optional string operation_hash = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operation_hash().data(), static_cast<int>(this->operation_hash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.tezos.TezosSignedTx.operation_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operation_hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.tezos.TezosSignedTx)
}

::google::protobuf::uint8* TezosSignedTx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.tezos.TezosSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string signature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.tezos.TezosSignedTx.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // optional bytes sig_op_contents = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sig_op_contents(), target);
  }

  // optional string operation_hash = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operation_hash().data(), static_cast<int>(this->operation_hash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.tezos.TezosSignedTx.operation_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operation_hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.tezos.TezosSignedTx)
  return target;
}

size_t TezosSignedTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.tezos.TezosSignedTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string signature = 1;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signature());
    }

    // optional bytes sig_op_contents = 2;
    if (has_sig_op_contents()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sig_op_contents());
    }

    // optional string operation_hash = 3;
    if (has_operation_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operation_hash());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TezosSignedTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.tezos.TezosSignedTx)
  GOOGLE_DCHECK_NE(&from, this);
  const TezosSignedTx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TezosSignedTx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.tezos.TezosSignedTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.tezos.TezosSignedTx)
    MergeFrom(*source);
  }
}

void TezosSignedTx::MergeFrom(const TezosSignedTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.tezos.TezosSignedTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sig_op_contents();
      sig_op_contents_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_op_contents_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_operation_hash();
      operation_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_hash_);
    }
  }
}

void TezosSignedTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.tezos.TezosSignedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TezosSignedTx::CopyFrom(const TezosSignedTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.tezos.TezosSignedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TezosSignedTx::IsInitialized() const {
  return true;
}

void TezosSignedTx::Swap(TezosSignedTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TezosSignedTx::InternalSwap(TezosSignedTx* other) {
  using std::swap;
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sig_op_contents_.Swap(&other->sig_op_contents_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  operation_hash_.Swap(&other->operation_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TezosSignedTx::GetMetadata() const {
  protobuf_messages_2dtezos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dtezos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tezos
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosGetAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosGetAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosGetAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosGetPublicKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosGetPublicKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosGetPublicKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosPublicKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosPublicKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosPublicKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosSignTx_TezosContractID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosSignTx_TezosRevealOp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosSignTx_TezosTransactionOp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosSignTx_TezosOriginationOp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosSignTx_TezosDelegationOp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosSignTx* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosSignTx >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosSignTx >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::tezos::TezosSignedTx* Arena::CreateMaybeMessage< ::hw::trezor::messages::tezos::TezosSignedTx >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::tezos::TezosSignedTx >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
