// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-management.proto

#include "messages-management.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace hw {
namespace trezor {
namespace messages {
namespace management {
class InitializeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Initialize> _instance;
} _Initialize_default_instance_;
class GetFeaturesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFeatures> _instance;
} _GetFeatures_default_instance_;
class FeaturesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Features> _instance;
} _Features_default_instance_;
class ClearSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClearSession> _instance;
} _ClearSession_default_instance_;
class ApplySettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplySettings> _instance;
} _ApplySettings_default_instance_;
class ApplyFlagsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplyFlags> _instance;
} _ApplyFlags_default_instance_;
class ChangePinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangePin> _instance;
} _ChangePin_default_instance_;
class ChangeWipeCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeWipeCode> _instance;
} _ChangeWipeCode_default_instance_;
class SdProtectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SdProtect> _instance;
} _SdProtect_default_instance_;
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping> _instance;
} _Ping_default_instance_;
class CancelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cancel> _instance;
} _Cancel_default_instance_;
class GetEntropyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetEntropy> _instance;
} _GetEntropy_default_instance_;
class EntropyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Entropy> _instance;
} _Entropy_default_instance_;
class WipeDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WipeDevice> _instance;
} _WipeDevice_default_instance_;
class LoadDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadDevice> _instance;
} _LoadDevice_default_instance_;
class ResetDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetDevice> _instance;
} _ResetDevice_default_instance_;
class BackupDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BackupDevice> _instance;
} _BackupDevice_default_instance_;
class EntropyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntropyRequest> _instance;
} _EntropyRequest_default_instance_;
class EntropyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntropyAck> _instance;
} _EntropyAck_default_instance_;
class RecoveryDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecoveryDevice> _instance;
} _RecoveryDevice_default_instance_;
class WordRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WordRequest> _instance;
} _WordRequest_default_instance_;
class WordAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WordAck> _instance;
} _WordAck_default_instance_;
class SetU2FCounterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetU2FCounter> _instance;
} _SetU2FCounter_default_instance_;
class GetNextU2FCounterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNextU2FCounter> _instance;
} _GetNextU2FCounter_default_instance_;
class NextU2FCounterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NextU2FCounter> _instance;
} _NextU2FCounter_default_instance_;
}  // namespace management
}  // namespace messages
}  // namespace trezor
}  // namespace hw
static void InitDefaultsInitialize_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_Initialize_default_instance_;
    new (ptr) ::hw::trezor::messages::management::Initialize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::Initialize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Initialize_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInitialize_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsGetFeatures_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_GetFeatures_default_instance_;
    new (ptr) ::hw::trezor::messages::management::GetFeatures();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::GetFeatures::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetFeatures_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetFeatures_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsFeatures_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_Features_default_instance_;
    new (ptr) ::hw::trezor::messages::management::Features();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::Features::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Features_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFeatures_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsClearSession_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_ClearSession_default_instance_;
    new (ptr) ::hw::trezor::messages::management::ClearSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::ClearSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClearSession_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClearSession_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsApplySettings_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_ApplySettings_default_instance_;
    new (ptr) ::hw::trezor::messages::management::ApplySettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::ApplySettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApplySettings_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApplySettings_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsApplyFlags_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_ApplyFlags_default_instance_;
    new (ptr) ::hw::trezor::messages::management::ApplyFlags();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::ApplyFlags::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApplyFlags_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApplyFlags_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsChangePin_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_ChangePin_default_instance_;
    new (ptr) ::hw::trezor::messages::management::ChangePin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::ChangePin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangePin_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangePin_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsChangeWipeCode_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_ChangeWipeCode_default_instance_;
    new (ptr) ::hw::trezor::messages::management::ChangeWipeCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::ChangeWipeCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangeWipeCode_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangeWipeCode_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsSdProtect_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_SdProtect_default_instance_;
    new (ptr) ::hw::trezor::messages::management::SdProtect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::SdProtect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SdProtect_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSdProtect_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsPing_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_Ping_default_instance_;
    new (ptr) ::hw::trezor::messages::management::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::Ping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ping_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPing_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsCancel_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_Cancel_default_instance_;
    new (ptr) ::hw::trezor::messages::management::Cancel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::Cancel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Cancel_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCancel_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsGetEntropy_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_GetEntropy_default_instance_;
    new (ptr) ::hw::trezor::messages::management::GetEntropy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::GetEntropy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetEntropy_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetEntropy_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsEntropy_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_Entropy_default_instance_;
    new (ptr) ::hw::trezor::messages::management::Entropy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::Entropy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Entropy_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntropy_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsWipeDevice_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_WipeDevice_default_instance_;
    new (ptr) ::hw::trezor::messages::management::WipeDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::WipeDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WipeDevice_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWipeDevice_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsLoadDevice_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.DefaultConstruct();
  *::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.get_mutable() = ::std::string("en-US", 5);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.get_mutable());
  {
    void* ptr = &::hw::trezor::messages::management::_LoadDevice_default_instance_;
    new (ptr) ::hw::trezor::messages::management::LoadDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::LoadDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoadDevice_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoadDevice_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsResetDevice_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.DefaultConstruct();
  *::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.get_mutable() = ::std::string("en-US", 5);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.get_mutable());
  {
    void* ptr = &::hw::trezor::messages::management::_ResetDevice_default_instance_;
    new (ptr) ::hw::trezor::messages::management::ResetDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::ResetDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResetDevice_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResetDevice_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsBackupDevice_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_BackupDevice_default_instance_;
    new (ptr) ::hw::trezor::messages::management::BackupDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::BackupDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BackupDevice_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBackupDevice_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsEntropyRequest_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_EntropyRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::management::EntropyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::EntropyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntropyRequest_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntropyRequest_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsEntropyAck_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_EntropyAck_default_instance_;
    new (ptr) ::hw::trezor::messages::management::EntropyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::EntropyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntropyAck_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntropyAck_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsRecoveryDevice_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.DefaultConstruct();
  *::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.get_mutable() = ::std::string("en-US", 5);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.get_mutable());
  {
    void* ptr = &::hw::trezor::messages::management::_RecoveryDevice_default_instance_;
    new (ptr) ::hw::trezor::messages::management::RecoveryDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::RecoveryDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecoveryDevice_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecoveryDevice_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsWordRequest_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_WordRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::management::WordRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::WordRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WordRequest_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWordRequest_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsWordAck_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_WordAck_default_instance_;
    new (ptr) ::hw::trezor::messages::management::WordAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::WordAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WordAck_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWordAck_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsSetU2FCounter_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_SetU2FCounter_default_instance_;
    new (ptr) ::hw::trezor::messages::management::SetU2FCounter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::SetU2FCounter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetU2FCounter_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetU2FCounter_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsGetNextU2FCounter_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_GetNextU2FCounter_default_instance_;
    new (ptr) ::hw::trezor::messages::management::GetNextU2FCounter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::GetNextU2FCounter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetNextU2FCounter_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetNextU2FCounter_messages_2dmanagement_2eproto}, {}};

static void InitDefaultsNextU2FCounter_messages_2dmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::management::_NextU2FCounter_default_instance_;
    new (ptr) ::hw::trezor::messages::management::NextU2FCounter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::management::NextU2FCounter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NextU2FCounter_messages_2dmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNextU2FCounter_messages_2dmanagement_2eproto}, {}};

void InitDefaults_messages_2dmanagement_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Initialize_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetFeatures_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Features_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClearSession_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplySettings_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplyFlags_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangePin_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeWipeCode_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SdProtect_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ping_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cancel_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetEntropy_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Entropy_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WipeDevice_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoadDevice_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetDevice_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BackupDevice_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntropyRequest_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntropyAck_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecoveryDevice_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WordRequest_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WordAck_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetU2FCounter_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNextU2FCounter_messages_2dmanagement_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NextU2FCounter_messages_2dmanagement_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_messages_2dmanagement_2eproto[25];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_messages_2dmanagement_2eproto[6];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_messages_2dmanagement_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_messages_2dmanagement_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Initialize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Initialize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Initialize, state_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Initialize, skip_passphrase_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::GetFeatures, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::GetFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, vendor_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, major_version_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, minor_version_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, patch_version_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, bootloader_mode_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, device_id_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, pin_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, passphrase_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, language_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, label_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, initialized_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, revision_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, bootloader_hash_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, imported_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, pin_cached_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, passphrase_cached_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, firmware_present_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, needs_backup_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, flags_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, model_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, fw_major_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, fw_minor_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, fw_patch_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, fw_vendor_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, fw_vendor_keys_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, unfinished_backup_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, no_backup_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, recovery_mode_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, capabilities_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, backup_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, sd_card_present_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, sd_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Features, wipe_code_protection_),
  0,
  9,
  10,
  11,
  12,
  1,
  13,
  14,
  2,
  3,
  15,
  4,
  5,
  16,
  17,
  18,
  19,
  24,
  20,
  6,
  21,
  22,
  23,
  7,
  8,
  25,
  26,
  27,
  ~0u,
  28,
  29,
  30,
  31,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ClearSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ClearSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplySettings, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplySettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplySettings, language_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplySettings, label_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplySettings, use_passphrase_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplySettings, homescreen_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplySettings, passphrase_source_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplySettings, auto_lock_delay_ms_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplySettings, display_rotation_),
  0,
  1,
  3,
  2,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplyFlags, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplyFlags, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ApplyFlags, flags_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ChangePin, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ChangePin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ChangePin, remove_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ChangeWipeCode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ChangeWipeCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ChangeWipeCode, remove_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::SdProtect, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::SdProtect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::SdProtect, operation_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Ping, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Ping, message_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Ping, button_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Ping, pin_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Ping, passphrase_protection_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Cancel, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Cancel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::GetEntropy, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::GetEntropy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::GetEntropy, size_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Entropy, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Entropy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::Entropy, entropy_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::WipeDevice, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::WipeDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, mnemonics_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, pin_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, passphrase_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, language_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, label_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, skip_checksum_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, u2f_counter_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, needs_backup_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::LoadDevice, no_backup_),
  ~0u,
  0,
  3,
  1,
  2,
  4,
  7,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, display_random_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, strength_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, passphrase_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, pin_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, language_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, label_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, u2f_counter_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, skip_backup_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, no_backup_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::ResetDevice, backup_type_),
  2,
  9,
  3,
  4,
  0,
  1,
  6,
  5,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::BackupDevice, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::BackupDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::EntropyRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::EntropyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::EntropyAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::EntropyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::EntropyAck, entropy_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, word_count_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, passphrase_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, pin_protection_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, language_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, label_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, enforce_wordlist_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, u2f_counter_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::RecoveryDevice, dry_run_),
  2,
  3,
  4,
  0,
  1,
  5,
  7,
  8,
  6,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::WordRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::WordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::WordRequest, type_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::WordAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::WordAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::WordAck, word_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::SetU2FCounter, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::SetU2FCounter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::SetU2FCounter, u2f_counter_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::GetNextU2FCounter, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::GetNextU2FCounter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::NextU2FCounter, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::NextU2FCounter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::management::NextU2FCounter, u2f_counter_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::hw::trezor::messages::management::Initialize)},
  { 9, 14, sizeof(::hw::trezor::messages::management::GetFeatures)},
  { 14, 52, sizeof(::hw::trezor::messages::management::Features)},
  { 85, 90, sizeof(::hw::trezor::messages::management::ClearSession)},
  { 90, 102, sizeof(::hw::trezor::messages::management::ApplySettings)},
  { 109, 115, sizeof(::hw::trezor::messages::management::ApplyFlags)},
  { 116, 122, sizeof(::hw::trezor::messages::management::ChangePin)},
  { 123, 129, sizeof(::hw::trezor::messages::management::ChangeWipeCode)},
  { 130, 136, sizeof(::hw::trezor::messages::management::SdProtect)},
  { 137, 146, sizeof(::hw::trezor::messages::management::Ping)},
  { 150, 155, sizeof(::hw::trezor::messages::management::Cancel)},
  { 155, 161, sizeof(::hw::trezor::messages::management::GetEntropy)},
  { 162, 168, sizeof(::hw::trezor::messages::management::Entropy)},
  { 169, 174, sizeof(::hw::trezor::messages::management::WipeDevice)},
  { 174, 188, sizeof(::hw::trezor::messages::management::LoadDevice)},
  { 197, 212, sizeof(::hw::trezor::messages::management::ResetDevice)},
  { 222, 227, sizeof(::hw::trezor::messages::management::BackupDevice)},
  { 227, 232, sizeof(::hw::trezor::messages::management::EntropyRequest)},
  { 232, 238, sizeof(::hw::trezor::messages::management::EntropyAck)},
  { 239, 253, sizeof(::hw::trezor::messages::management::RecoveryDevice)},
  { 262, 268, sizeof(::hw::trezor::messages::management::WordRequest)},
  { 269, 275, sizeof(::hw::trezor::messages::management::WordAck)},
  { 276, 282, sizeof(::hw::trezor::messages::management::SetU2FCounter)},
  { 283, 288, sizeof(::hw::trezor::messages::management::GetNextU2FCounter)},
  { 288, 294, sizeof(::hw::trezor::messages::management::NextU2FCounter)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_Initialize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_GetFeatures_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_Features_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_ClearSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_ApplySettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_ApplyFlags_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_ChangePin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_ChangeWipeCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_SdProtect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_Cancel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_GetEntropy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_Entropy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_WipeDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_LoadDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_ResetDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_BackupDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_EntropyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_EntropyAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_RecoveryDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_WordRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_WordAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_SetU2FCounter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_GetNextU2FCounter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::management::_NextU2FCounter_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_messages_2dmanagement_2eproto = {
  {}, AddDescriptors_messages_2dmanagement_2eproto, "messages-management.proto", schemas,
  file_default_instances, TableStruct_messages_2dmanagement_2eproto::offsets,
  file_level_metadata_messages_2dmanagement_2eproto, 25, file_level_enum_descriptors_messages_2dmanagement_2eproto, file_level_service_descriptors_messages_2dmanagement_2eproto,
};

const char descriptor_table_protodef_messages_2dmanagement_2eproto[] =
  "\n\031messages-management.proto\022\035hw.trezor.m"
  "essages.management\"4\n\nInitialize\022\r\n\005stat"
  "e\030\001 \001(\014\022\027\n\017skip_passphrase\030\002 \001(\010\"\r\n\013GetF"
  "eatures\"\312\t\n\010Features\022\016\n\006vendor\030\001 \001(\t\022\025\n\r"
  "major_version\030\002 \001(\r\022\025\n\rminor_version\030\003 \001"
  "(\r\022\025\n\rpatch_version\030\004 \001(\r\022\027\n\017bootloader_"
  "mode\030\005 \001(\010\022\021\n\tdevice_id\030\006 \001(\t\022\026\n\016pin_pro"
  "tection\030\007 \001(\010\022\035\n\025passphrase_protection\030\010"
  " \001(\010\022\020\n\010language\030\t \001(\t\022\r\n\005label\030\n \001(\t\022\023\n"
  "\013initialized\030\014 \001(\010\022\020\n\010revision\030\r \001(\014\022\027\n\017"
  "bootloader_hash\030\016 \001(\014\022\020\n\010imported\030\017 \001(\010\022"
  "\022\n\npin_cached\030\020 \001(\010\022\031\n\021passphrase_cached"
  "\030\021 \001(\010\022\030\n\020firmware_present\030\022 \001(\010\022\024\n\014need"
  "s_backup\030\023 \001(\010\022\r\n\005flags\030\024 \001(\r\022\r\n\005model\030\025"
  " \001(\t\022\020\n\010fw_major\030\026 \001(\r\022\020\n\010fw_minor\030\027 \001(\r"
  "\022\020\n\010fw_patch\030\030 \001(\r\022\021\n\tfw_vendor\030\031 \001(\t\022\026\n"
  "\016fw_vendor_keys\030\032 \001(\014\022\031\n\021unfinished_back"
  "up\030\033 \001(\010\022\021\n\tno_backup\030\034 \001(\010\022\025\n\rrecovery_"
  "mode\030\035 \001(\010\022H\n\014capabilities\030\036 \003(\01622.hw.tr"
  "ezor.messages.management.Features.Capabi"
  "lity\022>\n\013backup_type\030\037 \001(\0162).hw.trezor.me"
  "ssages.management.BackupType\022\027\n\017sd_card_"
  "present\030  \001(\010\022\025\n\rsd_protection\030! \001(\010\022\034\n\024"
  "wipe_code_protection\030\" \001(\010\"\227\003\n\nCapabilit"
  "y\022\026\n\022Capability_Bitcoin\020\001\022\033\n\027Capability_"
  "Bitcoin_like\020\002\022\026\n\022Capability_Binance\020\003\022\026"
  "\n\022Capability_Cardano\020\004\022\025\n\021Capability_Cry"
  "pto\020\005\022\022\n\016Capability_EOS\020\006\022\027\n\023Capability_"
  "Ethereum\020\007\022\023\n\017Capability_Lisk\020\010\022\025\n\021Capab"
  "ility_Monero\020\t\022\022\n\016Capability_NEM\020\n\022\025\n\021Ca"
  "pability_Ripple\020\013\022\026\n\022Capability_Stellar\020"
  "\014\022\024\n\020Capability_Tezos\020\r\022\022\n\016Capability_U2"
  "F\020\016\022\023\n\017Capability_Beam\020\021\022\025\n\021Capability_S"
  "hamir\020\017\022\033\n\027Capability_ShamirGroups\020\020\"\016\n\014"
  "ClearSession\"\247\002\n\rApplySettings\022\020\n\010langua"
  "ge\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022\026\n\016use_passphras"
  "e\030\003 \001(\010\022\022\n\nhomescreen\030\004 \001(\014\022\\\n\021passphras"
  "e_source\030\005 \001(\0162A.hw.trezor.messages.mana"
  "gement.ApplySettings.PassphraseSourceTyp"
  "e\022\032\n\022auto_lock_delay_ms\030\006 \001(\r\022\030\n\020display"
  "_rotation\030\007 \001(\r\"5\n\024PassphraseSourceType\022"
  "\007\n\003ASK\020\000\022\n\n\006DEVICE\020\001\022\010\n\004HOST\020\002\"\033\n\nApplyF"
  "lags\022\r\n\005flags\030\001 \001(\r\"\033\n\tChangePin\022\016\n\006remo"
  "ve\030\001 \001(\010\" \n\016ChangeWipeCode\022\016\n\006remove\030\001 \001"
  "(\010\"\237\001\n\tSdProtect\022R\n\toperation\030\001 \001(\0162\?.hw"
  ".trezor.messages.management.SdProtect.Sd"
  "ProtectOperationType\">\n\026SdProtectOperati"
  "onType\022\013\n\007DISABLE\020\000\022\n\n\006ENABLE\020\001\022\013\n\007REFRE"
  "SH\020\002\"i\n\004Ping\022\017\n\007message\030\001 \001(\t\022\031\n\021button_"
  "protection\030\002 \001(\010\022\026\n\016pin_protection\030\003 \001(\010"
  "\022\035\n\025passphrase_protection\030\004 \001(\010\"\010\n\006Cance"
  "l\"\032\n\nGetEntropy\022\014\n\004size\030\001 \002(\r\"\032\n\007Entropy"
  "\022\017\n\007entropy\030\001 \002(\014\"\014\n\nWipeDevice\"\310\001\n\nLoad"
  "Device\022\021\n\tmnemonics\030\001 \003(\t\022\013\n\003pin\030\003 \001(\t\022\035"
  "\n\025passphrase_protection\030\004 \001(\010\022\027\n\010languag"
  "e\030\005 \001(\t:\005en-US\022\r\n\005label\030\006 \001(\t\022\025\n\rskip_ch"
  "ecksum\030\007 \001(\010\022\023\n\013u2f_counter\030\010 \001(\r\022\024\n\014nee"
  "ds_backup\030\t \001(\010\022\021\n\tno_backup\030\n \001(\010\"\237\002\n\013R"
  "esetDevice\022\026\n\016display_random\030\001 \001(\010\022\025\n\010st"
  "rength\030\002 \001(\r:\003256\022\035\n\025passphrase_protecti"
  "on\030\003 \001(\010\022\026\n\016pin_protection\030\004 \001(\010\022\027\n\010lang"
  "uage\030\005 \001(\t:\005en-US\022\r\n\005label\030\006 \001(\t\022\023\n\013u2f_"
  "counter\030\007 \001(\r\022\023\n\013skip_backup\030\010 \001(\010\022\021\n\tno"
  "_backup\030\t \001(\010\022E\n\013backup_type\030\n \001(\0162).hw."
  "trezor.messages.management.BackupType:\005B"
  "ip39\"\016\n\014BackupDevice\"\020\n\016EntropyRequest\"\035"
  "\n\nEntropyAck\022\017\n\007entropy\030\001 \001(\014\"\357\002\n\016Recove"
  "ryDevice\022\022\n\nword_count\030\001 \001(\r\022\035\n\025passphra"
  "se_protection\030\002 \001(\010\022\026\n\016pin_protection\030\003 "
  "\001(\010\022\027\n\010language\030\004 \001(\t:\005en-US\022\r\n\005label\030\005 "
  "\001(\t\022\030\n\020enforce_wordlist\030\006 \001(\010\022N\n\004type\030\010 "
  "\001(\0162@.hw.trezor.messages.management.Reco"
  "veryDevice.RecoveryDeviceType\022\023\n\013u2f_cou"
  "nter\030\t \001(\r\022\017\n\007dry_run\030\n \001(\010\"Z\n\022RecoveryD"
  "eviceType\022%\n!RecoveryDeviceType_Scramble"
  "dWords\020\000\022\035\n\031RecoveryDeviceType_Matrix\020\001\""
  "\277\001\n\013WordRequest\022H\n\004type\030\001 \001(\0162:.hw.trezo"
  "r.messages.management.WordRequest.WordRe"
  "questType\"f\n\017WordRequestType\022\031\n\025WordRequ"
  "estType_Plain\020\000\022\033\n\027WordRequestType_Matri"
  "x9\020\001\022\033\n\027WordRequestType_Matrix6\020\002\"\027\n\007Wor"
  "dAck\022\014\n\004word\030\001 \002(\t\"$\n\rSetU2FCounter\022\023\n\013u"
  "2f_counter\030\001 \001(\r\"\023\n\021GetNextU2FCounter\"%\n"
  "\016NextU2FCounter\022\023\n\013u2f_counter\030\001 \001(\r*>\n\n"
  "BackupType\022\t\n\005Bip39\020\000\022\020\n\014Slip39_Basic\020\001\022"
  "\023\n\017Slip39_Advanced\020\002B>\n#com.satoshilabs."
  "trezor.lib.protobufB\027TrezorMessageManage"
  "ment"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_messages_2dmanagement_2eproto = {
  false, InitDefaults_messages_2dmanagement_2eproto, 
  descriptor_table_protodef_messages_2dmanagement_2eproto,
  "messages-management.proto", &assign_descriptors_table_messages_2dmanagement_2eproto, 3484,
};

void AddDescriptors_messages_2dmanagement_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_messages_2dmanagement_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messages_2dmanagement_2eproto = []() { AddDescriptors_messages_2dmanagement_2eproto(); return true; }();
namespace hw {
namespace trezor {
namespace messages {
namespace management {
const ::google::protobuf::EnumDescriptor* Features_Capability_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_messages_2dmanagement_2eproto);
  return file_level_enum_descriptors_messages_2dmanagement_2eproto[0];
}
bool Features_Capability_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Features_Capability Features::Capability_Bitcoin;
const Features_Capability Features::Capability_Bitcoin_like;
const Features_Capability Features::Capability_Binance;
const Features_Capability Features::Capability_Cardano;
const Features_Capability Features::Capability_Crypto;
const Features_Capability Features::Capability_EOS;
const Features_Capability Features::Capability_Ethereum;
const Features_Capability Features::Capability_Lisk;
const Features_Capability Features::Capability_Monero;
const Features_Capability Features::Capability_NEM;
const Features_Capability Features::Capability_Ripple;
const Features_Capability Features::Capability_Stellar;
const Features_Capability Features::Capability_Tezos;
const Features_Capability Features::Capability_U2F;
const Features_Capability Features::Capability_Beam;
const Features_Capability Features::Capability_Shamir;
const Features_Capability Features::Capability_ShamirGroups;
const Features_Capability Features::Capability_MIN;
const Features_Capability Features::Capability_MAX;
const int Features::Capability_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ApplySettings_PassphraseSourceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_messages_2dmanagement_2eproto);
  return file_level_enum_descriptors_messages_2dmanagement_2eproto[1];
}
bool ApplySettings_PassphraseSourceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ApplySettings_PassphraseSourceType ApplySettings::ASK;
const ApplySettings_PassphraseSourceType ApplySettings::DEVICE;
const ApplySettings_PassphraseSourceType ApplySettings::HOST;
const ApplySettings_PassphraseSourceType ApplySettings::PassphraseSourceType_MIN;
const ApplySettings_PassphraseSourceType ApplySettings::PassphraseSourceType_MAX;
const int ApplySettings::PassphraseSourceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SdProtect_SdProtectOperationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_messages_2dmanagement_2eproto);
  return file_level_enum_descriptors_messages_2dmanagement_2eproto[2];
}
bool SdProtect_SdProtectOperationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SdProtect_SdProtectOperationType SdProtect::DISABLE;
const SdProtect_SdProtectOperationType SdProtect::ENABLE;
const SdProtect_SdProtectOperationType SdProtect::REFRESH;
const SdProtect_SdProtectOperationType SdProtect::SdProtectOperationType_MIN;
const SdProtect_SdProtectOperationType SdProtect::SdProtectOperationType_MAX;
const int SdProtect::SdProtectOperationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RecoveryDevice_RecoveryDeviceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_messages_2dmanagement_2eproto);
  return file_level_enum_descriptors_messages_2dmanagement_2eproto[3];
}
bool RecoveryDevice_RecoveryDeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RecoveryDevice_RecoveryDeviceType RecoveryDevice::RecoveryDeviceType_ScrambledWords;
const RecoveryDevice_RecoveryDeviceType RecoveryDevice::RecoveryDeviceType_Matrix;
const RecoveryDevice_RecoveryDeviceType RecoveryDevice::RecoveryDeviceType_MIN;
const RecoveryDevice_RecoveryDeviceType RecoveryDevice::RecoveryDeviceType_MAX;
const int RecoveryDevice::RecoveryDeviceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WordRequest_WordRequestType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_messages_2dmanagement_2eproto);
  return file_level_enum_descriptors_messages_2dmanagement_2eproto[4];
}
bool WordRequest_WordRequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WordRequest_WordRequestType WordRequest::WordRequestType_Plain;
const WordRequest_WordRequestType WordRequest::WordRequestType_Matrix9;
const WordRequest_WordRequestType WordRequest::WordRequestType_Matrix6;
const WordRequest_WordRequestType WordRequest::WordRequestType_MIN;
const WordRequest_WordRequestType WordRequest::WordRequestType_MAX;
const int WordRequest::WordRequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BackupType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_messages_2dmanagement_2eproto);
  return file_level_enum_descriptors_messages_2dmanagement_2eproto[5];
}
bool BackupType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Initialize::InitAsDefaultInstance() {
}
class Initialize::HasBitSetters {
 public:
  static void set_has_state(Initialize* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_skip_passphrase(Initialize* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Initialize::kStateFieldNumber;
const int Initialize::kSkipPassphraseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Initialize::Initialize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.Initialize)
}
Initialize::Initialize(const Initialize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state()) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  skip_passphrase_ = from.skip_passphrase_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.Initialize)
}

void Initialize::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Initialize_messages_2dmanagement_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skip_passphrase_ = false;
}

Initialize::~Initialize() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.Initialize)
  SharedDtor();
}

void Initialize::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Initialize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Initialize& Initialize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Initialize_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void Initialize::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.Initialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    state_.ClearNonDefaultToEmptyNoArena();
  }
  skip_passphrase_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Initialize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Initialize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes state = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool skip_passphrase = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_skip_passphrase(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Initialize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.Initialize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool skip_passphrase = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_skip_passphrase(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_passphrase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.Initialize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.Initialize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Initialize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.Initialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // optional bool skip_passphrase = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->skip_passphrase(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.Initialize)
}

::google::protobuf::uint8* Initialize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.Initialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes state = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // optional bool skip_passphrase = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->skip_passphrase(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.Initialize)
  return target;
}

size_t Initialize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.Initialize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes state = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->state());
    }

    // optional bool skip_passphrase = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Initialize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.Initialize)
  GOOGLE_DCHECK_NE(&from, this);
  const Initialize* source =
      ::google::protobuf::DynamicCastToGenerated<Initialize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.Initialize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.Initialize)
    MergeFrom(*source);
  }
}

void Initialize::MergeFrom(const Initialize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.Initialize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (cached_has_bits & 0x00000002u) {
      skip_passphrase_ = from.skip_passphrase_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Initialize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.Initialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Initialize::CopyFrom(const Initialize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.Initialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Initialize::IsInitialized() const {
  return true;
}

void Initialize::Swap(Initialize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Initialize::InternalSwap(Initialize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(skip_passphrase_, other->skip_passphrase_);
}

::google::protobuf::Metadata Initialize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetFeatures::InitAsDefaultInstance() {
}
class GetFeatures::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFeatures::GetFeatures()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.GetFeatures)
}
GetFeatures::GetFeatures(const GetFeatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.GetFeatures)
}

void GetFeatures::SharedCtor() {
}

GetFeatures::~GetFeatures() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.GetFeatures)
  SharedDtor();
}

void GetFeatures::SharedDtor() {
}

void GetFeatures::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetFeatures& GetFeatures::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetFeatures_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void GetFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.GetFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetFeatures::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetFeatures*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.GetFeatures)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.GetFeatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.GetFeatures)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.GetFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.GetFeatures)
}

::google::protobuf::uint8* GetFeatures::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.GetFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.GetFeatures)
  return target;
}

size_t GetFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.GetFeatures)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetFeatures::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.GetFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFeatures* source =
      ::google::protobuf::DynamicCastToGenerated<GetFeatures>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.GetFeatures)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.GetFeatures)
    MergeFrom(*source);
  }
}

void GetFeatures::MergeFrom(const GetFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.GetFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetFeatures::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.GetFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFeatures::CopyFrom(const GetFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.GetFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFeatures::IsInitialized() const {
  return true;
}

void GetFeatures::Swap(GetFeatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFeatures::InternalSwap(GetFeatures* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata GetFeatures::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Features::InitAsDefaultInstance() {
}
class Features::HasBitSetters {
 public:
  static void set_has_vendor(Features* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_major_version(Features* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_minor_version(Features* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_patch_version(Features* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
  static void set_has_bootloader_mode(Features* msg) {
    msg->_has_bits_[0] |= 0x00001000u;
  }
  static void set_has_device_id(Features* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pin_protection(Features* msg) {
    msg->_has_bits_[0] |= 0x00002000u;
  }
  static void set_has_passphrase_protection(Features* msg) {
    msg->_has_bits_[0] |= 0x00004000u;
  }
  static void set_has_language(Features* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_label(Features* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_initialized(Features* msg) {
    msg->_has_bits_[0] |= 0x00008000u;
  }
  static void set_has_revision(Features* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_bootloader_hash(Features* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_imported(Features* msg) {
    msg->_has_bits_[0] |= 0x00010000u;
  }
  static void set_has_pin_cached(Features* msg) {
    msg->_has_bits_[0] |= 0x00020000u;
  }
  static void set_has_passphrase_cached(Features* msg) {
    msg->_has_bits_[0] |= 0x00040000u;
  }
  static void set_has_firmware_present(Features* msg) {
    msg->_has_bits_[0] |= 0x00080000u;
  }
  static void set_has_needs_backup(Features* msg) {
    msg->_has_bits_[0] |= 0x01000000u;
  }
  static void set_has_flags(Features* msg) {
    msg->_has_bits_[0] |= 0x00100000u;
  }
  static void set_has_model(Features* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_fw_major(Features* msg) {
    msg->_has_bits_[0] |= 0x00200000u;
  }
  static void set_has_fw_minor(Features* msg) {
    msg->_has_bits_[0] |= 0x00400000u;
  }
  static void set_has_fw_patch(Features* msg) {
    msg->_has_bits_[0] |= 0x00800000u;
  }
  static void set_has_fw_vendor(Features* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_fw_vendor_keys(Features* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_unfinished_backup(Features* msg) {
    msg->_has_bits_[0] |= 0x02000000u;
  }
  static void set_has_no_backup(Features* msg) {
    msg->_has_bits_[0] |= 0x04000000u;
  }
  static void set_has_recovery_mode(Features* msg) {
    msg->_has_bits_[0] |= 0x08000000u;
  }
  static void set_has_backup_type(Features* msg) {
    msg->_has_bits_[0] |= 0x10000000u;
  }
  static void set_has_sd_card_present(Features* msg) {
    msg->_has_bits_[0] |= 0x20000000u;
  }
  static void set_has_sd_protection(Features* msg) {
    msg->_has_bits_[0] |= 0x40000000u;
  }
  static void set_has_wipe_code_protection(Features* msg) {
    msg->_has_bits_[0] |= 0x80000000u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Features::kVendorFieldNumber;
const int Features::kMajorVersionFieldNumber;
const int Features::kMinorVersionFieldNumber;
const int Features::kPatchVersionFieldNumber;
const int Features::kBootloaderModeFieldNumber;
const int Features::kDeviceIdFieldNumber;
const int Features::kPinProtectionFieldNumber;
const int Features::kPassphraseProtectionFieldNumber;
const int Features::kLanguageFieldNumber;
const int Features::kLabelFieldNumber;
const int Features::kInitializedFieldNumber;
const int Features::kRevisionFieldNumber;
const int Features::kBootloaderHashFieldNumber;
const int Features::kImportedFieldNumber;
const int Features::kPinCachedFieldNumber;
const int Features::kPassphraseCachedFieldNumber;
const int Features::kFirmwarePresentFieldNumber;
const int Features::kNeedsBackupFieldNumber;
const int Features::kFlagsFieldNumber;
const int Features::kModelFieldNumber;
const int Features::kFwMajorFieldNumber;
const int Features::kFwMinorFieldNumber;
const int Features::kFwPatchFieldNumber;
const int Features::kFwVendorFieldNumber;
const int Features::kFwVendorKeysFieldNumber;
const int Features::kUnfinishedBackupFieldNumber;
const int Features::kNoBackupFieldNumber;
const int Features::kRecoveryModeFieldNumber;
const int Features::kCapabilitiesFieldNumber;
const int Features::kBackupTypeFieldNumber;
const int Features::kSdCardPresentFieldNumber;
const int Features::kSdProtectionFieldNumber;
const int Features::kWipeCodeProtectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Features::Features()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.Features)
}
Features::Features(const Features& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      capabilities_(from.capabilities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vendor()) {
    vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_);
  }
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_id()) {
    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_revision()) {
    revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revision_);
  }
  bootloader_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bootloader_hash()) {
    bootloader_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bootloader_hash_);
  }
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model()) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  fw_vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fw_vendor()) {
    fw_vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fw_vendor_);
  }
  fw_vendor_keys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fw_vendor_keys()) {
    fw_vendor_keys_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fw_vendor_keys_);
  }
  ::memcpy(&major_version_, &from.major_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&wipe_code_protection_) -
    reinterpret_cast<char*>(&major_version_)) + sizeof(wipe_code_protection_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.Features)
}

void Features::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Features_messages_2dmanagement_2eproto.base);
  vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bootloader_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fw_vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fw_vendor_keys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&major_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wipe_code_protection_) -
      reinterpret_cast<char*>(&major_version_)) + sizeof(wipe_code_protection_));
}

Features::~Features() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.Features)
  SharedDtor();
}

void Features::SharedDtor() {
  vendor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bootloader_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fw_vendor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fw_vendor_keys_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Features::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Features& Features::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Features_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void Features::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capabilities_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      vendor_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      device_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      language_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      revision_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      bootloader_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      model_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      fw_vendor_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    fw_vendor_keys_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000fe00u) {
    ::memset(&major_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&initialized_) -
        reinterpret_cast<char*>(&major_version_)) + sizeof(initialized_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&imported_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fw_patch_) -
        reinterpret_cast<char*>(&imported_)) + sizeof(fw_patch_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&needs_backup_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&wipe_code_protection_) -
        reinterpret_cast<char*>(&needs_backup_)) + sizeof(wipe_code_protection_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Features::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Features*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string vendor = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.Features.vendor");
        object = msg->mutable_vendor();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 major_version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_major_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 minor_version = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_minor_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 patch_version = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_patch_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool bootloader_mode = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_bootloader_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string device_id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.Features.device_id");
        object = msg->mutable_device_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool pin_protection = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pin_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool passphrase_protection = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_passphrase_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string language = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.Features.language");
        object = msg->mutable_language();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string label = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.Features.label");
        object = msg->mutable_label();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool initialized = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_initialized(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes revision = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_revision();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes bootloader_hash = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_bootloader_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool imported = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 120) goto handle_unusual;
        msg->set_imported(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool pin_cached = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_pin_cached(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool passphrase_cached = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 136) goto handle_unusual;
        msg->set_passphrase_cached(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool firmware_present = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 144) goto handle_unusual;
        msg->set_firmware_present(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool needs_backup = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 152) goto handle_unusual;
        msg->set_needs_backup(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 flags = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 160) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string model = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.Features.model");
        object = msg->mutable_model();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 fw_major = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 176) goto handle_unusual;
        msg->set_fw_major(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 fw_minor = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 184) goto handle_unusual;
        msg->set_fw_minor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 fw_patch = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 192) goto handle_unusual;
        msg->set_fw_patch(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string fw_vendor = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 202) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.Features.fw_vendor");
        object = msg->mutable_fw_vendor();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes fw_vendor_keys = 26;
      case 26: {
        if (static_cast<::google::protobuf::uint8>(tag) != 210) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_fw_vendor_keys();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool unfinished_backup = 27;
      case 27: {
        if (static_cast<::google::protobuf::uint8>(tag) != 216) goto handle_unusual;
        msg->set_unfinished_backup(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool no_backup = 28;
      case 28: {
        if (static_cast<::google::protobuf::uint8>(tag) != 224) goto handle_unusual;
        msg->set_no_backup(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool recovery_mode = 29;
      case 29: {
        if (static_cast<::google::protobuf::uint8>(tag) != 232) goto handle_unusual;
        msg->set_recovery_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .hw.trezor.messages.management.Features.Capability capabilities = 30;
      case 30: {
        if (static_cast<::google::protobuf::uint8>(tag) == 240) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::hw::trezor::messages::management::Features_Capability_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(30, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_capabilities(static_cast<::hw::trezor::messages::management::Features_Capability>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 496 && (ptr += 2));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 242) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::hw::trezor::messages::management::Features_Capability_IsValid, msg->mutable_unknown_fields(), 30);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_capabilities();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional .hw.trezor.messages.management.BackupType backup_type = 31;
      case 31: {
        if (static_cast<::google::protobuf::uint8>(tag) != 248) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::hw::trezor::messages::management::BackupType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(31, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_backup_type(static_cast<::hw::trezor::messages::management::BackupType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool sd_card_present = 32;
      case 32: {
        if (static_cast<::google::protobuf::uint8>(tag) != 0) goto handle_unusual;
        msg->set_sd_card_present(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool sd_protection = 33;
      case 33: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_sd_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool wipe_code_protection = 34;
      case 34: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_wipe_code_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Features::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.Features)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string vendor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vendor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vendor().data(), static_cast<int>(this->vendor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.Features.vendor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 major_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_major_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &major_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 minor_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_minor_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minor_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 patch_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_patch_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &patch_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bootloader_mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_bootloader_mode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bootloader_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_id().data(), static_cast<int>(this->device_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.Features.device_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pin_protection = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_pin_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pin_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool passphrase_protection = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_passphrase_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passphrase_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string language = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.Features.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.Features.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool initialized = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_initialized(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initialized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes revision = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_revision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bootloader_hash = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bootloader_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool imported = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (120 & 0xFF)) {
          HasBitSetters::set_has_imported(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &imported_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pin_cached = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (128 & 0xFF)) {
          HasBitSetters::set_has_pin_cached(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pin_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool passphrase_cached = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (136 & 0xFF)) {
          HasBitSetters::set_has_passphrase_cached(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passphrase_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool firmware_present = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (144 & 0xFF)) {
          HasBitSetters::set_has_firmware_present(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &firmware_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_backup = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (152 & 0xFF)) {
          HasBitSetters::set_has_needs_backup(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_backup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (160 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string model = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model().data(), static_cast<int>(this->model().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.Features.model");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 fw_major = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (176 & 0xFF)) {
          HasBitSetters::set_has_fw_major(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fw_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 fw_minor = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (184 & 0xFF)) {
          HasBitSetters::set_has_fw_minor(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fw_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 fw_patch = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (192 & 0xFF)) {
          HasBitSetters::set_has_fw_patch(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fw_patch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string fw_vendor = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (202 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fw_vendor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fw_vendor().data(), static_cast<int>(this->fw_vendor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.Features.fw_vendor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes fw_vendor_keys = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (210 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fw_vendor_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool unfinished_backup = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (216 & 0xFF)) {
          HasBitSetters::set_has_unfinished_backup(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unfinished_backup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool no_backup = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (224 & 0xFF)) {
          HasBitSetters::set_has_no_backup(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &no_backup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool recovery_mode = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (232 & 0xFF)) {
          HasBitSetters::set_has_recovery_mode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recovery_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hw.trezor.messages.management.Features.Capability capabilities = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (240 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::management::Features_Capability_IsValid(value)) {
            add_capabilities(static_cast< ::hw::trezor::messages::management::Features_Capability >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                30, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (242 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 30,
                 ::hw::trezor::messages::management::Features_Capability_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_capabilities())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.management.BackupType backup_type = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (248 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::management::BackupType_IsValid(value)) {
            set_backup_type(static_cast< ::hw::trezor::messages::management::BackupType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                31, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sd_card_present = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (256 & 0xFF)) {
          HasBitSetters::set_has_sd_card_present(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sd_card_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sd_protection = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (264 & 0xFF)) {
          HasBitSetters::set_has_sd_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sd_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool wipe_code_protection = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (272 & 0xFF)) {
          HasBitSetters::set_has_wipe_code_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wipe_code_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.Features)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.Features)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Features::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vendor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.vendor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vendor(), output);
  }

  // optional uint32 major_version = 2;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->major_version(), output);
  }

  // optional uint32 minor_version = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->minor_version(), output);
  }

  // optional uint32 patch_version = 4;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->patch_version(), output);
  }

  // optional bool bootloader_mode = 5;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bootloader_mode(), output);
  }

  // optional string device_id = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_id().data(), static_cast<int>(this->device_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->device_id(), output);
  }

  // optional bool pin_protection = 7;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->pin_protection(), output);
  }

  // optional bool passphrase_protection = 8;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->passphrase_protection(), output);
  }

  // optional string language = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->language(), output);
  }

  // optional string label = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->label(), output);
  }

  // optional bool initialized = 12;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->initialized(), output);
  }

  // optional bytes revision = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->revision(), output);
  }

  // optional bytes bootloader_hash = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->bootloader_hash(), output);
  }

  // optional bool imported = 15;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->imported(), output);
  }

  // optional bool pin_cached = 16;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->pin_cached(), output);
  }

  // optional bool passphrase_cached = 17;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->passphrase_cached(), output);
  }

  // optional bool firmware_present = 18;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->firmware_present(), output);
  }

  // optional bool needs_backup = 19;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->needs_backup(), output);
  }

  // optional uint32 flags = 20;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->flags(), output);
  }

  // optional string model = 21;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->model(), output);
  }

  // optional uint32 fw_major = 22;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->fw_major(), output);
  }

  // optional uint32 fw_minor = 23;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->fw_minor(), output);
  }

  // optional uint32 fw_patch = 24;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->fw_patch(), output);
  }

  // optional string fw_vendor = 25;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fw_vendor().data(), static_cast<int>(this->fw_vendor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.fw_vendor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->fw_vendor(), output);
  }

  // optional bytes fw_vendor_keys = 26;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      26, this->fw_vendor_keys(), output);
  }

  // optional bool unfinished_backup = 27;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->unfinished_backup(), output);
  }

  // optional bool no_backup = 28;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->no_backup(), output);
  }

  // optional bool recovery_mode = 29;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(29, this->recovery_mode(), output);
  }

  // repeated .hw.trezor.messages.management.Features.Capability capabilities = 30;
  for (int i = 0, n = this->capabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      30, this->capabilities(i), output);
  }

  // optional .hw.trezor.messages.management.BackupType backup_type = 31;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      31, this->backup_type(), output);
  }

  // optional bool sd_card_present = 32;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(32, this->sd_card_present(), output);
  }

  // optional bool sd_protection = 33;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(33, this->sd_protection(), output);
  }

  // optional bool wipe_code_protection = 34;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(34, this->wipe_code_protection(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.Features)
}

::google::protobuf::uint8* Features::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vendor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.vendor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vendor(), target);
  }

  // optional uint32 major_version = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->major_version(), target);
  }

  // optional uint32 minor_version = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->minor_version(), target);
  }

  // optional uint32 patch_version = 4;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->patch_version(), target);
  }

  // optional bool bootloader_mode = 5;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bootloader_mode(), target);
  }

  // optional string device_id = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_id().data(), static_cast<int>(this->device_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->device_id(), target);
  }

  // optional bool pin_protection = 7;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->pin_protection(), target);
  }

  // optional bool passphrase_protection = 8;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->passphrase_protection(), target);
  }

  // optional string language = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->language(), target);
  }

  // optional string label = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->label(), target);
  }

  // optional bool initialized = 12;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->initialized(), target);
  }

  // optional bytes revision = 13;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->revision(), target);
  }

  // optional bytes bootloader_hash = 14;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->bootloader_hash(), target);
  }

  // optional bool imported = 15;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->imported(), target);
  }

  // optional bool pin_cached = 16;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->pin_cached(), target);
  }

  // optional bool passphrase_cached = 17;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->passphrase_cached(), target);
  }

  // optional bool firmware_present = 18;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->firmware_present(), target);
  }

  // optional bool needs_backup = 19;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->needs_backup(), target);
  }

  // optional uint32 flags = 20;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->flags(), target);
  }

  // optional string model = 21;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->model(), target);
  }

  // optional uint32 fw_major = 22;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->fw_major(), target);
  }

  // optional uint32 fw_minor = 23;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->fw_minor(), target);
  }

  // optional uint32 fw_patch = 24;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->fw_patch(), target);
  }

  // optional string fw_vendor = 25;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fw_vendor().data(), static_cast<int>(this->fw_vendor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Features.fw_vendor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->fw_vendor(), target);
  }

  // optional bytes fw_vendor_keys = 26;
  if (cached_has_bits & 0x00000100u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        26, this->fw_vendor_keys(), target);
  }

  // optional bool unfinished_backup = 27;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->unfinished_backup(), target);
  }

  // optional bool no_backup = 28;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->no_backup(), target);
  }

  // optional bool recovery_mode = 29;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(29, this->recovery_mode(), target);
  }

  // repeated .hw.trezor.messages.management.Features.Capability capabilities = 30;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    30, this->capabilities_, target);

  // optional .hw.trezor.messages.management.BackupType backup_type = 31;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      31, this->backup_type(), target);
  }

  // optional bool sd_card_present = 32;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(32, this->sd_card_present(), target);
  }

  // optional bool sd_protection = 33;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(33, this->sd_protection(), target);
  }

  // optional bool wipe_code_protection = 34;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(34, this->wipe_code_protection(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.Features)
  return target;
}

size_t Features::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.Features)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.management.Features.Capability capabilities = 30;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->capabilities_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->capabilities(static_cast<int>(i)));
    }
    total_size += (2UL * count) + data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string vendor = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vendor());
    }

    // optional string device_id = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_id());
    }

    // optional string language = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional string label = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional bytes revision = 13;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->revision());
    }

    // optional bytes bootloader_hash = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bootloader_hash());
    }

    // optional string model = 21;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model());
    }

    // optional string fw_vendor = 25;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fw_vendor());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bytes fw_vendor_keys = 26;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->fw_vendor_keys());
    }

    // optional uint32 major_version = 2;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->major_version());
    }

    // optional uint32 minor_version = 3;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->minor_version());
    }

    // optional uint32 patch_version = 4;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->patch_version());
    }

    // optional bool bootloader_mode = 5;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool pin_protection = 7;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool passphrase_protection = 8;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool initialized = 12;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool imported = 15;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 + 1;
    }

    // optional bool pin_cached = 16;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool passphrase_cached = 17;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool firmware_present = 18;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional uint32 flags = 20;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional uint32 fw_major = 22;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fw_major());
    }

    // optional uint32 fw_minor = 23;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fw_minor());
    }

    // optional uint32 fw_patch = 24;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fw_patch());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool needs_backup = 19;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool unfinished_backup = 27;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool no_backup = 28;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool recovery_mode = 29;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional .hw.trezor.messages.management.BackupType backup_type = 31;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->backup_type());
    }

    // optional bool sd_card_present = 32;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool sd_protection = 33;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool wipe_code_protection = 34;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Features::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.Features)
  GOOGLE_DCHECK_NE(&from, this);
  const Features* source =
      ::google::protobuf::DynamicCastToGenerated<Features>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.Features)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.Features)
    MergeFrom(*source);
  }
}

void Features::MergeFrom(const Features& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.Features)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  capabilities_.MergeFrom(from.capabilities_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revision_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      bootloader_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bootloader_hash_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
    }
    if (cached_has_bits & 0x00000080u) {
      _has_bits_[0] |= 0x00000080u;
      fw_vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fw_vendor_);
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _has_bits_[0] |= 0x00000100u;
      fw_vendor_keys_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fw_vendor_keys_);
    }
    if (cached_has_bits & 0x00000200u) {
      major_version_ = from.major_version_;
    }
    if (cached_has_bits & 0x00000400u) {
      minor_version_ = from.minor_version_;
    }
    if (cached_has_bits & 0x00000800u) {
      patch_version_ = from.patch_version_;
    }
    if (cached_has_bits & 0x00001000u) {
      bootloader_mode_ = from.bootloader_mode_;
    }
    if (cached_has_bits & 0x00002000u) {
      pin_protection_ = from.pin_protection_;
    }
    if (cached_has_bits & 0x00004000u) {
      passphrase_protection_ = from.passphrase_protection_;
    }
    if (cached_has_bits & 0x00008000u) {
      initialized_ = from.initialized_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      imported_ = from.imported_;
    }
    if (cached_has_bits & 0x00020000u) {
      pin_cached_ = from.pin_cached_;
    }
    if (cached_has_bits & 0x00040000u) {
      passphrase_cached_ = from.passphrase_cached_;
    }
    if (cached_has_bits & 0x00080000u) {
      firmware_present_ = from.firmware_present_;
    }
    if (cached_has_bits & 0x00100000u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00200000u) {
      fw_major_ = from.fw_major_;
    }
    if (cached_has_bits & 0x00400000u) {
      fw_minor_ = from.fw_minor_;
    }
    if (cached_has_bits & 0x00800000u) {
      fw_patch_ = from.fw_patch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      needs_backup_ = from.needs_backup_;
    }
    if (cached_has_bits & 0x02000000u) {
      unfinished_backup_ = from.unfinished_backup_;
    }
    if (cached_has_bits & 0x04000000u) {
      no_backup_ = from.no_backup_;
    }
    if (cached_has_bits & 0x08000000u) {
      recovery_mode_ = from.recovery_mode_;
    }
    if (cached_has_bits & 0x10000000u) {
      backup_type_ = from.backup_type_;
    }
    if (cached_has_bits & 0x20000000u) {
      sd_card_present_ = from.sd_card_present_;
    }
    if (cached_has_bits & 0x40000000u) {
      sd_protection_ = from.sd_protection_;
    }
    if (cached_has_bits & 0x80000000u) {
      wipe_code_protection_ = from.wipe_code_protection_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Features::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Features::CopyFrom(const Features& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Features::IsInitialized() const {
  return true;
}

void Features::Swap(Features* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Features::InternalSwap(Features* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  capabilities_.InternalSwap(&other->capabilities_);
  vendor_.Swap(&other->vendor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_id_.Swap(&other->device_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  revision_.Swap(&other->revision_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bootloader_hash_.Swap(&other->bootloader_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_.Swap(&other->model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fw_vendor_.Swap(&other->fw_vendor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fw_vendor_keys_.Swap(&other->fw_vendor_keys_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(major_version_, other->major_version_);
  swap(minor_version_, other->minor_version_);
  swap(patch_version_, other->patch_version_);
  swap(bootloader_mode_, other->bootloader_mode_);
  swap(pin_protection_, other->pin_protection_);
  swap(passphrase_protection_, other->passphrase_protection_);
  swap(initialized_, other->initialized_);
  swap(imported_, other->imported_);
  swap(pin_cached_, other->pin_cached_);
  swap(passphrase_cached_, other->passphrase_cached_);
  swap(firmware_present_, other->firmware_present_);
  swap(flags_, other->flags_);
  swap(fw_major_, other->fw_major_);
  swap(fw_minor_, other->fw_minor_);
  swap(fw_patch_, other->fw_patch_);
  swap(needs_backup_, other->needs_backup_);
  swap(unfinished_backup_, other->unfinished_backup_);
  swap(no_backup_, other->no_backup_);
  swap(recovery_mode_, other->recovery_mode_);
  swap(backup_type_, other->backup_type_);
  swap(sd_card_present_, other->sd_card_present_);
  swap(sd_protection_, other->sd_protection_);
  swap(wipe_code_protection_, other->wipe_code_protection_);
}

::google::protobuf::Metadata Features::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClearSession::InitAsDefaultInstance() {
}
class ClearSession::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearSession::ClearSession()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.ClearSession)
}
ClearSession::ClearSession(const ClearSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.ClearSession)
}

void ClearSession::SharedCtor() {
}

ClearSession::~ClearSession() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.ClearSession)
  SharedDtor();
}

void ClearSession::SharedDtor() {
}

void ClearSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearSession& ClearSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClearSession_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void ClearSession::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.ClearSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClearSession::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClearSession*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClearSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.ClearSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.ClearSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.ClearSession)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClearSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.ClearSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.ClearSession)
}

::google::protobuf::uint8* ClearSession::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.ClearSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.ClearSession)
  return target;
}

size_t ClearSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.ClearSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.ClearSession)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearSession* source =
      ::google::protobuf::DynamicCastToGenerated<ClearSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.ClearSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.ClearSession)
    MergeFrom(*source);
  }
}

void ClearSession::MergeFrom(const ClearSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.ClearSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.ClearSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearSession::CopyFrom(const ClearSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.ClearSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearSession::IsInitialized() const {
  return true;
}

void ClearSession::Swap(ClearSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearSession::InternalSwap(ClearSession* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata ClearSession::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ApplySettings::InitAsDefaultInstance() {
}
class ApplySettings::HasBitSetters {
 public:
  static void set_has_language(ApplySettings* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_label(ApplySettings* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_use_passphrase(ApplySettings* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_homescreen(ApplySettings* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_passphrase_source(ApplySettings* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_auto_lock_delay_ms(ApplySettings* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_display_rotation(ApplySettings* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplySettings::kLanguageFieldNumber;
const int ApplySettings::kLabelFieldNumber;
const int ApplySettings::kUsePassphraseFieldNumber;
const int ApplySettings::kHomescreenFieldNumber;
const int ApplySettings::kPassphraseSourceFieldNumber;
const int ApplySettings::kAutoLockDelayMsFieldNumber;
const int ApplySettings::kDisplayRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplySettings::ApplySettings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.ApplySettings)
}
ApplySettings::ApplySettings(const ApplySettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  homescreen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_homescreen()) {
    homescreen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homescreen_);
  }
  ::memcpy(&use_passphrase_, &from.use_passphrase_,
    static_cast<size_t>(reinterpret_cast<char*>(&display_rotation_) -
    reinterpret_cast<char*>(&use_passphrase_)) + sizeof(display_rotation_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.ApplySettings)
}

void ApplySettings::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ApplySettings_messages_2dmanagement_2eproto.base);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homescreen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_passphrase_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&display_rotation_) -
      reinterpret_cast<char*>(&use_passphrase_)) + sizeof(display_rotation_));
}

ApplySettings::~ApplySettings() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.ApplySettings)
  SharedDtor();
}

void ApplySettings::SharedDtor() {
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homescreen_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApplySettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplySettings& ApplySettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApplySettings_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void ApplySettings::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.ApplySettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      language_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      homescreen_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000078u) {
    ::memset(&use_passphrase_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&display_rotation_) -
        reinterpret_cast<char*>(&use_passphrase_)) + sizeof(display_rotation_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplySettings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApplySettings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string language = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.ApplySettings.language");
        object = msg->mutable_language();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string label = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.ApplySettings.label");
        object = msg->mutable_label();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool use_passphrase = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_use_passphrase(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes homescreen = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_homescreen();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.management.ApplySettings.PassphraseSourceType passphrase_source = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::hw::trezor::messages::management::ApplySettings_PassphraseSourceType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(5, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_passphrase_source(static_cast<::hw::trezor::messages::management::ApplySettings_PassphraseSourceType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 auto_lock_delay_ms = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_auto_lock_delay_ms(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 display_rotation = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_display_rotation(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplySettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.ApplySettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string language = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.ApplySettings.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.ApplySettings.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_passphrase = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_use_passphrase(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_passphrase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes homescreen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_homescreen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.management.ApplySettings.PassphraseSourceType passphrase_source = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::management::ApplySettings_PassphraseSourceType_IsValid(value)) {
            set_passphrase_source(static_cast< ::hw::trezor::messages::management::ApplySettings_PassphraseSourceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auto_lock_delay_ms = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_auto_lock_delay_ms(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auto_lock_delay_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 display_rotation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_display_rotation(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &display_rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.ApplySettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.ApplySettings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplySettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.ApplySettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string language = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.ApplySettings.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language(), output);
  }

  // optional string label = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.ApplySettings.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // optional bool use_passphrase = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_passphrase(), output);
  }

  // optional bytes homescreen = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->homescreen(), output);
  }

  // optional .hw.trezor.messages.management.ApplySettings.PassphraseSourceType passphrase_source = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->passphrase_source(), output);
  }

  // optional uint32 auto_lock_delay_ms = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->auto_lock_delay_ms(), output);
  }

  // optional uint32 display_rotation = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->display_rotation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.ApplySettings)
}

::google::protobuf::uint8* ApplySettings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.ApplySettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string language = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.ApplySettings.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language(), target);
  }

  // optional string label = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.ApplySettings.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // optional bool use_passphrase = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_passphrase(), target);
  }

  // optional bytes homescreen = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->homescreen(), target);
  }

  // optional .hw.trezor.messages.management.ApplySettings.PassphraseSourceType passphrase_source = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->passphrase_source(), target);
  }

  // optional uint32 auto_lock_delay_ms = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->auto_lock_delay_ms(), target);
  }

  // optional uint32 display_rotation = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->display_rotation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.ApplySettings)
  return target;
}

size_t ApplySettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.ApplySettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string language = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional string label = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional bytes homescreen = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->homescreen());
    }

    // optional bool use_passphrase = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional .hw.trezor.messages.management.ApplySettings.PassphraseSourceType passphrase_source = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->passphrase_source());
    }

    // optional uint32 auto_lock_delay_ms = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auto_lock_delay_ms());
    }

    // optional uint32 display_rotation = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->display_rotation());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplySettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.ApplySettings)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplySettings* source =
      ::google::protobuf::DynamicCastToGenerated<ApplySettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.ApplySettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.ApplySettings)
    MergeFrom(*source);
  }
}

void ApplySettings::MergeFrom(const ApplySettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.ApplySettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      homescreen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homescreen_);
    }
    if (cached_has_bits & 0x00000008u) {
      use_passphrase_ = from.use_passphrase_;
    }
    if (cached_has_bits & 0x00000010u) {
      passphrase_source_ = from.passphrase_source_;
    }
    if (cached_has_bits & 0x00000020u) {
      auto_lock_delay_ms_ = from.auto_lock_delay_ms_;
    }
    if (cached_has_bits & 0x00000040u) {
      display_rotation_ = from.display_rotation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ApplySettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.ApplySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplySettings::CopyFrom(const ApplySettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.ApplySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplySettings::IsInitialized() const {
  return true;
}

void ApplySettings::Swap(ApplySettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplySettings::InternalSwap(ApplySettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  homescreen_.Swap(&other->homescreen_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(use_passphrase_, other->use_passphrase_);
  swap(passphrase_source_, other->passphrase_source_);
  swap(auto_lock_delay_ms_, other->auto_lock_delay_ms_);
  swap(display_rotation_, other->display_rotation_);
}

::google::protobuf::Metadata ApplySettings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ApplyFlags::InitAsDefaultInstance() {
}
class ApplyFlags::HasBitSetters {
 public:
  static void set_has_flags(ApplyFlags* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyFlags::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyFlags::ApplyFlags()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.ApplyFlags)
}
ApplyFlags::ApplyFlags(const ApplyFlags& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.ApplyFlags)
}

void ApplyFlags::SharedCtor() {
  flags_ = 0u;
}

ApplyFlags::~ApplyFlags() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.ApplyFlags)
  SharedDtor();
}

void ApplyFlags::SharedDtor() {
}

void ApplyFlags::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplyFlags& ApplyFlags::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApplyFlags_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void ApplyFlags::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.ApplyFlags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flags_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplyFlags::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApplyFlags*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 flags = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplyFlags::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.ApplyFlags)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.ApplyFlags)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.ApplyFlags)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplyFlags::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.ApplyFlags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flags = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.ApplyFlags)
}

::google::protobuf::uint8* ApplyFlags::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.ApplyFlags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flags = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.ApplyFlags)
  return target;
}

size_t ApplyFlags::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.ApplyFlags)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 flags = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplyFlags::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.ApplyFlags)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyFlags* source =
      ::google::protobuf::DynamicCastToGenerated<ApplyFlags>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.ApplyFlags)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.ApplyFlags)
    MergeFrom(*source);
  }
}

void ApplyFlags::MergeFrom(const ApplyFlags& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.ApplyFlags)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_flags()) {
    set_flags(from.flags());
  }
}

void ApplyFlags::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.ApplyFlags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyFlags::CopyFrom(const ApplyFlags& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.ApplyFlags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyFlags::IsInitialized() const {
  return true;
}

void ApplyFlags::Swap(ApplyFlags* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyFlags::InternalSwap(ApplyFlags* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(flags_, other->flags_);
}

::google::protobuf::Metadata ApplyFlags::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ChangePin::InitAsDefaultInstance() {
}
class ChangePin::HasBitSetters {
 public:
  static void set_has_remove(ChangePin* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangePin::kRemoveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangePin::ChangePin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.ChangePin)
}
ChangePin::ChangePin(const ChangePin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remove_ = from.remove_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.ChangePin)
}

void ChangePin::SharedCtor() {
  remove_ = false;
}

ChangePin::~ChangePin() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.ChangePin)
  SharedDtor();
}

void ChangePin::SharedDtor() {
}

void ChangePin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangePin& ChangePin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ChangePin_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void ChangePin::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.ChangePin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remove_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChangePin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ChangePin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool remove = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_remove(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChangePin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.ChangePin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool remove = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_remove(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remove_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.ChangePin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.ChangePin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChangePin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.ChangePin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool remove = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->remove(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.ChangePin)
}

::google::protobuf::uint8* ChangePin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.ChangePin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool remove = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->remove(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.ChangePin)
  return target;
}

size_t ChangePin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.ChangePin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool remove = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangePin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.ChangePin)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangePin* source =
      ::google::protobuf::DynamicCastToGenerated<ChangePin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.ChangePin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.ChangePin)
    MergeFrom(*source);
  }
}

void ChangePin::MergeFrom(const ChangePin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.ChangePin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_remove()) {
    set_remove(from.remove());
  }
}

void ChangePin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.ChangePin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangePin::CopyFrom(const ChangePin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.ChangePin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangePin::IsInitialized() const {
  return true;
}

void ChangePin::Swap(ChangePin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangePin::InternalSwap(ChangePin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(remove_, other->remove_);
}

::google::protobuf::Metadata ChangePin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ChangeWipeCode::InitAsDefaultInstance() {
}
class ChangeWipeCode::HasBitSetters {
 public:
  static void set_has_remove(ChangeWipeCode* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeWipeCode::kRemoveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeWipeCode::ChangeWipeCode()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.ChangeWipeCode)
}
ChangeWipeCode::ChangeWipeCode(const ChangeWipeCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remove_ = from.remove_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.ChangeWipeCode)
}

void ChangeWipeCode::SharedCtor() {
  remove_ = false;
}

ChangeWipeCode::~ChangeWipeCode() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.ChangeWipeCode)
  SharedDtor();
}

void ChangeWipeCode::SharedDtor() {
}

void ChangeWipeCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeWipeCode& ChangeWipeCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ChangeWipeCode_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void ChangeWipeCode::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.ChangeWipeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remove_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChangeWipeCode::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ChangeWipeCode*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool remove = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_remove(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChangeWipeCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.ChangeWipeCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool remove = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_remove(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remove_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.ChangeWipeCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.ChangeWipeCode)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChangeWipeCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.ChangeWipeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool remove = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->remove(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.ChangeWipeCode)
}

::google::protobuf::uint8* ChangeWipeCode::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.ChangeWipeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool remove = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->remove(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.ChangeWipeCode)
  return target;
}

size_t ChangeWipeCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.ChangeWipeCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool remove = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeWipeCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.ChangeWipeCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeWipeCode* source =
      ::google::protobuf::DynamicCastToGenerated<ChangeWipeCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.ChangeWipeCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.ChangeWipeCode)
    MergeFrom(*source);
  }
}

void ChangeWipeCode::MergeFrom(const ChangeWipeCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.ChangeWipeCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_remove()) {
    set_remove(from.remove());
  }
}

void ChangeWipeCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.ChangeWipeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeWipeCode::CopyFrom(const ChangeWipeCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.ChangeWipeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeWipeCode::IsInitialized() const {
  return true;
}

void ChangeWipeCode::Swap(ChangeWipeCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeWipeCode::InternalSwap(ChangeWipeCode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(remove_, other->remove_);
}

::google::protobuf::Metadata ChangeWipeCode::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SdProtect::InitAsDefaultInstance() {
}
class SdProtect::HasBitSetters {
 public:
  static void set_has_operation(SdProtect* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SdProtect::kOperationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SdProtect::SdProtect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.SdProtect)
}
SdProtect::SdProtect(const SdProtect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_ = from.operation_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.SdProtect)
}

void SdProtect::SharedCtor() {
  operation_ = 0;
}

SdProtect::~SdProtect() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.SdProtect)
  SharedDtor();
}

void SdProtect::SharedDtor() {
}

void SdProtect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SdProtect& SdProtect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SdProtect_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void SdProtect::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.SdProtect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operation_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SdProtect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SdProtect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.management.SdProtect.SdProtectOperationType operation = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::hw::trezor::messages::management::SdProtect_SdProtectOperationType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_operation(static_cast<::hw::trezor::messages::management::SdProtect_SdProtectOperationType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SdProtect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.SdProtect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.management.SdProtect.SdProtectOperationType operation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::management::SdProtect_SdProtectOperationType_IsValid(value)) {
            set_operation(static_cast< ::hw::trezor::messages::management::SdProtect_SdProtectOperationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.SdProtect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.SdProtect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SdProtect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.SdProtect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.management.SdProtect.SdProtectOperationType operation = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->operation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.SdProtect)
}

::google::protobuf::uint8* SdProtect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.SdProtect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.management.SdProtect.SdProtectOperationType operation = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->operation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.SdProtect)
  return target;
}

size_t SdProtect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.SdProtect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .hw.trezor.messages.management.SdProtect.SdProtectOperationType operation = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SdProtect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.SdProtect)
  GOOGLE_DCHECK_NE(&from, this);
  const SdProtect* source =
      ::google::protobuf::DynamicCastToGenerated<SdProtect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.SdProtect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.SdProtect)
    MergeFrom(*source);
  }
}

void SdProtect::MergeFrom(const SdProtect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.SdProtect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_operation()) {
    set_operation(from.operation());
  }
}

void SdProtect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.SdProtect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SdProtect::CopyFrom(const SdProtect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.SdProtect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SdProtect::IsInitialized() const {
  return true;
}

void SdProtect::Swap(SdProtect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SdProtect::InternalSwap(SdProtect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(operation_, other->operation_);
}

::google::protobuf::Metadata SdProtect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Ping::InitAsDefaultInstance() {
}
class Ping::HasBitSetters {
 public:
  static void set_has_message(Ping* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_button_protection(Ping* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pin_protection(Ping* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_passphrase_protection(Ping* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ping::kMessageFieldNumber;
const int Ping::kButtonProtectionFieldNumber;
const int Ping::kPinProtectionFieldNumber;
const int Ping::kPassphraseProtectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.Ping)
}
Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&button_protection_, &from.button_protection_,
    static_cast<size_t>(reinterpret_cast<char*>(&passphrase_protection_) -
    reinterpret_cast<char*>(&button_protection_)) + sizeof(passphrase_protection_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.Ping)
}

void Ping::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Ping_messages_2dmanagement_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&button_protection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&passphrase_protection_) -
      reinterpret_cast<char*>(&button_protection_)) + sizeof(passphrase_protection_));
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Ping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ping& Ping::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Ping_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  ::memset(&button_protection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&passphrase_protection_) -
      reinterpret_cast<char*>(&button_protection_)) + sizeof(passphrase_protection_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Ping::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Ping*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.Ping.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool button_protection = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_button_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool pin_protection = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pin_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool passphrase_protection = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_passphrase_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.Ping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.Ping.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool button_protection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_button_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pin_protection = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pin_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pin_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool passphrase_protection = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_passphrase_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passphrase_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.Ping)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Ping.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional bool button_protection = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->button_protection(), output);
  }

  // optional bool pin_protection = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->pin_protection(), output);
  }

  // optional bool passphrase_protection = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->passphrase_protection(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.Ping.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional bool button_protection = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->button_protection(), target);
  }

  // optional bool pin_protection = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->pin_protection(), target);
  }

  // optional bool passphrase_protection = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->passphrase_protection(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.Ping)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string message = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional bool button_protection = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool pin_protection = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool passphrase_protection = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::DynamicCastToGenerated<Ping>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      button_protection_ = from.button_protection_;
    }
    if (cached_has_bits & 0x00000004u) {
      pin_protection_ = from.pin_protection_;
    }
    if (cached_has_bits & 0x00000008u) {
      passphrase_protection_ = from.passphrase_protection_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(button_protection_, other->button_protection_);
  swap(pin_protection_, other->pin_protection_);
  swap(passphrase_protection_, other->passphrase_protection_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Cancel::InitAsDefaultInstance() {
}
class Cancel::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cancel::Cancel()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.Cancel)
}
Cancel::Cancel(const Cancel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.Cancel)
}

void Cancel::SharedCtor() {
}

Cancel::~Cancel() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.Cancel)
  SharedDtor();
}

void Cancel::SharedDtor() {
}

void Cancel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cancel& Cancel::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Cancel_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void Cancel::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.Cancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Cancel::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Cancel*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Cancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.Cancel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.Cancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.Cancel)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Cancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.Cancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.Cancel)
}

::google::protobuf::uint8* Cancel::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.Cancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.Cancel)
  return target;
}

size_t Cancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.Cancel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cancel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.Cancel)
  GOOGLE_DCHECK_NE(&from, this);
  const Cancel* source =
      ::google::protobuf::DynamicCastToGenerated<Cancel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.Cancel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.Cancel)
    MergeFrom(*source);
  }
}

void Cancel::MergeFrom(const Cancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.Cancel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Cancel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.Cancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cancel::CopyFrom(const Cancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.Cancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cancel::IsInitialized() const {
  return true;
}

void Cancel::Swap(Cancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cancel::InternalSwap(Cancel* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Cancel::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetEntropy::InitAsDefaultInstance() {
}
class GetEntropy::HasBitSetters {
 public:
  static void set_has_size(GetEntropy* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetEntropy::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetEntropy::GetEntropy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.GetEntropy)
}
GetEntropy::GetEntropy(const GetEntropy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.GetEntropy)
}

void GetEntropy::SharedCtor() {
  size_ = 0u;
}

GetEntropy::~GetEntropy() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.GetEntropy)
  SharedDtor();
}

void GetEntropy::SharedDtor() {
}

void GetEntropy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEntropy& GetEntropy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetEntropy_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void GetEntropy::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.GetEntropy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  size_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetEntropy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetEntropy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 size = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetEntropy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.GetEntropy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_size(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.GetEntropy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.GetEntropy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetEntropy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.GetEntropy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 size = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.GetEntropy)
}

::google::protobuf::uint8* GetEntropy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.GetEntropy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 size = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.GetEntropy)
  return target;
}

size_t GetEntropy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.GetEntropy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 size = 1;
  if (has_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEntropy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.GetEntropy)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEntropy* source =
      ::google::protobuf::DynamicCastToGenerated<GetEntropy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.GetEntropy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.GetEntropy)
    MergeFrom(*source);
  }
}

void GetEntropy::MergeFrom(const GetEntropy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.GetEntropy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_size()) {
    set_size(from.size());
  }
}

void GetEntropy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.GetEntropy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntropy::CopyFrom(const GetEntropy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.GetEntropy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntropy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetEntropy::Swap(GetEntropy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetEntropy::InternalSwap(GetEntropy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(size_, other->size_);
}

::google::protobuf::Metadata GetEntropy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Entropy::InitAsDefaultInstance() {
}
class Entropy::HasBitSetters {
 public:
  static void set_has_entropy(Entropy* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entropy::kEntropyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entropy::Entropy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.Entropy)
}
Entropy::Entropy(const Entropy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entropy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_entropy()) {
    entropy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entropy_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.Entropy)
}

void Entropy::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Entropy_messages_2dmanagement_2eproto.base);
  entropy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Entropy::~Entropy() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.Entropy)
  SharedDtor();
}

void Entropy::SharedDtor() {
  entropy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Entropy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Entropy& Entropy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Entropy_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void Entropy::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.Entropy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    entropy_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Entropy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Entropy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bytes entropy = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_entropy();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Entropy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.Entropy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes entropy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_entropy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.Entropy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.Entropy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Entropy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.Entropy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes entropy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->entropy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.Entropy)
}

::google::protobuf::uint8* Entropy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.Entropy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes entropy = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->entropy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.Entropy)
  return target;
}

size_t Entropy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.Entropy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes entropy = 1;
  if (has_entropy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->entropy());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Entropy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.Entropy)
  GOOGLE_DCHECK_NE(&from, this);
  const Entropy* source =
      ::google::protobuf::DynamicCastToGenerated<Entropy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.Entropy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.Entropy)
    MergeFrom(*source);
  }
}

void Entropy::MergeFrom(const Entropy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.Entropy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entropy()) {
    _has_bits_[0] |= 0x00000001u;
    entropy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entropy_);
  }
}

void Entropy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.Entropy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entropy::CopyFrom(const Entropy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.Entropy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entropy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Entropy::Swap(Entropy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Entropy::InternalSwap(Entropy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  entropy_.Swap(&other->entropy_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Entropy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WipeDevice::InitAsDefaultInstance() {
}
class WipeDevice::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WipeDevice::WipeDevice()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.WipeDevice)
}
WipeDevice::WipeDevice(const WipeDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.WipeDevice)
}

void WipeDevice::SharedCtor() {
}

WipeDevice::~WipeDevice() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.WipeDevice)
  SharedDtor();
}

void WipeDevice::SharedDtor() {
}

void WipeDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WipeDevice& WipeDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WipeDevice_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void WipeDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.WipeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WipeDevice::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WipeDevice*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WipeDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.WipeDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.WipeDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.WipeDevice)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WipeDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.WipeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.WipeDevice)
}

::google::protobuf::uint8* WipeDevice::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.WipeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.WipeDevice)
  return target;
}

size_t WipeDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.WipeDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WipeDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.WipeDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const WipeDevice* source =
      ::google::protobuf::DynamicCastToGenerated<WipeDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.WipeDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.WipeDevice)
    MergeFrom(*source);
  }
}

void WipeDevice::MergeFrom(const WipeDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.WipeDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WipeDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.WipeDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WipeDevice::CopyFrom(const WipeDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.WipeDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WipeDevice::IsInitialized() const {
  return true;
}

void WipeDevice::Swap(WipeDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WipeDevice::InternalSwap(WipeDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata WipeDevice::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoadDevice::InitAsDefaultInstance() {
}
class LoadDevice::HasBitSetters {
 public:
  static void set_has_pin(LoadDevice* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_passphrase_protection(LoadDevice* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_language(LoadDevice* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_label(LoadDevice* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_skip_checksum(LoadDevice* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_u2f_counter(LoadDevice* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_needs_backup(LoadDevice* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_no_backup(LoadDevice* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

::google::protobuf::internal::ExplicitlyConstructed<::std::string> LoadDevice::_i_give_permission_to_break_this_code_default_language_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDevice::kMnemonicsFieldNumber;
const int LoadDevice::kPinFieldNumber;
const int LoadDevice::kPassphraseProtectionFieldNumber;
const int LoadDevice::kLanguageFieldNumber;
const int LoadDevice::kLabelFieldNumber;
const int LoadDevice::kSkipChecksumFieldNumber;
const int LoadDevice::kU2FCounterFieldNumber;
const int LoadDevice::kNeedsBackupFieldNumber;
const int LoadDevice::kNoBackupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDevice::LoadDevice()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.LoadDevice)
}
LoadDevice::LoadDevice(const LoadDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      mnemonics_(from.mnemonics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pin()) {
    pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
  }
  language_.UnsafeSetDefault(&::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.get());
  if (from.has_language()) {
    language_.AssignWithDefault(&::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.get(), from.language_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&passphrase_protection_, &from.passphrase_protection_,
    static_cast<size_t>(reinterpret_cast<char*>(&u2f_counter_) -
    reinterpret_cast<char*>(&passphrase_protection_)) + sizeof(u2f_counter_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.LoadDevice)
}

void LoadDevice::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoadDevice_messages_2dmanagement_2eproto.base);
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.get());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&passphrase_protection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&u2f_counter_) -
      reinterpret_cast<char*>(&passphrase_protection_)) + sizeof(u2f_counter_));
}

LoadDevice::~LoadDevice() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.LoadDevice)
  SharedDtor();
}

void LoadDevice::SharedDtor() {
  pin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.get());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoadDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadDevice& LoadDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoadDevice_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void LoadDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.LoadDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mnemonics_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      pin_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      language_.UnsafeMutablePointer()->assign(*&::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.get());
    }
    if (cached_has_bits & 0x00000004u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&passphrase_protection_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&u2f_counter_) -
        reinterpret_cast<char*>(&passphrase_protection_)) + sizeof(u2f_counter_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoadDevice::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoadDevice*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string mnemonics = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.LoadDevice.mnemonics");
          object = msg->add_mnemonics();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // optional string pin = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.LoadDevice.pin");
        object = msg->mutable_pin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool passphrase_protection = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_passphrase_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string language = 5 [default = "en-US"];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.LoadDevice.language");
        object = msg->mutable_language();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string label = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.LoadDevice.label");
        object = msg->mutable_label();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool skip_checksum = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_skip_checksum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 u2f_counter = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_u2f_counter(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool needs_backup = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_needs_backup(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool no_backup = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_no_backup(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoadDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.LoadDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string mnemonics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mnemonics()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mnemonics(this->mnemonics_size() - 1).data(),
            static_cast<int>(this->mnemonics(this->mnemonics_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.LoadDevice.mnemonics");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pin().data(), static_cast<int>(this->pin().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.LoadDevice.pin");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool passphrase_protection = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_passphrase_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passphrase_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string language = 5 [default = "en-US"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.LoadDevice.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.LoadDevice.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool skip_checksum = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_skip_checksum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 u2f_counter = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_u2f_counter(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u2f_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_backup = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_needs_backup(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_backup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool no_backup = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_no_backup(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &no_backup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.LoadDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.LoadDevice)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoadDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.LoadDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string mnemonics = 1;
  for (int i = 0, n = this->mnemonics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mnemonics(i).data(), static_cast<int>(this->mnemonics(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.LoadDevice.mnemonics");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->mnemonics(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string pin = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pin().data(), static_cast<int>(this->pin().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.LoadDevice.pin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pin(), output);
  }

  // optional bool passphrase_protection = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->passphrase_protection(), output);
  }

  // optional string language = 5 [default = "en-US"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.LoadDevice.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->language(), output);
  }

  // optional string label = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.LoadDevice.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->label(), output);
  }

  // optional bool skip_checksum = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->skip_checksum(), output);
  }

  // optional uint32 u2f_counter = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->u2f_counter(), output);
  }

  // optional bool needs_backup = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->needs_backup(), output);
  }

  // optional bool no_backup = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->no_backup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.LoadDevice)
}

::google::protobuf::uint8* LoadDevice::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.LoadDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string mnemonics = 1;
  for (int i = 0, n = this->mnemonics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mnemonics(i).data(), static_cast<int>(this->mnemonics(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.LoadDevice.mnemonics");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->mnemonics(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string pin = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pin().data(), static_cast<int>(this->pin().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.LoadDevice.pin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pin(), target);
  }

  // optional bool passphrase_protection = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->passphrase_protection(), target);
  }

  // optional string language = 5 [default = "en-US"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.LoadDevice.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->language(), target);
  }

  // optional string label = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.LoadDevice.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->label(), target);
  }

  // optional bool skip_checksum = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->skip_checksum(), target);
  }

  // optional uint32 u2f_counter = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->u2f_counter(), target);
  }

  // optional bool needs_backup = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->needs_backup(), target);
  }

  // optional bool no_backup = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->no_backup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.LoadDevice)
  return target;
}

size_t LoadDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.LoadDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string mnemonics = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mnemonics_size());
  for (int i = 0, n = this->mnemonics_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mnemonics(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string pin = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pin());
    }

    // optional string language = 5 [default = "en-US"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional string label = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional bool passphrase_protection = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool skip_checksum = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool needs_backup = 9;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool no_backup = 10;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional uint32 u2f_counter = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->u2f_counter());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.LoadDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadDevice* source =
      ::google::protobuf::DynamicCastToGenerated<LoadDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.LoadDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.LoadDevice)
    MergeFrom(*source);
  }
}

void LoadDevice::MergeFrom(const LoadDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.LoadDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mnemonics_.MergeFrom(from.mnemonics_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      language_.AssignWithDefault(&::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.get(), from.language_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000008u) {
      passphrase_protection_ = from.passphrase_protection_;
    }
    if (cached_has_bits & 0x00000010u) {
      skip_checksum_ = from.skip_checksum_;
    }
    if (cached_has_bits & 0x00000020u) {
      needs_backup_ = from.needs_backup_;
    }
    if (cached_has_bits & 0x00000040u) {
      no_backup_ = from.no_backup_;
    }
    if (cached_has_bits & 0x00000080u) {
      u2f_counter_ = from.u2f_counter_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoadDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.LoadDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadDevice::CopyFrom(const LoadDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.LoadDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadDevice::IsInitialized() const {
  return true;
}

void LoadDevice::Swap(LoadDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDevice::InternalSwap(LoadDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mnemonics_.InternalSwap(CastToBase(&other->mnemonics_));
  pin_.Swap(&other->pin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_.Swap(&other->language_, &::hw::trezor::messages::management::LoadDevice::_i_give_permission_to_break_this_code_default_language_.get(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(passphrase_protection_, other->passphrase_protection_);
  swap(skip_checksum_, other->skip_checksum_);
  swap(needs_backup_, other->needs_backup_);
  swap(no_backup_, other->no_backup_);
  swap(u2f_counter_, other->u2f_counter_);
}

::google::protobuf::Metadata LoadDevice::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResetDevice::InitAsDefaultInstance() {
}
class ResetDevice::HasBitSetters {
 public:
  static void set_has_display_random(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_strength(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_passphrase_protection(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pin_protection(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_language(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_label(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_u2f_counter(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_skip_backup(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_no_backup(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_backup_type(ResetDevice* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
};

::google::protobuf::internal::ExplicitlyConstructed<::std::string> ResetDevice::_i_give_permission_to_break_this_code_default_language_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetDevice::kDisplayRandomFieldNumber;
const int ResetDevice::kStrengthFieldNumber;
const int ResetDevice::kPassphraseProtectionFieldNumber;
const int ResetDevice::kPinProtectionFieldNumber;
const int ResetDevice::kLanguageFieldNumber;
const int ResetDevice::kLabelFieldNumber;
const int ResetDevice::kU2FCounterFieldNumber;
const int ResetDevice::kSkipBackupFieldNumber;
const int ResetDevice::kNoBackupFieldNumber;
const int ResetDevice::kBackupTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetDevice::ResetDevice()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.ResetDevice)
}
ResetDevice::ResetDevice(const ResetDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.get());
  if (from.has_language()) {
    language_.AssignWithDefault(&::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.get(), from.language_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&display_random_, &from.display_random_,
    static_cast<size_t>(reinterpret_cast<char*>(&strength_) -
    reinterpret_cast<char*>(&display_random_)) + sizeof(strength_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.ResetDevice)
}

void ResetDevice::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResetDevice_messages_2dmanagement_2eproto.base);
  language_.UnsafeSetDefault(&::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.get());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&display_random_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&backup_type_) -
      reinterpret_cast<char*>(&display_random_)) + sizeof(backup_type_));
  strength_ = 256u;
}

ResetDevice::~ResetDevice() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.ResetDevice)
  SharedDtor();
}

void ResetDevice::SharedDtor() {
  language_.DestroyNoArena(&::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.get());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResetDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetDevice& ResetDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResetDevice_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void ResetDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.ResetDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      language_.UnsafeMutablePointer()->assign(*&::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&display_random_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&no_backup_) -
        reinterpret_cast<char*>(&display_random_)) + sizeof(no_backup_));
  }
  if (cached_has_bits & 0x00000300u) {
    backup_type_ = 0;
    strength_ = 256u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResetDevice::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResetDevice*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool display_random = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_display_random(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 strength = 2 [default = 256];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_strength(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool passphrase_protection = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_passphrase_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool pin_protection = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_pin_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string language = 5 [default = "en-US"];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.ResetDevice.language");
        object = msg->mutable_language();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string label = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.ResetDevice.label");
        object = msg->mutable_label();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 u2f_counter = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_u2f_counter(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool skip_backup = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_skip_backup(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool no_backup = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_no_backup(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .hw.trezor.messages.management.BackupType backup_type = 10 [default = Bip39];
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::hw::trezor::messages::management::BackupType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(10, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_backup_type(static_cast<::hw::trezor::messages::management::BackupType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResetDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.ResetDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool display_random = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_display_random(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &display_random_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 strength = 2 [default = 256];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_strength(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool passphrase_protection = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_passphrase_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passphrase_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pin_protection = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_pin_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pin_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string language = 5 [default = "en-US"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.ResetDevice.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.ResetDevice.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 u2f_counter = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_u2f_counter(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u2f_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool skip_backup = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_skip_backup(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_backup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool no_backup = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_no_backup(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &no_backup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.management.BackupType backup_type = 10 [default = Bip39];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::management::BackupType_IsValid(value)) {
            set_backup_type(static_cast< ::hw::trezor::messages::management::BackupType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.ResetDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.ResetDevice)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResetDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.ResetDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool display_random = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->display_random(), output);
  }

  // optional uint32 strength = 2 [default = 256];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strength(), output);
  }

  // optional bool passphrase_protection = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->passphrase_protection(), output);
  }

  // optional bool pin_protection = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->pin_protection(), output);
  }

  // optional string language = 5 [default = "en-US"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.ResetDevice.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->language(), output);
  }

  // optional string label = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.ResetDevice.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->label(), output);
  }

  // optional uint32 u2f_counter = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->u2f_counter(), output);
  }

  // optional bool skip_backup = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->skip_backup(), output);
  }

  // optional bool no_backup = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->no_backup(), output);
  }

  // optional .hw.trezor.messages.management.BackupType backup_type = 10 [default = Bip39];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->backup_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.ResetDevice)
}

::google::protobuf::uint8* ResetDevice::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.ResetDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool display_random = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->display_random(), target);
  }

  // optional uint32 strength = 2 [default = 256];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strength(), target);
  }

  // optional bool passphrase_protection = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->passphrase_protection(), target);
  }

  // optional bool pin_protection = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->pin_protection(), target);
  }

  // optional string language = 5 [default = "en-US"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.ResetDevice.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->language(), target);
  }

  // optional string label = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.ResetDevice.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->label(), target);
  }

  // optional uint32 u2f_counter = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->u2f_counter(), target);
  }

  // optional bool skip_backup = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->skip_backup(), target);
  }

  // optional bool no_backup = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->no_backup(), target);
  }

  // optional .hw.trezor.messages.management.BackupType backup_type = 10 [default = Bip39];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->backup_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.ResetDevice)
  return target;
}

size_t ResetDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.ResetDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string language = 5 [default = "en-US"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional string label = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional bool display_random = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool passphrase_protection = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool pin_protection = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool skip_backup = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional uint32 u2f_counter = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->u2f_counter());
    }

    // optional bool no_backup = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional .hw.trezor.messages.management.BackupType backup_type = 10 [default = Bip39];
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->backup_type());
    }

    // optional uint32 strength = 2 [default = 256];
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strength());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.ResetDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetDevice* source =
      ::google::protobuf::DynamicCastToGenerated<ResetDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.ResetDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.ResetDevice)
    MergeFrom(*source);
  }
}

void ResetDevice::MergeFrom(const ResetDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.ResetDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      language_.AssignWithDefault(&::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.get(), from.language_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000004u) {
      display_random_ = from.display_random_;
    }
    if (cached_has_bits & 0x00000008u) {
      passphrase_protection_ = from.passphrase_protection_;
    }
    if (cached_has_bits & 0x00000010u) {
      pin_protection_ = from.pin_protection_;
    }
    if (cached_has_bits & 0x00000020u) {
      skip_backup_ = from.skip_backup_;
    }
    if (cached_has_bits & 0x00000040u) {
      u2f_counter_ = from.u2f_counter_;
    }
    if (cached_has_bits & 0x00000080u) {
      no_backup_ = from.no_backup_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      backup_type_ = from.backup_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      strength_ = from.strength_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResetDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.ResetDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetDevice::CopyFrom(const ResetDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.ResetDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetDevice::IsInitialized() const {
  return true;
}

void ResetDevice::Swap(ResetDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetDevice::InternalSwap(ResetDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  language_.Swap(&other->language_, &::hw::trezor::messages::management::ResetDevice::_i_give_permission_to_break_this_code_default_language_.get(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(display_random_, other->display_random_);
  swap(passphrase_protection_, other->passphrase_protection_);
  swap(pin_protection_, other->pin_protection_);
  swap(skip_backup_, other->skip_backup_);
  swap(u2f_counter_, other->u2f_counter_);
  swap(no_backup_, other->no_backup_);
  swap(backup_type_, other->backup_type_);
  swap(strength_, other->strength_);
}

::google::protobuf::Metadata ResetDevice::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BackupDevice::InitAsDefaultInstance() {
}
class BackupDevice::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackupDevice::BackupDevice()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.BackupDevice)
}
BackupDevice::BackupDevice(const BackupDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.BackupDevice)
}

void BackupDevice::SharedCtor() {
}

BackupDevice::~BackupDevice() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.BackupDevice)
  SharedDtor();
}

void BackupDevice::SharedDtor() {
}

void BackupDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BackupDevice& BackupDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BackupDevice_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void BackupDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.BackupDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BackupDevice::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BackupDevice*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BackupDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.BackupDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.BackupDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.BackupDevice)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BackupDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.BackupDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.BackupDevice)
}

::google::protobuf::uint8* BackupDevice::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.BackupDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.BackupDevice)
  return target;
}

size_t BackupDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.BackupDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BackupDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.BackupDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const BackupDevice* source =
      ::google::protobuf::DynamicCastToGenerated<BackupDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.BackupDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.BackupDevice)
    MergeFrom(*source);
  }
}

void BackupDevice::MergeFrom(const BackupDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.BackupDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BackupDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.BackupDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackupDevice::CopyFrom(const BackupDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.BackupDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackupDevice::IsInitialized() const {
  return true;
}

void BackupDevice::Swap(BackupDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackupDevice::InternalSwap(BackupDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata BackupDevice::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EntropyRequest::InitAsDefaultInstance() {
}
class EntropyRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntropyRequest::EntropyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.EntropyRequest)
}
EntropyRequest::EntropyRequest(const EntropyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.EntropyRequest)
}

void EntropyRequest::SharedCtor() {
}

EntropyRequest::~EntropyRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.EntropyRequest)
  SharedDtor();
}

void EntropyRequest::SharedDtor() {
}

void EntropyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntropyRequest& EntropyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EntropyRequest_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void EntropyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.EntropyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EntropyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EntropyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EntropyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.EntropyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.EntropyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.EntropyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EntropyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.EntropyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.EntropyRequest)
}

::google::protobuf::uint8* EntropyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.EntropyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.EntropyRequest)
  return target;
}

size_t EntropyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.EntropyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntropyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.EntropyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EntropyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EntropyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.EntropyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.EntropyRequest)
    MergeFrom(*source);
  }
}

void EntropyRequest::MergeFrom(const EntropyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.EntropyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EntropyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.EntropyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntropyRequest::CopyFrom(const EntropyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.EntropyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntropyRequest::IsInitialized() const {
  return true;
}

void EntropyRequest::Swap(EntropyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntropyRequest::InternalSwap(EntropyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata EntropyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EntropyAck::InitAsDefaultInstance() {
}
class EntropyAck::HasBitSetters {
 public:
  static void set_has_entropy(EntropyAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntropyAck::kEntropyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntropyAck::EntropyAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.EntropyAck)
}
EntropyAck::EntropyAck(const EntropyAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entropy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_entropy()) {
    entropy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entropy_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.EntropyAck)
}

void EntropyAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EntropyAck_messages_2dmanagement_2eproto.base);
  entropy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EntropyAck::~EntropyAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.EntropyAck)
  SharedDtor();
}

void EntropyAck::SharedDtor() {
  entropy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntropyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntropyAck& EntropyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EntropyAck_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void EntropyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.EntropyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    entropy_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EntropyAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EntropyAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes entropy = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_entropy();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EntropyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.EntropyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes entropy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_entropy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.EntropyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.EntropyAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EntropyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.EntropyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes entropy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->entropy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.EntropyAck)
}

::google::protobuf::uint8* EntropyAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.EntropyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes entropy = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->entropy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.EntropyAck)
  return target;
}

size_t EntropyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.EntropyAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes entropy = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->entropy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntropyAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.EntropyAck)
  GOOGLE_DCHECK_NE(&from, this);
  const EntropyAck* source =
      ::google::protobuf::DynamicCastToGenerated<EntropyAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.EntropyAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.EntropyAck)
    MergeFrom(*source);
  }
}

void EntropyAck::MergeFrom(const EntropyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.EntropyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entropy()) {
    _has_bits_[0] |= 0x00000001u;
    entropy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entropy_);
  }
}

void EntropyAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.EntropyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntropyAck::CopyFrom(const EntropyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.EntropyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntropyAck::IsInitialized() const {
  return true;
}

void EntropyAck::Swap(EntropyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntropyAck::InternalSwap(EntropyAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  entropy_.Swap(&other->entropy_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EntropyAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RecoveryDevice::InitAsDefaultInstance() {
}
class RecoveryDevice::HasBitSetters {
 public:
  static void set_has_word_count(RecoveryDevice* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_passphrase_protection(RecoveryDevice* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pin_protection(RecoveryDevice* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_language(RecoveryDevice* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_label(RecoveryDevice* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_enforce_wordlist(RecoveryDevice* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_type(RecoveryDevice* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_u2f_counter(RecoveryDevice* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_dry_run(RecoveryDevice* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

::google::protobuf::internal::ExplicitlyConstructed<::std::string> RecoveryDevice::_i_give_permission_to_break_this_code_default_language_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoveryDevice::kWordCountFieldNumber;
const int RecoveryDevice::kPassphraseProtectionFieldNumber;
const int RecoveryDevice::kPinProtectionFieldNumber;
const int RecoveryDevice::kLanguageFieldNumber;
const int RecoveryDevice::kLabelFieldNumber;
const int RecoveryDevice::kEnforceWordlistFieldNumber;
const int RecoveryDevice::kTypeFieldNumber;
const int RecoveryDevice::kU2FCounterFieldNumber;
const int RecoveryDevice::kDryRunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoveryDevice::RecoveryDevice()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.RecoveryDevice)
}
RecoveryDevice::RecoveryDevice(const RecoveryDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.get());
  if (from.has_language()) {
    language_.AssignWithDefault(&::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.get(), from.language_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&word_count_, &from.word_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&u2f_counter_) -
    reinterpret_cast<char*>(&word_count_)) + sizeof(u2f_counter_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.RecoveryDevice)
}

void RecoveryDevice::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RecoveryDevice_messages_2dmanagement_2eproto.base);
  language_.UnsafeSetDefault(&::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.get());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&word_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&u2f_counter_) -
      reinterpret_cast<char*>(&word_count_)) + sizeof(u2f_counter_));
}

RecoveryDevice::~RecoveryDevice() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.RecoveryDevice)
  SharedDtor();
}

void RecoveryDevice::SharedDtor() {
  language_.DestroyNoArena(&::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.get());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecoveryDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecoveryDevice& RecoveryDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RecoveryDevice_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void RecoveryDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.RecoveryDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      language_.UnsafeMutablePointer()->assign(*&::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&word_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&word_count_)) + sizeof(type_));
  }
  u2f_counter_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RecoveryDevice::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RecoveryDevice*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 word_count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_word_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool passphrase_protection = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_passphrase_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool pin_protection = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pin_protection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string language = 4 [default = "en-US"];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.RecoveryDevice.language");
        object = msg->mutable_language();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string label = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.RecoveryDevice.label");
        object = msg->mutable_label();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool enforce_wordlist = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_enforce_wordlist(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .hw.trezor.messages.management.RecoveryDevice.RecoveryDeviceType type = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::hw::trezor::messages::management::RecoveryDevice_RecoveryDeviceType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(8, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_type(static_cast<::hw::trezor::messages::management::RecoveryDevice_RecoveryDeviceType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 u2f_counter = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_u2f_counter(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool dry_run = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_dry_run(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RecoveryDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.RecoveryDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 word_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_word_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &word_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool passphrase_protection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_passphrase_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passphrase_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pin_protection = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pin_protection(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pin_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string language = 4 [default = "en-US"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.RecoveryDevice.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.RecoveryDevice.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enforce_wordlist = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_enforce_wordlist(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enforce_wordlist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.management.RecoveryDevice.RecoveryDeviceType type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::management::RecoveryDevice_RecoveryDeviceType_IsValid(value)) {
            set_type(static_cast< ::hw::trezor::messages::management::RecoveryDevice_RecoveryDeviceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 u2f_counter = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_u2f_counter(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u2f_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dry_run = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_dry_run(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dry_run_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.RecoveryDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.RecoveryDevice)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RecoveryDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.RecoveryDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 word_count = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->word_count(), output);
  }

  // optional bool passphrase_protection = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->passphrase_protection(), output);
  }

  // optional bool pin_protection = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->pin_protection(), output);
  }

  // optional string language = 4 [default = "en-US"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.RecoveryDevice.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->language(), output);
  }

  // optional string label = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.RecoveryDevice.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->label(), output);
  }

  // optional bool enforce_wordlist = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->enforce_wordlist(), output);
  }

  // optional .hw.trezor.messages.management.RecoveryDevice.RecoveryDeviceType type = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->type(), output);
  }

  // optional uint32 u2f_counter = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->u2f_counter(), output);
  }

  // optional bool dry_run = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->dry_run(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.RecoveryDevice)
}

::google::protobuf::uint8* RecoveryDevice::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.RecoveryDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 word_count = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->word_count(), target);
  }

  // optional bool passphrase_protection = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->passphrase_protection(), target);
  }

  // optional bool pin_protection = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->pin_protection(), target);
  }

  // optional string language = 4 [default = "en-US"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.RecoveryDevice.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->language(), target);
  }

  // optional string label = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.RecoveryDevice.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->label(), target);
  }

  // optional bool enforce_wordlist = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->enforce_wordlist(), target);
  }

  // optional .hw.trezor.messages.management.RecoveryDevice.RecoveryDeviceType type = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->type(), target);
  }

  // optional uint32 u2f_counter = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->u2f_counter(), target);
  }

  // optional bool dry_run = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->dry_run(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.RecoveryDevice)
  return target;
}

size_t RecoveryDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.RecoveryDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string language = 4 [default = "en-US"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional string label = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional uint32 word_count = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->word_count());
    }

    // optional bool passphrase_protection = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool pin_protection = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool enforce_wordlist = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool dry_run = 10;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional .hw.trezor.messages.management.RecoveryDevice.RecoveryDeviceType type = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  // optional uint32 u2f_counter = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->u2f_counter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoveryDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.RecoveryDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoveryDevice* source =
      ::google::protobuf::DynamicCastToGenerated<RecoveryDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.RecoveryDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.RecoveryDevice)
    MergeFrom(*source);
  }
}

void RecoveryDevice::MergeFrom(const RecoveryDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.RecoveryDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      language_.AssignWithDefault(&::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.get(), from.language_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000004u) {
      word_count_ = from.word_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      passphrase_protection_ = from.passphrase_protection_;
    }
    if (cached_has_bits & 0x00000010u) {
      pin_protection_ = from.pin_protection_;
    }
    if (cached_has_bits & 0x00000020u) {
      enforce_wordlist_ = from.enforce_wordlist_;
    }
    if (cached_has_bits & 0x00000040u) {
      dry_run_ = from.dry_run_;
    }
    if (cached_has_bits & 0x00000080u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_u2f_counter(from.u2f_counter());
  }
}

void RecoveryDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.RecoveryDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoveryDevice::CopyFrom(const RecoveryDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.RecoveryDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoveryDevice::IsInitialized() const {
  return true;
}

void RecoveryDevice::Swap(RecoveryDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoveryDevice::InternalSwap(RecoveryDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  language_.Swap(&other->language_, &::hw::trezor::messages::management::RecoveryDevice::_i_give_permission_to_break_this_code_default_language_.get(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(word_count_, other->word_count_);
  swap(passphrase_protection_, other->passphrase_protection_);
  swap(pin_protection_, other->pin_protection_);
  swap(enforce_wordlist_, other->enforce_wordlist_);
  swap(dry_run_, other->dry_run_);
  swap(type_, other->type_);
  swap(u2f_counter_, other->u2f_counter_);
}

::google::protobuf::Metadata RecoveryDevice::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WordRequest::InitAsDefaultInstance() {
}
class WordRequest::HasBitSetters {
 public:
  static void set_has_type(WordRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WordRequest::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WordRequest::WordRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.WordRequest)
}
WordRequest::WordRequest(const WordRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.WordRequest)
}

void WordRequest::SharedCtor() {
  type_ = 0;
}

WordRequest::~WordRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.WordRequest)
  SharedDtor();
}

void WordRequest::SharedDtor() {
}

void WordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WordRequest& WordRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WordRequest_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void WordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.WordRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WordRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WordRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.management.WordRequest.WordRequestType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::hw::trezor::messages::management::WordRequest_WordRequestType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_type(static_cast<::hw::trezor::messages::management::WordRequest_WordRequestType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WordRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.WordRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.management.WordRequest.WordRequestType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::management::WordRequest_WordRequestType_IsValid(value)) {
            set_type(static_cast< ::hw::trezor::messages::management::WordRequest_WordRequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.WordRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.WordRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WordRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.WordRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.management.WordRequest.WordRequestType type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.WordRequest)
}

::google::protobuf::uint8* WordRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.WordRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.management.WordRequest.WordRequestType type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.WordRequest)
  return target;
}

size_t WordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.WordRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .hw.trezor.messages.management.WordRequest.WordRequestType type = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WordRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.WordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WordRequest* source =
      ::google::protobuf::DynamicCastToGenerated<WordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.WordRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.WordRequest)
    MergeFrom(*source);
  }
}

void WordRequest::MergeFrom(const WordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.WordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
}

void WordRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.WordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WordRequest::CopyFrom(const WordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.WordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WordRequest::IsInitialized() const {
  return true;
}

void WordRequest::Swap(WordRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WordRequest::InternalSwap(WordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(type_, other->type_);
}

::google::protobuf::Metadata WordRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WordAck::InitAsDefaultInstance() {
}
class WordAck::HasBitSetters {
 public:
  static void set_has_word(WordAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WordAck::kWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WordAck::WordAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.WordAck)
}
WordAck::WordAck(const WordAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_word()) {
    word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.WordAck)
}

void WordAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WordAck_messages_2dmanagement_2eproto.base);
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WordAck::~WordAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.WordAck)
  SharedDtor();
}

void WordAck::SharedDtor() {
  word_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WordAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WordAck& WordAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WordAck_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void WordAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.WordAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    word_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WordAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WordAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string word = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.management.WordAck.word");
        object = msg->mutable_word();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WordAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.WordAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string word = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_word()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->word().data(), static_cast<int>(this->word().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.management.WordAck.word");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.WordAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.WordAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WordAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.WordAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string word = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.WordAck.word");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->word(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.WordAck)
}

::google::protobuf::uint8* WordAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.WordAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string word = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.management.WordAck.word");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->word(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.WordAck)
  return target;
}

size_t WordAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.WordAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string word = 1;
  if (has_word()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->word());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WordAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.WordAck)
  GOOGLE_DCHECK_NE(&from, this);
  const WordAck* source =
      ::google::protobuf::DynamicCastToGenerated<WordAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.WordAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.WordAck)
    MergeFrom(*source);
  }
}

void WordAck::MergeFrom(const WordAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.WordAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_word()) {
    _has_bits_[0] |= 0x00000001u;
    word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
}

void WordAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.WordAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WordAck::CopyFrom(const WordAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.WordAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WordAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void WordAck::Swap(WordAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WordAck::InternalSwap(WordAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  word_.Swap(&other->word_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata WordAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetU2FCounter::InitAsDefaultInstance() {
}
class SetU2FCounter::HasBitSetters {
 public:
  static void set_has_u2f_counter(SetU2FCounter* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetU2FCounter::kU2FCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetU2FCounter::SetU2FCounter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.SetU2FCounter)
}
SetU2FCounter::SetU2FCounter(const SetU2FCounter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  u2f_counter_ = from.u2f_counter_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.SetU2FCounter)
}

void SetU2FCounter::SharedCtor() {
  u2f_counter_ = 0u;
}

SetU2FCounter::~SetU2FCounter() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.SetU2FCounter)
  SharedDtor();
}

void SetU2FCounter::SharedDtor() {
}

void SetU2FCounter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetU2FCounter& SetU2FCounter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetU2FCounter_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void SetU2FCounter::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.SetU2FCounter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  u2f_counter_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetU2FCounter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetU2FCounter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 u2f_counter = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_u2f_counter(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetU2FCounter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.SetU2FCounter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 u2f_counter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_u2f_counter(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u2f_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.SetU2FCounter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.SetU2FCounter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetU2FCounter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.SetU2FCounter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 u2f_counter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->u2f_counter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.SetU2FCounter)
}

::google::protobuf::uint8* SetU2FCounter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.SetU2FCounter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 u2f_counter = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->u2f_counter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.SetU2FCounter)
  return target;
}

size_t SetU2FCounter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.SetU2FCounter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 u2f_counter = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->u2f_counter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetU2FCounter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.SetU2FCounter)
  GOOGLE_DCHECK_NE(&from, this);
  const SetU2FCounter* source =
      ::google::protobuf::DynamicCastToGenerated<SetU2FCounter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.SetU2FCounter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.SetU2FCounter)
    MergeFrom(*source);
  }
}

void SetU2FCounter::MergeFrom(const SetU2FCounter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.SetU2FCounter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_u2f_counter()) {
    set_u2f_counter(from.u2f_counter());
  }
}

void SetU2FCounter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.SetU2FCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetU2FCounter::CopyFrom(const SetU2FCounter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.SetU2FCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetU2FCounter::IsInitialized() const {
  return true;
}

void SetU2FCounter::Swap(SetU2FCounter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetU2FCounter::InternalSwap(SetU2FCounter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(u2f_counter_, other->u2f_counter_);
}

::google::protobuf::Metadata SetU2FCounter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetNextU2FCounter::InitAsDefaultInstance() {
}
class GetNextU2FCounter::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNextU2FCounter::GetNextU2FCounter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.GetNextU2FCounter)
}
GetNextU2FCounter::GetNextU2FCounter(const GetNextU2FCounter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.GetNextU2FCounter)
}

void GetNextU2FCounter::SharedCtor() {
}

GetNextU2FCounter::~GetNextU2FCounter() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.GetNextU2FCounter)
  SharedDtor();
}

void GetNextU2FCounter::SharedDtor() {
}

void GetNextU2FCounter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetNextU2FCounter& GetNextU2FCounter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetNextU2FCounter_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void GetNextU2FCounter::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.GetNextU2FCounter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetNextU2FCounter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetNextU2FCounter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetNextU2FCounter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.GetNextU2FCounter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.GetNextU2FCounter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.GetNextU2FCounter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetNextU2FCounter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.GetNextU2FCounter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.GetNextU2FCounter)
}

::google::protobuf::uint8* GetNextU2FCounter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.GetNextU2FCounter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.GetNextU2FCounter)
  return target;
}

size_t GetNextU2FCounter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.GetNextU2FCounter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNextU2FCounter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.GetNextU2FCounter)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNextU2FCounter* source =
      ::google::protobuf::DynamicCastToGenerated<GetNextU2FCounter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.GetNextU2FCounter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.GetNextU2FCounter)
    MergeFrom(*source);
  }
}

void GetNextU2FCounter::MergeFrom(const GetNextU2FCounter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.GetNextU2FCounter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetNextU2FCounter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.GetNextU2FCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNextU2FCounter::CopyFrom(const GetNextU2FCounter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.GetNextU2FCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextU2FCounter::IsInitialized() const {
  return true;
}

void GetNextU2FCounter::Swap(GetNextU2FCounter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNextU2FCounter::InternalSwap(GetNextU2FCounter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata GetNextU2FCounter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NextU2FCounter::InitAsDefaultInstance() {
}
class NextU2FCounter::HasBitSetters {
 public:
  static void set_has_u2f_counter(NextU2FCounter* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NextU2FCounter::kU2FCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NextU2FCounter::NextU2FCounter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.management.NextU2FCounter)
}
NextU2FCounter::NextU2FCounter(const NextU2FCounter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  u2f_counter_ = from.u2f_counter_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.management.NextU2FCounter)
}

void NextU2FCounter::SharedCtor() {
  u2f_counter_ = 0u;
}

NextU2FCounter::~NextU2FCounter() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.management.NextU2FCounter)
  SharedDtor();
}

void NextU2FCounter::SharedDtor() {
}

void NextU2FCounter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NextU2FCounter& NextU2FCounter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NextU2FCounter_messages_2dmanagement_2eproto.base);
  return *internal_default_instance();
}


void NextU2FCounter::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.management.NextU2FCounter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  u2f_counter_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NextU2FCounter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NextU2FCounter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 u2f_counter = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_u2f_counter(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NextU2FCounter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.management.NextU2FCounter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 u2f_counter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_u2f_counter(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u2f_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.management.NextU2FCounter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.management.NextU2FCounter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NextU2FCounter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.management.NextU2FCounter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 u2f_counter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->u2f_counter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.management.NextU2FCounter)
}

::google::protobuf::uint8* NextU2FCounter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.management.NextU2FCounter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 u2f_counter = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->u2f_counter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.management.NextU2FCounter)
  return target;
}

size_t NextU2FCounter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.management.NextU2FCounter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 u2f_counter = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->u2f_counter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NextU2FCounter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.management.NextU2FCounter)
  GOOGLE_DCHECK_NE(&from, this);
  const NextU2FCounter* source =
      ::google::protobuf::DynamicCastToGenerated<NextU2FCounter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.management.NextU2FCounter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.management.NextU2FCounter)
    MergeFrom(*source);
  }
}

void NextU2FCounter::MergeFrom(const NextU2FCounter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.management.NextU2FCounter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_u2f_counter()) {
    set_u2f_counter(from.u2f_counter());
  }
}

void NextU2FCounter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.management.NextU2FCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NextU2FCounter::CopyFrom(const NextU2FCounter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.management.NextU2FCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NextU2FCounter::IsInitialized() const {
  return true;
}

void NextU2FCounter::Swap(NextU2FCounter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NextU2FCounter::InternalSwap(NextU2FCounter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(u2f_counter_, other->u2f_counter_);
}

::google::protobuf::Metadata NextU2FCounter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmanagement_2eproto);
  return ::file_level_metadata_messages_2dmanagement_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace management
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::Initialize* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::Initialize >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::Initialize >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::GetFeatures* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::GetFeatures >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::GetFeatures >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::Features* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::Features >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::Features >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::ClearSession* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::ClearSession >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::ClearSession >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::ApplySettings* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::ApplySettings >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::ApplySettings >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::ApplyFlags* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::ApplyFlags >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::ApplyFlags >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::ChangePin* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::ChangePin >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::ChangePin >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::ChangeWipeCode* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::ChangeWipeCode >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::ChangeWipeCode >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::SdProtect* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::SdProtect >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::SdProtect >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::Ping* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::Ping >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::Ping >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::Cancel* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::Cancel >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::Cancel >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::GetEntropy* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::GetEntropy >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::GetEntropy >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::Entropy* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::Entropy >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::Entropy >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::WipeDevice* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::WipeDevice >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::WipeDevice >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::LoadDevice* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::LoadDevice >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::LoadDevice >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::ResetDevice* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::ResetDevice >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::ResetDevice >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::BackupDevice* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::BackupDevice >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::BackupDevice >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::EntropyRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::EntropyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::EntropyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::EntropyAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::EntropyAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::EntropyAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::RecoveryDevice* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::RecoveryDevice >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::RecoveryDevice >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::WordRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::WordRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::WordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::WordAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::WordAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::WordAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::SetU2FCounter* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::SetU2FCounter >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::SetU2FCounter >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::GetNextU2FCounter* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::GetNextU2FCounter >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::GetNextU2FCounter >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::management::NextU2FCounter* Arena::CreateMaybeMessage< ::hw::trezor::messages::management::NextU2FCounter >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::management::NextU2FCounter >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
