// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-beam.proto

#include "messages-beam.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messages_2dbeam_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dbeam_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BeamPublicKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dbeam_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BeamSignReceiveTx_BeamPayment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dbeam_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BeamSignSendTx_BeamPayment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dbeam_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BeamSignature;
}  // namespace protobuf_messages_2dbeam_2eproto
namespace hw {
namespace trezor {
namespace messages {
namespace beam {
class BeamTransactionSourceEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamTransactionSourceEntry>
      _instance;
} _BeamTransactionSourceEntry_default_instance_;
class BeamTransactionDestinationEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamTransactionDestinationEntry>
      _instance;
} _BeamTransactionDestinationEntry_default_instance_;
class BeamSignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamSignature>
      _instance;
} _BeamSignature_default_instance_;
class BeamGetAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamGetAddress>
      _instance;
} _BeamGetAddress_default_instance_;
class BeamAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamAddress>
      _instance;
} _BeamAddress_default_instance_;
class BeamDisplayMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamDisplayMessage>
      _instance;
} _BeamDisplayMessage_default_instance_;
class BeamConfirmResponseMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamConfirmResponseMessage>
      _instance;
} _BeamConfirmResponseMessage_default_instance_;
class BeamSignMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamSignMessage>
      _instance;
} _BeamSignMessage_default_instance_;
class BeamSignedMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamSignedMessage>
      _instance;
} _BeamSignedMessage_default_instance_;
class BeamVerifyMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamVerifyMessage>
      _instance;
} _BeamVerifyMessage_default_instance_;
class BeamGetPublicKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamGetPublicKey>
      _instance;
} _BeamGetPublicKey_default_instance_;
class BeamPublicKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamPublicKey>
      _instance;
} _BeamPublicKey_default_instance_;
class BeamGetOwnerKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamGetOwnerKey>
      _instance;
} _BeamGetOwnerKey_default_instance_;
class BeamOwnerKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamOwnerKey>
      _instance;
} _BeamOwnerKey_default_instance_;
class BeamSignSendTx_BeamPaymentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamSignSendTx_BeamPayment>
      _instance;
} _BeamSignSendTx_BeamPayment_default_instance_;
class BeamSignSendTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamSignSendTx>
      _instance;
} _BeamSignSendTx_default_instance_;
class BeamSignReceiveTx_BeamPaymentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamSignReceiveTx_BeamPayment>
      _instance;
} _BeamSignReceiveTx_BeamPayment_default_instance_;
class BeamSignReceiveTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamSignReceiveTx>
      _instance;
} _BeamSignReceiveTx_default_instance_;
class BeamSignedTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeamSignedTx>
      _instance;
} _BeamSignedTx_default_instance_;
}  // namespace beam
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace protobuf_messages_2dbeam_2eproto {
static void InitDefaultsBeamTransactionSourceEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamTransactionSourceEntry_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamTransactionSourceEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamTransactionSourceEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamTransactionSourceEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamTransactionSourceEntry}, {}};

static void InitDefaultsBeamTransactionDestinationEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamTransactionDestinationEntry_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamTransactionDestinationEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamTransactionDestinationEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamTransactionDestinationEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamTransactionDestinationEntry}, {}};

static void InitDefaultsBeamSignature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamSignature_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamSignature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamSignature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamSignature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamSignature}, {}};

static void InitDefaultsBeamGetAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamGetAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamGetAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamGetAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamGetAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamGetAddress}, {}};

static void InitDefaultsBeamAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamAddress}, {}};

static void InitDefaultsBeamDisplayMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamDisplayMessage_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamDisplayMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamDisplayMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamDisplayMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamDisplayMessage}, {}};

static void InitDefaultsBeamConfirmResponseMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamConfirmResponseMessage_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamConfirmResponseMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamConfirmResponseMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamConfirmResponseMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamConfirmResponseMessage}, {}};

static void InitDefaultsBeamSignMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamSignMessage_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamSignMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamSignMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamSignMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamSignMessage}, {}};

static void InitDefaultsBeamSignedMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamSignedMessage_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamSignedMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamSignedMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BeamSignedMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBeamSignedMessage}, {
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignature.base,}};

static void InitDefaultsBeamVerifyMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamVerifyMessage_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamVerifyMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamVerifyMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BeamVerifyMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBeamVerifyMessage}, {
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignature.base,
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamPublicKey.base,}};

static void InitDefaultsBeamGetPublicKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamGetPublicKey_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamGetPublicKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamGetPublicKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamGetPublicKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamGetPublicKey}, {}};

static void InitDefaultsBeamPublicKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamPublicKey_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamPublicKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamPublicKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamPublicKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamPublicKey}, {}};

static void InitDefaultsBeamGetOwnerKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamGetOwnerKey_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamGetOwnerKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamGetOwnerKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamGetOwnerKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamGetOwnerKey}, {}};

static void InitDefaultsBeamOwnerKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamOwnerKey_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamOwnerKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamOwnerKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamOwnerKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamOwnerKey}, {}};

static void InitDefaultsBeamSignSendTx_BeamPayment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamSignSendTx_BeamPayment_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamSignSendTx_BeamPayment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamSignSendTx_BeamPayment}, {}};

static void InitDefaultsBeamSignSendTx() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamSignSendTx_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamSignSendTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamSignSendTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BeamSignSendTx =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBeamSignSendTx}, {
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignSendTx_BeamPayment.base,}};

static void InitDefaultsBeamSignReceiveTx_BeamPayment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamSignReceiveTx_BeamPayment_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamSignReceiveTx_BeamPayment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamSignReceiveTx_BeamPayment}, {}};

static void InitDefaultsBeamSignReceiveTx() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamSignReceiveTx_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamSignReceiveTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamSignReceiveTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BeamSignReceiveTx =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBeamSignReceiveTx}, {
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignReceiveTx_BeamPayment.base,
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignature.base,}};

static void InitDefaultsBeamSignedTx() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::beam::_BeamSignedTx_default_instance_;
    new (ptr) ::hw::trezor::messages::beam::BeamSignedTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::beam::BeamSignedTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BeamSignedTx =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBeamSignedTx}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BeamTransactionSourceEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamTransactionDestinationEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamSignature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamGetAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamDisplayMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamConfirmResponseMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamSignMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamSignedMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamVerifyMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamGetPublicKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamPublicKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamGetOwnerKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamOwnerKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamSignSendTx_BeamPayment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamSignSendTx.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamSignReceiveTx_BeamPayment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamSignReceiveTx.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BeamSignedTx.base);
}

::google::protobuf::Metadata file_level_metadata[19];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamTransactionSourceEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamTransactionSourceEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamTransactionDestinationEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamTransactionDestinationEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignature, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignature, nonce_pub_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignature, nonce_pub_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignature, sign_k_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetAddress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetAddress, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetAddress, show_display_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamAddress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamAddress, address_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamDisplayMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamDisplayMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamDisplayMessage, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamDisplayMessage, show_display_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamConfirmResponseMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamConfirmResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamConfirmResponseMessage, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamConfirmResponseMessage, response_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignMessage, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignMessage, show_display_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignedMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignedMessage, signature_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamVerifyMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamVerifyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamVerifyMessage, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamVerifyMessage, public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamVerifyMessage, message_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetPublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetPublicKey, show_display_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamPublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamPublicKey, pub_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamPublicKey, pub_y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetOwnerKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetOwnerKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamGetOwnerKey, show_display_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamOwnerKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamOwnerKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamOwnerKey, key_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment, destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment, destination_tag_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx, fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignSendTx, payment_),
  ~0u,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment, destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment, destination_tag_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx, fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx, payment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignReceiveTx, signature_),
  ~0u,
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignedTx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignedTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignedTx, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::beam::BeamSignedTx, serialized_tx_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::hw::trezor::messages::beam::BeamTransactionSourceEntry)},
  { 5, 10, sizeof(::hw::trezor::messages::beam::BeamTransactionDestinationEntry)},
  { 10, 18, sizeof(::hw::trezor::messages::beam::BeamSignature)},
  { 21, 28, sizeof(::hw::trezor::messages::beam::BeamGetAddress)},
  { 30, 36, sizeof(::hw::trezor::messages::beam::BeamAddress)},
  { 37, 44, sizeof(::hw::trezor::messages::beam::BeamDisplayMessage)},
  { 46, 53, sizeof(::hw::trezor::messages::beam::BeamConfirmResponseMessage)},
  { 55, 62, sizeof(::hw::trezor::messages::beam::BeamSignMessage)},
  { 64, 70, sizeof(::hw::trezor::messages::beam::BeamSignedMessage)},
  { 71, 79, sizeof(::hw::trezor::messages::beam::BeamVerifyMessage)},
  { 82, 88, sizeof(::hw::trezor::messages::beam::BeamGetPublicKey)},
  { 89, 96, sizeof(::hw::trezor::messages::beam::BeamPublicKey)},
  { 98, 104, sizeof(::hw::trezor::messages::beam::BeamGetOwnerKey)},
  { 105, 111, sizeof(::hw::trezor::messages::beam::BeamOwnerKey)},
  { 112, 120, sizeof(::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment)},
  { 123, 132, sizeof(::hw::trezor::messages::beam::BeamSignSendTx)},
  { 136, 144, sizeof(::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment)},
  { 147, 157, sizeof(::hw::trezor::messages::beam::BeamSignReceiveTx)},
  { 162, 169, sizeof(::hw::trezor::messages::beam::BeamSignedTx)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamTransactionSourceEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamTransactionDestinationEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamGetAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamDisplayMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamConfirmResponseMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamSignMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamSignedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamVerifyMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamGetPublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamPublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamGetOwnerKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamOwnerKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamSignSendTx_BeamPayment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamSignSendTx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamSignReceiveTx_BeamPayment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamSignReceiveTx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::beam::_BeamSignedTx_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages-beam.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023messages-beam.proto\022\027hw.trezor.message"
      "s.beam\"\034\n\032BeamTransactionSourceEntry\"!\n\037"
      "BeamTransactionDestinationEntry\"I\n\rBeamS"
      "ignature\022\023\n\013nonce_pub_x\030\001 \001(\014\022\023\n\013nonce_p"
      "ub_y\030\002 \001(\014\022\016\n\006sign_k\030\003 \001(\014\"9\n\016BeamGetAdd"
      "ress\022\021\n\taddress_n\030\001 \003(\r\022\024\n\014show_display\030"
      "\002 \001(\010\"\036\n\013BeamAddress\022\017\n\007address\030\001 \001(\t\"8\n"
      "\022BeamDisplayMessage\022\014\n\004text\030\001 \001(\t\022\024\n\014sho"
      "w_display\030\002 \001(\010\"<\n\032BeamConfirmResponseMe"
      "ssage\022\014\n\004text\030\001 \001(\t\022\020\n\010response\030\002 \001(\010\"4\n"
      "\017BeamSignMessage\022\013\n\003msg\030\001 \001(\t\022\024\n\014show_di"
      "splay\030\002 \001(\010\"N\n\021BeamSignedMessage\0229\n\tsign"
      "ature\030\001 \001(\0132&.hw.trezor.messages.beam.Be"
      "amSignature\"\233\001\n\021BeamVerifyMessage\0229\n\tsig"
      "nature\030\001 \001(\0132&.hw.trezor.messages.beam.B"
      "eamSignature\022:\n\npublic_key\030\002 \001(\0132&.hw.tr"
      "ezor.messages.beam.BeamPublicKey\022\017\n\007mess"
      "age\030\003 \001(\014\"(\n\020BeamGetPublicKey\022\024\n\014show_di"
      "splay\030\001 \001(\010\"-\n\rBeamPublicKey\022\r\n\005pub_x\030\001 "
      "\001(\014\022\r\n\005pub_y\030\002 \001(\014\"\'\n\017BeamGetOwnerKey\022\024\n"
      "\014show_display\030\001 \001(\010\"\033\n\014BeamOwnerKey\022\013\n\003k"
      "ey\030\001 \001(\014\"\322\001\n\016BeamSignSendTx\022\021\n\taddress_n"
      "\030\001 \003(\r\022\013\n\003fee\030\002 \001(\004\022\r\n\005flags\030\003 \001(\r\022D\n\007pa"
      "yment\030\004 \001(\01323.hw.trezor.messages.beam.Be"
      "amSignSendTx.BeamPayment\032K\n\013BeamPayment\022"
      "\016\n\006amount\030\001 \001(\004\022\023\n\013destination\030\002 \001(\t\022\027\n\017"
      "destination_tag\030\003 \001(\r\"\223\002\n\021BeamSignReceiv"
      "eTx\022\021\n\taddress_n\030\001 \003(\r\022\013\n\003fee\030\002 \001(\004\022\r\n\005f"
      "lags\030\003 \001(\r\022G\n\007payment\030\004 \001(\01326.hw.trezor."
      "messages.beam.BeamSignReceiveTx.BeamPaym"
      "ent\0229\n\tsignature\030\005 \001(\0132&.hw.trezor.messa"
      "ges.beam.BeamSignature\032K\n\013BeamPayment\022\016\n"
      "\006amount\030\001 \001(\004\022\023\n\013destination\030\002 \001(\t\022\027\n\017de"
      "stination_tag\030\003 \001(\r\"8\n\014BeamSignedTx\022\021\n\ts"
      "ignature\030\001 \001(\014\022\025\n\rserialized_tx\030\002 \001(\014B8\n"
      "#com.satoshilabs.trezor.lib.protobufB\021Tr"
      "ezorMessageBeam"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1455);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages-beam.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2dbeam_2eproto
namespace hw {
namespace trezor {
namespace messages {
namespace beam {

// ===================================================================

void BeamTransactionSourceEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamTransactionSourceEntry::BeamTransactionSourceEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamTransactionSourceEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamTransactionSourceEntry)
}
BeamTransactionSourceEntry::BeamTransactionSourceEntry(const BeamTransactionSourceEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamTransactionSourceEntry)
}

void BeamTransactionSourceEntry::SharedCtor() {
}

BeamTransactionSourceEntry::~BeamTransactionSourceEntry() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  SharedDtor();
}

void BeamTransactionSourceEntry::SharedDtor() {
}

void BeamTransactionSourceEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamTransactionSourceEntry::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamTransactionSourceEntry& BeamTransactionSourceEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamTransactionSourceEntry.base);
  return *internal_default_instance();
}


void BeamTransactionSourceEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamTransactionSourceEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  return false;
#undef DO_
}

void BeamTransactionSourceEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamTransactionSourceEntry)
}

::google::protobuf::uint8* BeamTransactionSourceEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  return target;
}

size_t BeamTransactionSourceEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamTransactionSourceEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamTransactionSourceEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamTransactionSourceEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamTransactionSourceEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamTransactionSourceEntry)
    MergeFrom(*source);
  }
}

void BeamTransactionSourceEntry::MergeFrom(const BeamTransactionSourceEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BeamTransactionSourceEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamTransactionSourceEntry::CopyFrom(const BeamTransactionSourceEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamTransactionSourceEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamTransactionSourceEntry::IsInitialized() const {
  return true;
}

void BeamTransactionSourceEntry::Swap(BeamTransactionSourceEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamTransactionSourceEntry::InternalSwap(BeamTransactionSourceEntry* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamTransactionSourceEntry::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamTransactionDestinationEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamTransactionDestinationEntry::BeamTransactionDestinationEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamTransactionDestinationEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
}
BeamTransactionDestinationEntry::BeamTransactionDestinationEntry(const BeamTransactionDestinationEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
}

void BeamTransactionDestinationEntry::SharedCtor() {
}

BeamTransactionDestinationEntry::~BeamTransactionDestinationEntry() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  SharedDtor();
}

void BeamTransactionDestinationEntry::SharedDtor() {
}

void BeamTransactionDestinationEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamTransactionDestinationEntry::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamTransactionDestinationEntry& BeamTransactionDestinationEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamTransactionDestinationEntry.base);
  return *internal_default_instance();
}


void BeamTransactionDestinationEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamTransactionDestinationEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  return false;
#undef DO_
}

void BeamTransactionDestinationEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
}

::google::protobuf::uint8* BeamTransactionDestinationEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  return target;
}

size_t BeamTransactionDestinationEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamTransactionDestinationEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamTransactionDestinationEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamTransactionDestinationEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
    MergeFrom(*source);
  }
}

void BeamTransactionDestinationEntry::MergeFrom(const BeamTransactionDestinationEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BeamTransactionDestinationEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamTransactionDestinationEntry::CopyFrom(const BeamTransactionDestinationEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamTransactionDestinationEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamTransactionDestinationEntry::IsInitialized() const {
  return true;
}

void BeamTransactionDestinationEntry::Swap(BeamTransactionDestinationEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamTransactionDestinationEntry::InternalSwap(BeamTransactionDestinationEntry* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamTransactionDestinationEntry::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamSignature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamSignature::kNoncePubXFieldNumber;
const int BeamSignature::kNoncePubYFieldNumber;
const int BeamSignature::kSignKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamSignature::BeamSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamSignature)
}
BeamSignature::BeamSignature(const BeamSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nonce_pub_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nonce_pub_x()) {
    nonce_pub_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_pub_x_);
  }
  nonce_pub_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nonce_pub_y()) {
    nonce_pub_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_pub_y_);
  }
  sign_k_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_k()) {
    sign_k_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_k_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamSignature)
}

void BeamSignature::SharedCtor() {
  nonce_pub_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_pub_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_k_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BeamSignature::~BeamSignature() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamSignature)
  SharedDtor();
}

void BeamSignature::SharedDtor() {
  nonce_pub_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_pub_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_k_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamSignature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamSignature::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamSignature& BeamSignature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamSignature.base);
  return *internal_default_instance();
}


void BeamSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      nonce_pub_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      nonce_pub_y_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sign_k_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamSignature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes nonce_pub_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nonce_pub_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes nonce_pub_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nonce_pub_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_k = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamSignature)
  return false;
#undef DO_
}

void BeamSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes nonce_pub_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->nonce_pub_x(), output);
  }

  // optional bytes nonce_pub_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->nonce_pub_y(), output);
  }

  // optional bytes sign_k = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sign_k(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamSignature)
}

::google::protobuf::uint8* BeamSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes nonce_pub_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->nonce_pub_x(), target);
  }

  // optional bytes nonce_pub_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->nonce_pub_y(), target);
  }

  // optional bytes sign_k = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sign_k(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamSignature)
  return target;
}

size_t BeamSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamSignature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes nonce_pub_x = 1;
    if (has_nonce_pub_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nonce_pub_x());
    }

    // optional bytes nonce_pub_y = 2;
    if (has_nonce_pub_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nonce_pub_y());
    }

    // optional bytes sign_k = 3;
    if (has_sign_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_k());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamSignature)
    MergeFrom(*source);
  }
}

void BeamSignature::MergeFrom(const BeamSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nonce_pub_x();
      nonce_pub_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_pub_x_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nonce_pub_y();
      nonce_pub_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_pub_y_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sign_k();
      sign_k_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_k_);
    }
  }
}

void BeamSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamSignature::CopyFrom(const BeamSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamSignature::IsInitialized() const {
  return true;
}

void BeamSignature::Swap(BeamSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamSignature::InternalSwap(BeamSignature* other) {
  using std::swap;
  nonce_pub_x_.Swap(&other->nonce_pub_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nonce_pub_y_.Swap(&other->nonce_pub_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_k_.Swap(&other->sign_k_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamSignature::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamGetAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamGetAddress::kAddressNFieldNumber;
const int BeamGetAddress::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamGetAddress::BeamGetAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamGetAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamGetAddress)
}
BeamGetAddress::BeamGetAddress(const BeamGetAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamGetAddress)
}

void BeamGetAddress::SharedCtor() {
  show_display_ = false;
}

BeamGetAddress::~BeamGetAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamGetAddress)
  SharedDtor();
}

void BeamGetAddress::SharedDtor() {
}

void BeamGetAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamGetAddress::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamGetAddress& BeamGetAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamGetAddress.base);
  return *internal_default_instance();
}


void BeamGetAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamGetAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamGetAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_show_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamGetAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamGetAddress)
  return false;
#undef DO_
}

void BeamGetAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamGetAddress)
}

::google::protobuf::uint8* BeamGetAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamGetAddress)
  return target;
}

size_t BeamGetAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamGetAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  // optional bool show_display = 2;
  if (has_show_display()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamGetAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamGetAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamGetAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamGetAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamGetAddress)
    MergeFrom(*source);
  }
}

void BeamGetAddress::MergeFrom(const BeamGetAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  if (from.has_show_display()) {
    set_show_display(from.show_display());
  }
}

void BeamGetAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamGetAddress::CopyFrom(const BeamGetAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamGetAddress::IsInitialized() const {
  return true;
}

void BeamGetAddress::Swap(BeamGetAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamGetAddress::InternalSwap(BeamGetAddress* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  swap(show_display_, other->show_display_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamGetAddress::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamAddress::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamAddress::BeamAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamAddress)
}
BeamAddress::BeamAddress(const BeamAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamAddress)
}

void BeamAddress::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BeamAddress::~BeamAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamAddress)
  SharedDtor();
}

void BeamAddress::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamAddress::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamAddress& BeamAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamAddress.base);
  return *internal_default_instance();
}


void BeamAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    address_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.beam.BeamAddress.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamAddress)
  return false;
#undef DO_
}

void BeamAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamAddress.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamAddress)
}

::google::protobuf::uint8* BeamAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamAddress.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamAddress)
  return target;
}

size_t BeamAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string address = 1;
  if (has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamAddress)
    MergeFrom(*source);
  }
}

void BeamAddress::MergeFrom(const BeamAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    set_has_address();
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void BeamAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamAddress::CopyFrom(const BeamAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamAddress::IsInitialized() const {
  return true;
}

void BeamAddress::Swap(BeamAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamAddress::InternalSwap(BeamAddress* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamAddress::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamDisplayMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamDisplayMessage::kTextFieldNumber;
const int BeamDisplayMessage::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamDisplayMessage::BeamDisplayMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamDisplayMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamDisplayMessage)
}
BeamDisplayMessage::BeamDisplayMessage(const BeamDisplayMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamDisplayMessage)
}

void BeamDisplayMessage::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  show_display_ = false;
}

BeamDisplayMessage::~BeamDisplayMessage() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamDisplayMessage)
  SharedDtor();
}

void BeamDisplayMessage::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamDisplayMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamDisplayMessage::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamDisplayMessage& BeamDisplayMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamDisplayMessage.base);
  return *internal_default_instance();
}


void BeamDisplayMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamDisplayMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamDisplayMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamDisplayMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.beam.BeamDisplayMessage.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_show_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamDisplayMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamDisplayMessage)
  return false;
#undef DO_
}

void BeamDisplayMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamDisplayMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamDisplayMessage.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamDisplayMessage)
}

::google::protobuf::uint8* BeamDisplayMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamDisplayMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamDisplayMessage.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamDisplayMessage)
  return target;
}

size_t BeamDisplayMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamDisplayMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 1;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional bool show_display = 2;
    if (has_show_display()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamDisplayMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamDisplayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamDisplayMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamDisplayMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamDisplayMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamDisplayMessage)
    MergeFrom(*source);
  }
}

void BeamDisplayMessage::MergeFrom(const BeamDisplayMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamDisplayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      show_display_ = from.show_display_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BeamDisplayMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamDisplayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamDisplayMessage::CopyFrom(const BeamDisplayMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamDisplayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamDisplayMessage::IsInitialized() const {
  return true;
}

void BeamDisplayMessage::Swap(BeamDisplayMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamDisplayMessage::InternalSwap(BeamDisplayMessage* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(show_display_, other->show_display_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamDisplayMessage::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamConfirmResponseMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamConfirmResponseMessage::kTextFieldNumber;
const int BeamConfirmResponseMessage::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamConfirmResponseMessage::BeamConfirmResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamConfirmResponseMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamConfirmResponseMessage)
}
BeamConfirmResponseMessage::BeamConfirmResponseMessage(const BeamConfirmResponseMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  response_ = from.response_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamConfirmResponseMessage)
}

void BeamConfirmResponseMessage::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_ = false;
}

BeamConfirmResponseMessage::~BeamConfirmResponseMessage() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  SharedDtor();
}

void BeamConfirmResponseMessage::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamConfirmResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamConfirmResponseMessage::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamConfirmResponseMessage& BeamConfirmResponseMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamConfirmResponseMessage.base);
  return *internal_default_instance();
}


void BeamConfirmResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  response_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamConfirmResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.beam.BeamConfirmResponseMessage.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  return false;
#undef DO_
}

void BeamConfirmResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamConfirmResponseMessage.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // optional bool response = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamConfirmResponseMessage)
}

::google::protobuf::uint8* BeamConfirmResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamConfirmResponseMessage.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // optional bool response = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  return target;
}

size_t BeamConfirmResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 1;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional bool response = 2;
    if (has_response()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamConfirmResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamConfirmResponseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamConfirmResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamConfirmResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamConfirmResponseMessage)
    MergeFrom(*source);
  }
}

void BeamConfirmResponseMessage::MergeFrom(const BeamConfirmResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BeamConfirmResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamConfirmResponseMessage::CopyFrom(const BeamConfirmResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamConfirmResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamConfirmResponseMessage::IsInitialized() const {
  return true;
}

void BeamConfirmResponseMessage::Swap(BeamConfirmResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamConfirmResponseMessage::InternalSwap(BeamConfirmResponseMessage* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(response_, other->response_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamConfirmResponseMessage::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamSignMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamSignMessage::kMsgFieldNumber;
const int BeamSignMessage::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamSignMessage::BeamSignMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamSignMessage)
}
BeamSignMessage::BeamSignMessage(const BeamSignMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamSignMessage)
}

void BeamSignMessage::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  show_display_ = false;
}

BeamSignMessage::~BeamSignMessage() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamSignMessage)
  SharedDtor();
}

void BeamSignMessage::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamSignMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamSignMessage::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamSignMessage& BeamSignMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamSignMessage.base);
  return *internal_default_instance();
}


void BeamSignMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamSignMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamSignMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamSignMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.beam.BeamSignMessage.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_show_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamSignMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamSignMessage)
  return false;
#undef DO_
}

void BeamSignMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamSignMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamSignMessage.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamSignMessage)
}

::google::protobuf::uint8* BeamSignMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamSignMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamSignMessage.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamSignMessage)
  return target;
}

size_t BeamSignMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamSignMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 1;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional bool show_display = 2;
    if (has_show_display()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamSignMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamSignMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamSignMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamSignMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamSignMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamSignMessage)
    MergeFrom(*source);
  }
}

void BeamSignMessage::MergeFrom(const BeamSignMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamSignMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      show_display_ = from.show_display_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BeamSignMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamSignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamSignMessage::CopyFrom(const BeamSignMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamSignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamSignMessage::IsInitialized() const {
  return true;
}

void BeamSignMessage::Swap(BeamSignMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamSignMessage::InternalSwap(BeamSignMessage* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(show_display_, other->show_display_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamSignMessage::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamSignedMessage::InitAsDefaultInstance() {
  ::hw::trezor::messages::beam::_BeamSignedMessage_default_instance_._instance.get_mutable()->signature_ = const_cast< ::hw::trezor::messages::beam::BeamSignature*>(
      ::hw::trezor::messages::beam::BeamSignature::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamSignedMessage::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamSignedMessage::BeamSignedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignedMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamSignedMessage)
}
BeamSignedMessage::BeamSignedMessage(const BeamSignedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_signature()) {
    signature_ = new ::hw::trezor::messages::beam::BeamSignature(*from.signature_);
  } else {
    signature_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamSignedMessage)
}

void BeamSignedMessage::SharedCtor() {
  signature_ = NULL;
}

BeamSignedMessage::~BeamSignedMessage() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamSignedMessage)
  SharedDtor();
}

void BeamSignedMessage::SharedDtor() {
  if (this != internal_default_instance()) delete signature_;
}

void BeamSignedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamSignedMessage::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamSignedMessage& BeamSignedMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamSignedMessage.base);
  return *internal_default_instance();
}


void BeamSignedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamSignedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(signature_ != NULL);
    signature_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamSignedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamSignedMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.beam.BeamSignature signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamSignedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamSignedMessage)
  return false;
#undef DO_
}

void BeamSignedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamSignedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.beam.BeamSignature signature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamSignedMessage)
}

::google::protobuf::uint8* BeamSignedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamSignedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.beam.BeamSignature signature = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_signature(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamSignedMessage)
  return target;
}

size_t BeamSignedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamSignedMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .hw.trezor.messages.beam.BeamSignature signature = 1;
  if (has_signature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *signature_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamSignedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamSignedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamSignedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamSignedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamSignedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamSignedMessage)
    MergeFrom(*source);
  }
}

void BeamSignedMessage::MergeFrom(const BeamSignedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamSignedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_signature()) {
    mutable_signature()->::hw::trezor::messages::beam::BeamSignature::MergeFrom(from.signature());
  }
}

void BeamSignedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamSignedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamSignedMessage::CopyFrom(const BeamSignedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamSignedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamSignedMessage::IsInitialized() const {
  return true;
}

void BeamSignedMessage::Swap(BeamSignedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamSignedMessage::InternalSwap(BeamSignedMessage* other) {
  using std::swap;
  swap(signature_, other->signature_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamSignedMessage::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamVerifyMessage::InitAsDefaultInstance() {
  ::hw::trezor::messages::beam::_BeamVerifyMessage_default_instance_._instance.get_mutable()->signature_ = const_cast< ::hw::trezor::messages::beam::BeamSignature*>(
      ::hw::trezor::messages::beam::BeamSignature::internal_default_instance());
  ::hw::trezor::messages::beam::_BeamVerifyMessage_default_instance_._instance.get_mutable()->public_key_ = const_cast< ::hw::trezor::messages::beam::BeamPublicKey*>(
      ::hw::trezor::messages::beam::BeamPublicKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamVerifyMessage::kSignatureFieldNumber;
const int BeamVerifyMessage::kPublicKeyFieldNumber;
const int BeamVerifyMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamVerifyMessage::BeamVerifyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamVerifyMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamVerifyMessage)
}
BeamVerifyMessage::BeamVerifyMessage(const BeamVerifyMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_signature()) {
    signature_ = new ::hw::trezor::messages::beam::BeamSignature(*from.signature_);
  } else {
    signature_ = NULL;
  }
  if (from.has_public_key()) {
    public_key_ = new ::hw::trezor::messages::beam::BeamPublicKey(*from.public_key_);
  } else {
    public_key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamVerifyMessage)
}

void BeamVerifyMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&signature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&public_key_) -
      reinterpret_cast<char*>(&signature_)) + sizeof(public_key_));
}

BeamVerifyMessage::~BeamVerifyMessage() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamVerifyMessage)
  SharedDtor();
}

void BeamVerifyMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete signature_;
  if (this != internal_default_instance()) delete public_key_;
}

void BeamVerifyMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamVerifyMessage::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamVerifyMessage& BeamVerifyMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamVerifyMessage.base);
  return *internal_default_instance();
}


void BeamVerifyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamVerifyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(signature_ != NULL);
      signature_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(public_key_ != NULL);
      public_key_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamVerifyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamVerifyMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.beam.BeamSignature signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.beam.BeamPublicKey public_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamVerifyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamVerifyMessage)
  return false;
#undef DO_
}

void BeamVerifyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamVerifyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.beam.BeamSignature signature = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_signature(), output);
  }

  // optional .hw.trezor.messages.beam.BeamPublicKey public_key = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_public_key(), output);
  }

  // optional bytes message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamVerifyMessage)
}

::google::protobuf::uint8* BeamVerifyMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamVerifyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.beam.BeamSignature signature = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_signature(), deterministic, target);
  }

  // optional .hw.trezor.messages.beam.BeamPublicKey public_key = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_public_key(), deterministic, target);
  }

  // optional bytes message = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamVerifyMessage)
  return target;
}

size_t BeamVerifyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamVerifyMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message());
    }

    // optional .hw.trezor.messages.beam.BeamSignature signature = 1;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *signature_);
    }

    // optional .hw.trezor.messages.beam.BeamPublicKey public_key = 2;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *public_key_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamVerifyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamVerifyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamVerifyMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamVerifyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamVerifyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamVerifyMessage)
    MergeFrom(*source);
  }
}

void BeamVerifyMessage::MergeFrom(const BeamVerifyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamVerifyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_signature()->::hw::trezor::messages::beam::BeamSignature::MergeFrom(from.signature());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_public_key()->::hw::trezor::messages::beam::BeamPublicKey::MergeFrom(from.public_key());
    }
  }
}

void BeamVerifyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamVerifyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamVerifyMessage::CopyFrom(const BeamVerifyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamVerifyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamVerifyMessage::IsInitialized() const {
  return true;
}

void BeamVerifyMessage::Swap(BeamVerifyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamVerifyMessage::InternalSwap(BeamVerifyMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(signature_, other->signature_);
  swap(public_key_, other->public_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamVerifyMessage::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamGetPublicKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamGetPublicKey::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamGetPublicKey::BeamGetPublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamGetPublicKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamGetPublicKey)
}
BeamGetPublicKey::BeamGetPublicKey(const BeamGetPublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamGetPublicKey)
}

void BeamGetPublicKey::SharedCtor() {
  show_display_ = false;
}

BeamGetPublicKey::~BeamGetPublicKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamGetPublicKey)
  SharedDtor();
}

void BeamGetPublicKey::SharedDtor() {
}

void BeamGetPublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamGetPublicKey::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamGetPublicKey& BeamGetPublicKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamGetPublicKey.base);
  return *internal_default_instance();
}


void BeamGetPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamGetPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamGetPublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamGetPublicKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool show_display = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_show_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamGetPublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamGetPublicKey)
  return false;
#undef DO_
}

void BeamGetPublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamGetPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamGetPublicKey)
}

::google::protobuf::uint8* BeamGetPublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamGetPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamGetPublicKey)
  return target;
}

size_t BeamGetPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamGetPublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool show_display = 1;
  if (has_show_display()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamGetPublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamGetPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamGetPublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamGetPublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamGetPublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamGetPublicKey)
    MergeFrom(*source);
  }
}

void BeamGetPublicKey::MergeFrom(const BeamGetPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamGetPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_show_display()) {
    set_show_display(from.show_display());
  }
}

void BeamGetPublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamGetPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamGetPublicKey::CopyFrom(const BeamGetPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamGetPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamGetPublicKey::IsInitialized() const {
  return true;
}

void BeamGetPublicKey::Swap(BeamGetPublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamGetPublicKey::InternalSwap(BeamGetPublicKey* other) {
  using std::swap;
  swap(show_display_, other->show_display_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamGetPublicKey::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamPublicKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamPublicKey::kPubXFieldNumber;
const int BeamPublicKey::kPubYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamPublicKey::BeamPublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamPublicKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamPublicKey)
}
BeamPublicKey::BeamPublicKey(const BeamPublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pub_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pub_x()) {
    pub_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_x_);
  }
  pub_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pub_y()) {
    pub_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_y_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamPublicKey)
}

void BeamPublicKey::SharedCtor() {
  pub_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BeamPublicKey::~BeamPublicKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamPublicKey)
  SharedDtor();
}

void BeamPublicKey::SharedDtor() {
  pub_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamPublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamPublicKey::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamPublicKey& BeamPublicKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamPublicKey.base);
  return *internal_default_instance();
}


void BeamPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pub_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pub_y_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamPublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamPublicKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pub_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pub_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pub_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pub_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamPublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamPublicKey)
  return false;
#undef DO_
}

void BeamPublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pub_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pub_x(), output);
  }

  // optional bytes pub_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pub_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamPublicKey)
}

::google::protobuf::uint8* BeamPublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pub_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pub_x(), target);
  }

  // optional bytes pub_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pub_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamPublicKey)
  return target;
}

size_t BeamPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamPublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes pub_x = 1;
    if (has_pub_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pub_x());
    }

    // optional bytes pub_y = 2;
    if (has_pub_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pub_y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamPublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamPublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamPublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamPublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamPublicKey)
    MergeFrom(*source);
  }
}

void BeamPublicKey::MergeFrom(const BeamPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pub_x();
      pub_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_x_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pub_y();
      pub_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_y_);
    }
  }
}

void BeamPublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamPublicKey::CopyFrom(const BeamPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamPublicKey::IsInitialized() const {
  return true;
}

void BeamPublicKey::Swap(BeamPublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamPublicKey::InternalSwap(BeamPublicKey* other) {
  using std::swap;
  pub_x_.Swap(&other->pub_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pub_y_.Swap(&other->pub_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamPublicKey::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamGetOwnerKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamGetOwnerKey::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamGetOwnerKey::BeamGetOwnerKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamGetOwnerKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamGetOwnerKey)
}
BeamGetOwnerKey::BeamGetOwnerKey(const BeamGetOwnerKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamGetOwnerKey)
}

void BeamGetOwnerKey::SharedCtor() {
  show_display_ = false;
}

BeamGetOwnerKey::~BeamGetOwnerKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamGetOwnerKey)
  SharedDtor();
}

void BeamGetOwnerKey::SharedDtor() {
}

void BeamGetOwnerKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamGetOwnerKey::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamGetOwnerKey& BeamGetOwnerKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamGetOwnerKey.base);
  return *internal_default_instance();
}


void BeamGetOwnerKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamGetOwnerKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamGetOwnerKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamGetOwnerKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool show_display = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_show_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamGetOwnerKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamGetOwnerKey)
  return false;
#undef DO_
}

void BeamGetOwnerKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamGetOwnerKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamGetOwnerKey)
}

::google::protobuf::uint8* BeamGetOwnerKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamGetOwnerKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamGetOwnerKey)
  return target;
}

size_t BeamGetOwnerKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamGetOwnerKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool show_display = 1;
  if (has_show_display()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamGetOwnerKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamGetOwnerKey)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamGetOwnerKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamGetOwnerKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamGetOwnerKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamGetOwnerKey)
    MergeFrom(*source);
  }
}

void BeamGetOwnerKey::MergeFrom(const BeamGetOwnerKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamGetOwnerKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_show_display()) {
    set_show_display(from.show_display());
  }
}

void BeamGetOwnerKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamGetOwnerKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamGetOwnerKey::CopyFrom(const BeamGetOwnerKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamGetOwnerKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamGetOwnerKey::IsInitialized() const {
  return true;
}

void BeamGetOwnerKey::Swap(BeamGetOwnerKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamGetOwnerKey::InternalSwap(BeamGetOwnerKey* other) {
  using std::swap;
  swap(show_display_, other->show_display_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamGetOwnerKey::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamOwnerKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamOwnerKey::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamOwnerKey::BeamOwnerKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamOwnerKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamOwnerKey)
}
BeamOwnerKey::BeamOwnerKey(const BeamOwnerKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamOwnerKey)
}

void BeamOwnerKey::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BeamOwnerKey::~BeamOwnerKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamOwnerKey)
  SharedDtor();
}

void BeamOwnerKey::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamOwnerKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamOwnerKey::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamOwnerKey& BeamOwnerKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamOwnerKey.base);
  return *internal_default_instance();
}


void BeamOwnerKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamOwnerKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamOwnerKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamOwnerKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamOwnerKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamOwnerKey)
  return false;
#undef DO_
}

void BeamOwnerKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamOwnerKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamOwnerKey)
}

::google::protobuf::uint8* BeamOwnerKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamOwnerKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamOwnerKey)
  return target;
}

size_t BeamOwnerKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamOwnerKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamOwnerKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamOwnerKey)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamOwnerKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamOwnerKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamOwnerKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamOwnerKey)
    MergeFrom(*source);
  }
}

void BeamOwnerKey::MergeFrom(const BeamOwnerKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamOwnerKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    set_has_key();
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void BeamOwnerKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamOwnerKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamOwnerKey::CopyFrom(const BeamOwnerKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamOwnerKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamOwnerKey::IsInitialized() const {
  return true;
}

void BeamOwnerKey::Swap(BeamOwnerKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamOwnerKey::InternalSwap(BeamOwnerKey* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamOwnerKey::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamSignSendTx_BeamPayment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamSignSendTx_BeamPayment::kAmountFieldNumber;
const int BeamSignSendTx_BeamPayment::kDestinationFieldNumber;
const int BeamSignSendTx_BeamPayment::kDestinationTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamSignSendTx_BeamPayment::BeamSignSendTx_BeamPayment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignSendTx_BeamPayment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
}
BeamSignSendTx_BeamPayment::BeamSignSendTx_BeamPayment(const BeamSignSendTx_BeamPayment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_destination()) {
    destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&destination_tag_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(destination_tag_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
}

void BeamSignSendTx_BeamPayment::SharedCtor() {
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_tag_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(destination_tag_));
}

BeamSignSendTx_BeamPayment::~BeamSignSendTx_BeamPayment() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  SharedDtor();
}

void BeamSignSendTx_BeamPayment::SharedDtor() {
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamSignSendTx_BeamPayment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamSignSendTx_BeamPayment::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamSignSendTx_BeamPayment& BeamSignSendTx_BeamPayment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamSignSendTx_BeamPayment.base);
  return *internal_default_instance();
}


void BeamSignSendTx_BeamPayment::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    destination_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&destination_tag_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(destination_tag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamSignSendTx_BeamPayment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string destination = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->destination().data(), static_cast<int>(this->destination().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.beam.BeamSignSendTx.BeamPayment.destination");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 destination_tag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_destination_tag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destination_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  return false;
#undef DO_
}

void BeamSignSendTx_BeamPayment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->amount(), output);
  }

  // optional string destination = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamSignSendTx.BeamPayment.destination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->destination(), output);
  }

  // optional uint32 destination_tag = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->destination_tag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
}

::google::protobuf::uint8* BeamSignSendTx_BeamPayment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->amount(), target);
  }

  // optional string destination = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamSignSendTx.BeamPayment.destination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->destination(), target);
  }

  // optional uint32 destination_tag = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->destination_tag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  return target;
}

size_t BeamSignSendTx_BeamPayment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string destination = 2;
    if (has_destination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destination());
    }

    // optional uint64 amount = 1;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional uint32 destination_tag = 3;
    if (has_destination_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->destination_tag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamSignSendTx_BeamPayment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamSignSendTx_BeamPayment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamSignSendTx_BeamPayment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
    MergeFrom(*source);
  }
}

void BeamSignSendTx_BeamPayment::MergeFrom(const BeamSignSendTx_BeamPayment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_destination();
      destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000004u) {
      destination_tag_ = from.destination_tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BeamSignSendTx_BeamPayment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamSignSendTx_BeamPayment::CopyFrom(const BeamSignSendTx_BeamPayment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamSignSendTx.BeamPayment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamSignSendTx_BeamPayment::IsInitialized() const {
  return true;
}

void BeamSignSendTx_BeamPayment::Swap(BeamSignSendTx_BeamPayment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamSignSendTx_BeamPayment::InternalSwap(BeamSignSendTx_BeamPayment* other) {
  using std::swap;
  destination_.Swap(&other->destination_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(destination_tag_, other->destination_tag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamSignSendTx_BeamPayment::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamSignSendTx::InitAsDefaultInstance() {
  ::hw::trezor::messages::beam::_BeamSignSendTx_default_instance_._instance.get_mutable()->payment_ = const_cast< ::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment*>(
      ::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamSignSendTx::kAddressNFieldNumber;
const int BeamSignSendTx::kFeeFieldNumber;
const int BeamSignSendTx::kFlagsFieldNumber;
const int BeamSignSendTx::kPaymentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamSignSendTx::BeamSignSendTx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignSendTx.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamSignSendTx)
}
BeamSignSendTx::BeamSignSendTx(const BeamSignSendTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_payment()) {
    payment_ = new ::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment(*from.payment_);
  } else {
    payment_ = NULL;
  }
  ::memcpy(&fee_, &from.fee_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamSignSendTx)
}

void BeamSignSendTx::SharedCtor() {
  ::memset(&payment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&payment_)) + sizeof(flags_));
}

BeamSignSendTx::~BeamSignSendTx() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamSignSendTx)
  SharedDtor();
}

void BeamSignSendTx::SharedDtor() {
  if (this != internal_default_instance()) delete payment_;
}

void BeamSignSendTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamSignSendTx::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamSignSendTx& BeamSignSendTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamSignSendTx.base);
  return *internal_default_instance();
}


void BeamSignSendTx::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamSignSendTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(payment_ != NULL);
    payment_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&fee_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&fee_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamSignSendTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamSignSendTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fee = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fee();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.beam.BeamSignSendTx.BeamPayment payment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamSignSendTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamSignSendTx)
  return false;
#undef DO_
}

void BeamSignSendTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamSignSendTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->fee(), output);
  }

  // optional uint32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  // optional .hw.trezor.messages.beam.BeamSignSendTx.BeamPayment payment = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_payment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamSignSendTx)
}

::google::protobuf::uint8* BeamSignSendTx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamSignSendTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->fee(), target);
  }

  // optional uint32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  // optional .hw.trezor.messages.beam.BeamSignSendTx.BeamPayment payment = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_payment(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamSignSendTx)
  return target;
}

size_t BeamSignSendTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamSignSendTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .hw.trezor.messages.beam.BeamSignSendTx.BeamPayment payment = 4;
    if (has_payment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payment_);
    }

    // optional uint64 fee = 2;
    if (has_fee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fee());
    }

    // optional uint32 flags = 3;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamSignSendTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamSignSendTx)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamSignSendTx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamSignSendTx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamSignSendTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamSignSendTx)
    MergeFrom(*source);
  }
}

void BeamSignSendTx::MergeFrom(const BeamSignSendTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamSignSendTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_payment()->::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment::MergeFrom(from.payment());
    }
    if (cached_has_bits & 0x00000002u) {
      fee_ = from.fee_;
    }
    if (cached_has_bits & 0x00000004u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BeamSignSendTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamSignSendTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamSignSendTx::CopyFrom(const BeamSignSendTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamSignSendTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamSignSendTx::IsInitialized() const {
  return true;
}

void BeamSignSendTx::Swap(BeamSignSendTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamSignSendTx::InternalSwap(BeamSignSendTx* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  swap(payment_, other->payment_);
  swap(fee_, other->fee_);
  swap(flags_, other->flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamSignSendTx::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamSignReceiveTx_BeamPayment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamSignReceiveTx_BeamPayment::kAmountFieldNumber;
const int BeamSignReceiveTx_BeamPayment::kDestinationFieldNumber;
const int BeamSignReceiveTx_BeamPayment::kDestinationTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamSignReceiveTx_BeamPayment::BeamSignReceiveTx_BeamPayment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignReceiveTx_BeamPayment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
}
BeamSignReceiveTx_BeamPayment::BeamSignReceiveTx_BeamPayment(const BeamSignReceiveTx_BeamPayment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_destination()) {
    destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&destination_tag_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(destination_tag_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
}

void BeamSignReceiveTx_BeamPayment::SharedCtor() {
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_tag_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(destination_tag_));
}

BeamSignReceiveTx_BeamPayment::~BeamSignReceiveTx_BeamPayment() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  SharedDtor();
}

void BeamSignReceiveTx_BeamPayment::SharedDtor() {
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamSignReceiveTx_BeamPayment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamSignReceiveTx_BeamPayment::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamSignReceiveTx_BeamPayment& BeamSignReceiveTx_BeamPayment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamSignReceiveTx_BeamPayment.base);
  return *internal_default_instance();
}


void BeamSignReceiveTx_BeamPayment::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    destination_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&destination_tag_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(destination_tag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamSignReceiveTx_BeamPayment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string destination = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->destination().data(), static_cast<int>(this->destination().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment.destination");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 destination_tag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_destination_tag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destination_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  return false;
#undef DO_
}

void BeamSignReceiveTx_BeamPayment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->amount(), output);
  }

  // optional string destination = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment.destination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->destination(), output);
  }

  // optional uint32 destination_tag = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->destination_tag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
}

::google::protobuf::uint8* BeamSignReceiveTx_BeamPayment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->amount(), target);
  }

  // optional string destination = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment.destination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->destination(), target);
  }

  // optional uint32 destination_tag = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->destination_tag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  return target;
}

size_t BeamSignReceiveTx_BeamPayment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string destination = 2;
    if (has_destination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destination());
    }

    // optional uint64 amount = 1;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional uint32 destination_tag = 3;
    if (has_destination_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->destination_tag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamSignReceiveTx_BeamPayment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamSignReceiveTx_BeamPayment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamSignReceiveTx_BeamPayment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
    MergeFrom(*source);
  }
}

void BeamSignReceiveTx_BeamPayment::MergeFrom(const BeamSignReceiveTx_BeamPayment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_destination();
      destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000004u) {
      destination_tag_ = from.destination_tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BeamSignReceiveTx_BeamPayment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamSignReceiveTx_BeamPayment::CopyFrom(const BeamSignReceiveTx_BeamPayment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamSignReceiveTx_BeamPayment::IsInitialized() const {
  return true;
}

void BeamSignReceiveTx_BeamPayment::Swap(BeamSignReceiveTx_BeamPayment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamSignReceiveTx_BeamPayment::InternalSwap(BeamSignReceiveTx_BeamPayment* other) {
  using std::swap;
  destination_.Swap(&other->destination_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(destination_tag_, other->destination_tag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamSignReceiveTx_BeamPayment::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamSignReceiveTx::InitAsDefaultInstance() {
  ::hw::trezor::messages::beam::_BeamSignReceiveTx_default_instance_._instance.get_mutable()->payment_ = const_cast< ::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment*>(
      ::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment::internal_default_instance());
  ::hw::trezor::messages::beam::_BeamSignReceiveTx_default_instance_._instance.get_mutable()->signature_ = const_cast< ::hw::trezor::messages::beam::BeamSignature*>(
      ::hw::trezor::messages::beam::BeamSignature::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamSignReceiveTx::kAddressNFieldNumber;
const int BeamSignReceiveTx::kFeeFieldNumber;
const int BeamSignReceiveTx::kFlagsFieldNumber;
const int BeamSignReceiveTx::kPaymentFieldNumber;
const int BeamSignReceiveTx::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamSignReceiveTx::BeamSignReceiveTx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignReceiveTx.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamSignReceiveTx)
}
BeamSignReceiveTx::BeamSignReceiveTx(const BeamSignReceiveTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_payment()) {
    payment_ = new ::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment(*from.payment_);
  } else {
    payment_ = NULL;
  }
  if (from.has_signature()) {
    signature_ = new ::hw::trezor::messages::beam::BeamSignature(*from.signature_);
  } else {
    signature_ = NULL;
  }
  ::memcpy(&fee_, &from.fee_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamSignReceiveTx)
}

void BeamSignReceiveTx::SharedCtor() {
  ::memset(&payment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&payment_)) + sizeof(flags_));
}

BeamSignReceiveTx::~BeamSignReceiveTx() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamSignReceiveTx)
  SharedDtor();
}

void BeamSignReceiveTx::SharedDtor() {
  if (this != internal_default_instance()) delete payment_;
  if (this != internal_default_instance()) delete signature_;
}

void BeamSignReceiveTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamSignReceiveTx::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamSignReceiveTx& BeamSignReceiveTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamSignReceiveTx.base);
  return *internal_default_instance();
}


void BeamSignReceiveTx::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamSignReceiveTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(payment_ != NULL);
      payment_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(signature_ != NULL);
      signature_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&fee_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&fee_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamSignReceiveTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamSignReceiveTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fee = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fee();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment payment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.beam.BeamSignature signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamSignReceiveTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamSignReceiveTx)
  return false;
#undef DO_
}

void BeamSignReceiveTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamSignReceiveTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->fee(), output);
  }

  // optional uint32 flags = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  // optional .hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment payment = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_payment(), output);
  }

  // optional .hw.trezor.messages.beam.BeamSignature signature = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamSignReceiveTx)
}

::google::protobuf::uint8* BeamSignReceiveTx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamSignReceiveTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint64 fee = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->fee(), target);
  }

  // optional uint32 flags = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  // optional .hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment payment = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_payment(), deterministic, target);
  }

  // optional .hw.trezor.messages.beam.BeamSignature signature = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_signature(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamSignReceiveTx)
  return target;
}

size_t BeamSignReceiveTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamSignReceiveTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional .hw.trezor.messages.beam.BeamSignReceiveTx.BeamPayment payment = 4;
    if (has_payment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payment_);
    }

    // optional .hw.trezor.messages.beam.BeamSignature signature = 5;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *signature_);
    }

    // optional uint64 fee = 2;
    if (has_fee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fee());
    }

    // optional uint32 flags = 3;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamSignReceiveTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamSignReceiveTx)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamSignReceiveTx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamSignReceiveTx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamSignReceiveTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamSignReceiveTx)
    MergeFrom(*source);
  }
}

void BeamSignReceiveTx::MergeFrom(const BeamSignReceiveTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamSignReceiveTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_payment()->::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment::MergeFrom(from.payment());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_signature()->::hw::trezor::messages::beam::BeamSignature::MergeFrom(from.signature());
    }
    if (cached_has_bits & 0x00000004u) {
      fee_ = from.fee_;
    }
    if (cached_has_bits & 0x00000008u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BeamSignReceiveTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamSignReceiveTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamSignReceiveTx::CopyFrom(const BeamSignReceiveTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamSignReceiveTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamSignReceiveTx::IsInitialized() const {
  return true;
}

void BeamSignReceiveTx::Swap(BeamSignReceiveTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamSignReceiveTx::InternalSwap(BeamSignReceiveTx* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  swap(payment_, other->payment_);
  swap(signature_, other->signature_);
  swap(fee_, other->fee_);
  swap(flags_, other->flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamSignReceiveTx::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeamSignedTx::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeamSignedTx::kSignatureFieldNumber;
const int BeamSignedTx::kSerializedTxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeamSignedTx::BeamSignedTx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbeam_2eproto::scc_info_BeamSignedTx.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.beam.BeamSignedTx)
}
BeamSignedTx::BeamSignedTx(const BeamSignedTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  serialized_tx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_tx()) {
    serialized_tx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_tx_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.beam.BeamSignedTx)
}

void BeamSignedTx::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_tx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BeamSignedTx::~BeamSignedTx() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.beam.BeamSignedTx)
  SharedDtor();
}

void BeamSignedTx::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_tx_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeamSignedTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BeamSignedTx::descriptor() {
  ::protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeamSignedTx& BeamSignedTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbeam_2eproto::scc_info_BeamSignedTx.base);
  return *internal_default_instance();
}


void BeamSignedTx::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.beam.BeamSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      signature_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      serialized_tx_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BeamSignedTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.beam.BeamSignedTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serialized_tx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.beam.BeamSignedTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.beam.BeamSignedTx)
  return false;
#undef DO_
}

void BeamSignedTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.beam.BeamSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes signature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->signature(), output);
  }

  // optional bytes serialized_tx = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->serialized_tx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.beam.BeamSignedTx)
}

::google::protobuf::uint8* BeamSignedTx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.beam.BeamSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes signature = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->signature(), target);
  }

  // optional bytes serialized_tx = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->serialized_tx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.beam.BeamSignedTx)
  return target;
}

size_t BeamSignedTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.beam.BeamSignedTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes signature = 1;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signature());
    }

    // optional bytes serialized_tx = 2;
    if (has_serialized_tx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_tx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BeamSignedTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.beam.BeamSignedTx)
  GOOGLE_DCHECK_NE(&from, this);
  const BeamSignedTx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeamSignedTx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.beam.BeamSignedTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.beam.BeamSignedTx)
    MergeFrom(*source);
  }
}

void BeamSignedTx::MergeFrom(const BeamSignedTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.beam.BeamSignedTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_serialized_tx();
      serialized_tx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_tx_);
    }
  }
}

void BeamSignedTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.beam.BeamSignedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeamSignedTx::CopyFrom(const BeamSignedTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.beam.BeamSignedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeamSignedTx::IsInitialized() const {
  return true;
}

void BeamSignedTx::Swap(BeamSignedTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeamSignedTx::InternalSwap(BeamSignedTx* other) {
  using std::swap;
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serialized_tx_.Swap(&other->serialized_tx_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BeamSignedTx::GetMetadata() const {
  protobuf_messages_2dbeam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbeam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace beam
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamTransactionSourceEntry* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamTransactionSourceEntry >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamTransactionSourceEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamTransactionDestinationEntry* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamTransactionDestinationEntry >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamTransactionDestinationEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamSignature* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamSignature >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamSignature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamGetAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamGetAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamGetAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamDisplayMessage* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamDisplayMessage >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamDisplayMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamConfirmResponseMessage* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamConfirmResponseMessage >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamConfirmResponseMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamSignMessage* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamSignMessage >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamSignMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamSignedMessage* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamSignedMessage >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamSignedMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamVerifyMessage* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamVerifyMessage >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamVerifyMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamGetPublicKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamGetPublicKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamGetPublicKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamPublicKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamPublicKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamPublicKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamGetOwnerKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamGetOwnerKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamGetOwnerKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamOwnerKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamOwnerKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamOwnerKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamSignSendTx_BeamPayment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamSignSendTx* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamSignSendTx >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamSignSendTx >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamSignReceiveTx_BeamPayment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamSignReceiveTx* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamSignReceiveTx >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamSignReceiveTx >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::beam::BeamSignedTx* Arena::CreateMaybeMessage< ::hw::trezor::messages::beam::BeamSignedTx >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::beam::BeamSignedTx >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
