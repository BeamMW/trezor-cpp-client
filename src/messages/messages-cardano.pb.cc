// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-cardano.proto

#include "messages-cardano.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messages_2dcardano_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dcardano_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CardanoSignTx_CardanoTxInputType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dcardano_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CardanoSignTx_CardanoTxOutputType;
}  // namespace protobuf_messages_2dcardano_2eproto
namespace protobuf_messages_2dcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2dcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HDNodeType;
}  // namespace protobuf_messages_2dcommon_2eproto
namespace hw {
namespace trezor {
namespace messages {
namespace cardano {
class CardanoGetAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoGetAddress>
      _instance;
} _CardanoGetAddress_default_instance_;
class CardanoAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoAddress>
      _instance;
} _CardanoAddress_default_instance_;
class CardanoGetPublicKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoGetPublicKey>
      _instance;
} _CardanoGetPublicKey_default_instance_;
class CardanoPublicKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoPublicKey>
      _instance;
} _CardanoPublicKey_default_instance_;
class CardanoSignTx_CardanoTxInputTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoSignTx_CardanoTxInputType>
      _instance;
} _CardanoSignTx_CardanoTxInputType_default_instance_;
class CardanoSignTx_CardanoTxOutputTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoSignTx_CardanoTxOutputType>
      _instance;
} _CardanoSignTx_CardanoTxOutputType_default_instance_;
class CardanoSignTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoSignTx>
      _instance;
} _CardanoSignTx_default_instance_;
class CardanoTxRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoTxRequest>
      _instance;
} _CardanoTxRequest_default_instance_;
class CardanoTxAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoTxAck>
      _instance;
} _CardanoTxAck_default_instance_;
class CardanoSignedTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardanoSignedTx>
      _instance;
} _CardanoSignedTx_default_instance_;
}  // namespace cardano
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace protobuf_messages_2dcardano_2eproto {
static void InitDefaultsCardanoGetAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoGetAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoGetAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoGetAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardanoGetAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardanoGetAddress}, {}};

static void InitDefaultsCardanoAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardanoAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardanoAddress}, {}};

static void InitDefaultsCardanoGetPublicKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoGetPublicKey_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoGetPublicKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoGetPublicKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardanoGetPublicKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardanoGetPublicKey}, {}};

static void InitDefaultsCardanoPublicKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoPublicKey_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoPublicKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoPublicKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CardanoPublicKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCardanoPublicKey}, {
      &protobuf_messages_2dcommon_2eproto::scc_info_HDNodeType.base,}};

static void InitDefaultsCardanoSignTx_CardanoTxInputType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoSignTx_CardanoTxInputType_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardanoSignTx_CardanoTxInputType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardanoSignTx_CardanoTxInputType}, {}};

static void InitDefaultsCardanoSignTx_CardanoTxOutputType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoSignTx_CardanoTxOutputType_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardanoSignTx_CardanoTxOutputType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardanoSignTx_CardanoTxOutputType}, {}};

static void InitDefaultsCardanoSignTx() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoSignTx_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoSignTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoSignTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CardanoSignTx =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCardanoSignTx}, {
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignTx_CardanoTxInputType.base,
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignTx_CardanoTxOutputType.base,}};

static void InitDefaultsCardanoTxRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoTxRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoTxRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoTxRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardanoTxRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardanoTxRequest}, {}};

static void InitDefaultsCardanoTxAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoTxAck_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoTxAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoTxAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardanoTxAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardanoTxAck}, {}};

static void InitDefaultsCardanoSignedTx() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::cardano::_CardanoSignedTx_default_instance_;
    new (ptr) ::hw::trezor::messages::cardano::CardanoSignedTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::cardano::CardanoSignedTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardanoSignedTx =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardanoSignedTx}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoGetAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoGetPublicKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoPublicKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoSignTx_CardanoTxInputType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoSignTx_CardanoTxOutputType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoSignTx.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoTxRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoTxAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardanoSignedTx.base);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoGetAddress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoGetAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoGetAddress, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoGetAddress, show_display_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoAddress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoAddress, address_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoGetPublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoGetPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoGetPublicKey, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoGetPublicKey, show_display_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoPublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoPublicKey, xpub_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoPublicKey, node_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType, prev_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType, prev_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType, type_),
  ~0u,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType, amount_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx, outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx, transactions_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignTx, protocol_magic_),
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoTxRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoTxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoTxRequest, tx_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoTxRequest, tx_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoTxRequest, tx_body_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoTxAck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoTxAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoTxAck, transaction_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignedTx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignedTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignedTx, tx_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::cardano::CardanoSignedTx, tx_body_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::hw::trezor::messages::cardano::CardanoGetAddress)},
  { 9, 15, sizeof(::hw::trezor::messages::cardano::CardanoAddress)},
  { 16, 23, sizeof(::hw::trezor::messages::cardano::CardanoGetPublicKey)},
  { 25, 32, sizeof(::hw::trezor::messages::cardano::CardanoPublicKey)},
  { 34, 43, sizeof(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType)},
  { 47, 55, sizeof(::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType)},
  { 58, 67, sizeof(::hw::trezor::messages::cardano::CardanoSignTx)},
  { 71, 79, sizeof(::hw::trezor::messages::cardano::CardanoTxRequest)},
  { 82, 88, sizeof(::hw::trezor::messages::cardano::CardanoTxAck)},
  { 89, 96, sizeof(::hw::trezor::messages::cardano::CardanoSignedTx)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoGetAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoGetPublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoPublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoSignTx_CardanoTxInputType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoSignTx_CardanoTxOutputType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoSignTx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoTxRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoTxAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::cardano::_CardanoSignedTx_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages-cardano.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026messages-cardano.proto\022\032hw.trezor.mess"
      "ages.cardano\032\025messages-common.proto\"<\n\021C"
      "ardanoGetAddress\022\021\n\taddress_n\030\001 \003(\r\022\024\n\014s"
      "how_display\030\002 \001(\010\"!\n\016CardanoAddress\022\017\n\007a"
      "ddress\030\001 \001(\t\">\n\023CardanoGetPublicKey\022\021\n\ta"
      "ddress_n\030\001 \003(\r\022\024\n\014show_display\030\002 \001(\010\"U\n\020"
      "CardanoPublicKey\022\014\n\004xpub\030\001 \001(\t\0223\n\004node\030\002"
      " \001(\0132%.hw.trezor.messages.common.HDNodeT"
      "ype\"\212\003\n\rCardanoSignTx\022L\n\006inputs\030\001 \003(\0132<."
      "hw.trezor.messages.cardano.CardanoSignTx"
      ".CardanoTxInputType\022N\n\007outputs\030\002 \003(\0132=.h"
      "w.trezor.messages.cardano.CardanoSignTx."
      "CardanoTxOutputType\022\032\n\022transactions_coun"
      "t\030\003 \001(\r\022\026\n\016protocol_magic\030\005 \001(\r\032\\\n\022Carda"
      "noTxInputType\022\021\n\taddress_n\030\001 \003(\r\022\021\n\tprev"
      "_hash\030\002 \001(\014\022\022\n\nprev_index\030\003 \001(\r\022\014\n\004type\030"
      "\004 \001(\r\032I\n\023CardanoTxOutputType\022\017\n\007address\030"
      "\001 \001(\t\022\021\n\taddress_n\030\002 \003(\r\022\016\n\006amount\030\003 \001(\004"
      "\"F\n\020CardanoTxRequest\022\020\n\010tx_index\030\001 \001(\r\022\017"
      "\n\007tx_hash\030\002 \001(\014\022\017\n\007tx_body\030\003 \001(\014\"#\n\014Card"
      "anoTxAck\022\023\n\013transaction\030\001 \001(\014\"3\n\017Cardano"
      "SignedTx\022\017\n\007tx_hash\030\001 \001(\014\022\017\n\007tx_body\030\002 \001"
      "(\014B;\n#com.satoshilabs.trezor.lib.protobu"
      "fB\024TrezorMessageCardano"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 943);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages-cardano.proto", &protobuf_RegisterTypes);
  ::protobuf_messages_2dcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2dcardano_2eproto
namespace hw {
namespace trezor {
namespace messages {
namespace cardano {

// ===================================================================

void CardanoGetAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoGetAddress::kAddressNFieldNumber;
const int CardanoGetAddress::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoGetAddress::CardanoGetAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoGetAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoGetAddress)
}
CardanoGetAddress::CardanoGetAddress(const CardanoGetAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoGetAddress)
}

void CardanoGetAddress::SharedCtor() {
  show_display_ = false;
}

CardanoGetAddress::~CardanoGetAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoGetAddress)
  SharedDtor();
}

void CardanoGetAddress::SharedDtor() {
}

void CardanoGetAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoGetAddress::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoGetAddress& CardanoGetAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoGetAddress.base);
  return *internal_default_instance();
}


void CardanoGetAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoGetAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoGetAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_show_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoGetAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoGetAddress)
  return false;
#undef DO_
}

void CardanoGetAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoGetAddress)
}

::google::protobuf::uint8* CardanoGetAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoGetAddress)
  return target;
}

size_t CardanoGetAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoGetAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  // optional bool show_display = 2;
  if (has_show_display()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoGetAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoGetAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoGetAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoGetAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoGetAddress)
    MergeFrom(*source);
  }
}

void CardanoGetAddress::MergeFrom(const CardanoGetAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  if (from.has_show_display()) {
    set_show_display(from.show_display());
  }
}

void CardanoGetAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoGetAddress::CopyFrom(const CardanoGetAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoGetAddress::IsInitialized() const {
  return true;
}

void CardanoGetAddress::Swap(CardanoGetAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoGetAddress::InternalSwap(CardanoGetAddress* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  swap(show_display_, other->show_display_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoGetAddress::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardanoAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoAddress::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoAddress::CardanoAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoAddress)
}
CardanoAddress::CardanoAddress(const CardanoAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoAddress)
}

void CardanoAddress::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CardanoAddress::~CardanoAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoAddress)
  SharedDtor();
}

void CardanoAddress::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardanoAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoAddress::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoAddress& CardanoAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoAddress.base);
  return *internal_default_instance();
}


void CardanoAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    address_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.cardano.CardanoAddress.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoAddress)
  return false;
#undef DO_
}

void CardanoAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.cardano.CardanoAddress.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoAddress)
}

::google::protobuf::uint8* CardanoAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.cardano.CardanoAddress.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoAddress)
  return target;
}

size_t CardanoAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string address = 1;
  if (has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoAddress)
    MergeFrom(*source);
  }
}

void CardanoAddress::MergeFrom(const CardanoAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    set_has_address();
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void CardanoAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoAddress::CopyFrom(const CardanoAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoAddress::IsInitialized() const {
  return true;
}

void CardanoAddress::Swap(CardanoAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoAddress::InternalSwap(CardanoAddress* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoAddress::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardanoGetPublicKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoGetPublicKey::kAddressNFieldNumber;
const int CardanoGetPublicKey::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoGetPublicKey::CardanoGetPublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoGetPublicKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoGetPublicKey)
}
CardanoGetPublicKey::CardanoGetPublicKey(const CardanoGetPublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoGetPublicKey)
}

void CardanoGetPublicKey::SharedCtor() {
  show_display_ = false;
}

CardanoGetPublicKey::~CardanoGetPublicKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoGetPublicKey)
  SharedDtor();
}

void CardanoGetPublicKey::SharedDtor() {
}

void CardanoGetPublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoGetPublicKey::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoGetPublicKey& CardanoGetPublicKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoGetPublicKey.base);
  return *internal_default_instance();
}


void CardanoGetPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoGetPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoGetPublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoGetPublicKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_show_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoGetPublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoGetPublicKey)
  return false;
#undef DO_
}

void CardanoGetPublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoGetPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoGetPublicKey)
}

::google::protobuf::uint8* CardanoGetPublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoGetPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoGetPublicKey)
  return target;
}

size_t CardanoGetPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoGetPublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  // optional bool show_display = 2;
  if (has_show_display()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoGetPublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoGetPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoGetPublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoGetPublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoGetPublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoGetPublicKey)
    MergeFrom(*source);
  }
}

void CardanoGetPublicKey::MergeFrom(const CardanoGetPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoGetPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  if (from.has_show_display()) {
    set_show_display(from.show_display());
  }
}

void CardanoGetPublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoGetPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoGetPublicKey::CopyFrom(const CardanoGetPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoGetPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoGetPublicKey::IsInitialized() const {
  return true;
}

void CardanoGetPublicKey::Swap(CardanoGetPublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoGetPublicKey::InternalSwap(CardanoGetPublicKey* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  swap(show_display_, other->show_display_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoGetPublicKey::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardanoPublicKey::InitAsDefaultInstance() {
  ::hw::trezor::messages::cardano::_CardanoPublicKey_default_instance_._instance.get_mutable()->node_ = const_cast< ::hw::trezor::messages::common::HDNodeType*>(
      ::hw::trezor::messages::common::HDNodeType::internal_default_instance());
}
void CardanoPublicKey::clear_node() {
  if (node_ != NULL) node_->Clear();
  clear_has_node();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoPublicKey::kXpubFieldNumber;
const int CardanoPublicKey::kNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoPublicKey::CardanoPublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoPublicKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoPublicKey)
}
CardanoPublicKey::CardanoPublicKey(const CardanoPublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  xpub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_xpub()) {
    xpub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xpub_);
  }
  if (from.has_node()) {
    node_ = new ::hw::trezor::messages::common::HDNodeType(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoPublicKey)
}

void CardanoPublicKey::SharedCtor() {
  xpub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ = NULL;
}

CardanoPublicKey::~CardanoPublicKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoPublicKey)
  SharedDtor();
}

void CardanoPublicKey::SharedDtor() {
  xpub_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_;
}

void CardanoPublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoPublicKey::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoPublicKey& CardanoPublicKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoPublicKey.base);
  return *internal_default_instance();
}


void CardanoPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      xpub_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(node_ != NULL);
      node_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoPublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoPublicKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string xpub = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xpub()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->xpub().data(), static_cast<int>(this->xpub().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.cardano.CardanoPublicKey.xpub");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.common.HDNodeType node = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoPublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoPublicKey)
  return false;
#undef DO_
}

void CardanoPublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string xpub = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->xpub().data(), static_cast<int>(this->xpub().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.cardano.CardanoPublicKey.xpub");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->xpub(), output);
  }

  // optional .hw.trezor.messages.common.HDNodeType node = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_node(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoPublicKey)
}

::google::protobuf::uint8* CardanoPublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string xpub = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->xpub().data(), static_cast<int>(this->xpub().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.cardano.CardanoPublicKey.xpub");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->xpub(), target);
  }

  // optional .hw.trezor.messages.common.HDNodeType node = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_node(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoPublicKey)
  return target;
}

size_t CardanoPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoPublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string xpub = 1;
    if (has_xpub()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->xpub());
    }

    // optional .hw.trezor.messages.common.HDNodeType node = 2;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoPublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoPublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoPublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoPublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoPublicKey)
    MergeFrom(*source);
  }
}

void CardanoPublicKey::MergeFrom(const CardanoPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_xpub();
      xpub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xpub_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_node()->::hw::trezor::messages::common::HDNodeType::MergeFrom(from.node());
    }
  }
}

void CardanoPublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoPublicKey::CopyFrom(const CardanoPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoPublicKey::IsInitialized() const {
  if (has_node()) {
    if (!this->node_->IsInitialized()) return false;
  }
  return true;
}

void CardanoPublicKey::Swap(CardanoPublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoPublicKey::InternalSwap(CardanoPublicKey* other) {
  using std::swap;
  xpub_.Swap(&other->xpub_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(node_, other->node_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoPublicKey::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardanoSignTx_CardanoTxInputType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoSignTx_CardanoTxInputType::kAddressNFieldNumber;
const int CardanoSignTx_CardanoTxInputType::kPrevHashFieldNumber;
const int CardanoSignTx_CardanoTxInputType::kPrevIndexFieldNumber;
const int CardanoSignTx_CardanoTxInputType::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoSignTx_CardanoTxInputType::CardanoSignTx_CardanoTxInputType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignTx_CardanoTxInputType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
}
CardanoSignTx_CardanoTxInputType::CardanoSignTx_CardanoTxInputType(const CardanoSignTx_CardanoTxInputType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prev_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev_hash()) {
    prev_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_hash_);
  }
  ::memcpy(&prev_index_, &from.prev_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&prev_index_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
}

void CardanoSignTx_CardanoTxInputType::SharedCtor() {
  prev_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&prev_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&prev_index_)) + sizeof(type_));
}

CardanoSignTx_CardanoTxInputType::~CardanoSignTx_CardanoTxInputType() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  SharedDtor();
}

void CardanoSignTx_CardanoTxInputType::SharedDtor() {
  prev_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardanoSignTx_CardanoTxInputType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoSignTx_CardanoTxInputType::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoSignTx_CardanoTxInputType& CardanoSignTx_CardanoTxInputType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignTx_CardanoTxInputType.base);
  return *internal_default_instance();
}


void CardanoSignTx_CardanoTxInputType::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    prev_hash_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&prev_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&prev_index_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoSignTx_CardanoTxInputType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 prev_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_prev_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prev_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  return false;
#undef DO_
}

void CardanoSignTx_CardanoTxInputType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes prev_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->prev_hash(), output);
  }

  // optional uint32 prev_index = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prev_index(), output);
  }

  // optional uint32 type = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
}

::google::protobuf::uint8* CardanoSignTx_CardanoTxInputType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional bytes prev_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->prev_hash(), target);
  }

  // optional uint32 prev_index = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prev_index(), target);
  }

  // optional uint32 type = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  return target;
}

size_t CardanoSignTx_CardanoTxInputType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes prev_hash = 2;
    if (has_prev_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev_hash());
    }

    // optional uint32 prev_index = 3;
    if (has_prev_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prev_index());
    }

    // optional uint32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoSignTx_CardanoTxInputType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoSignTx_CardanoTxInputType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoSignTx_CardanoTxInputType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
    MergeFrom(*source);
  }
}

void CardanoSignTx_CardanoTxInputType::MergeFrom(const CardanoSignTx_CardanoTxInputType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_prev_hash();
      prev_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      prev_index_ = from.prev_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CardanoSignTx_CardanoTxInputType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoSignTx_CardanoTxInputType::CopyFrom(const CardanoSignTx_CardanoTxInputType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoSignTx_CardanoTxInputType::IsInitialized() const {
  return true;
}

void CardanoSignTx_CardanoTxInputType::Swap(CardanoSignTx_CardanoTxInputType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoSignTx_CardanoTxInputType::InternalSwap(CardanoSignTx_CardanoTxInputType* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  prev_hash_.Swap(&other->prev_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(prev_index_, other->prev_index_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoSignTx_CardanoTxInputType::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardanoSignTx_CardanoTxOutputType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoSignTx_CardanoTxOutputType::kAddressFieldNumber;
const int CardanoSignTx_CardanoTxOutputType::kAddressNFieldNumber;
const int CardanoSignTx_CardanoTxOutputType::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoSignTx_CardanoTxOutputType::CardanoSignTx_CardanoTxOutputType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignTx_CardanoTxOutputType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
}
CardanoSignTx_CardanoTxOutputType::CardanoSignTx_CardanoTxOutputType(const CardanoSignTx_CardanoTxOutputType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
}

void CardanoSignTx_CardanoTxOutputType::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_ULONGLONG(0);
}

CardanoSignTx_CardanoTxOutputType::~CardanoSignTx_CardanoTxOutputType() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  SharedDtor();
}

void CardanoSignTx_CardanoTxOutputType::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardanoSignTx_CardanoTxOutputType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoSignTx_CardanoTxOutputType::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoSignTx_CardanoTxOutputType& CardanoSignTx_CardanoTxOutputType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignTx_CardanoTxOutputType.base);
  return *internal_default_instance();
}


void CardanoSignTx_CardanoTxOutputType::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    address_.ClearNonDefaultToEmptyNoArena();
  }
  amount_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoSignTx_CardanoTxOutputType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 address_n = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_address_n())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  return false;
#undef DO_
}

void CardanoSignTx_CardanoTxOutputType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // repeated uint32 address_n = 2;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->address_n(i), output);
  }

  // optional uint64 amount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
}

::google::protobuf::uint8* CardanoSignTx_CardanoTxOutputType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // repeated uint32 address_n = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->address_n_, target);

  // optional uint64 amount = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  return target;
}

size_t CardanoSignTx_CardanoTxOutputType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 address_n = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string address = 1;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional uint64 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoSignTx_CardanoTxOutputType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoSignTx_CardanoTxOutputType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoSignTx_CardanoTxOutputType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
    MergeFrom(*source);
  }
}

void CardanoSignTx_CardanoTxOutputType::MergeFrom(const CardanoSignTx_CardanoTxOutputType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CardanoSignTx_CardanoTxOutputType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoSignTx_CardanoTxOutputType::CopyFrom(const CardanoSignTx_CardanoTxOutputType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoSignTx_CardanoTxOutputType::IsInitialized() const {
  return true;
}

void CardanoSignTx_CardanoTxOutputType::Swap(CardanoSignTx_CardanoTxOutputType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoSignTx_CardanoTxOutputType::InternalSwap(CardanoSignTx_CardanoTxOutputType* other) {
  using std::swap;
  address_n_.InternalSwap(&other->address_n_);
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoSignTx_CardanoTxOutputType::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardanoSignTx::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoSignTx::kInputsFieldNumber;
const int CardanoSignTx::kOutputsFieldNumber;
const int CardanoSignTx::kTransactionsCountFieldNumber;
const int CardanoSignTx::kProtocolMagicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoSignTx::CardanoSignTx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignTx.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoSignTx)
}
CardanoSignTx::CardanoSignTx(const CardanoSignTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      inputs_(from.inputs_),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&transactions_count_, &from.transactions_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&protocol_magic_) -
    reinterpret_cast<char*>(&transactions_count_)) + sizeof(protocol_magic_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoSignTx)
}

void CardanoSignTx::SharedCtor() {
  ::memset(&transactions_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_magic_) -
      reinterpret_cast<char*>(&transactions_count_)) + sizeof(protocol_magic_));
}

CardanoSignTx::~CardanoSignTx() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoSignTx)
  SharedDtor();
}

void CardanoSignTx::SharedDtor() {
}

void CardanoSignTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoSignTx::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoSignTx& CardanoSignTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignTx.base);
  return *internal_default_instance();
}


void CardanoSignTx::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoSignTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&transactions_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&protocol_magic_) -
        reinterpret_cast<char*>(&transactions_count_)) + sizeof(protocol_magic_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoSignTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoSignTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType inputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType outputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 transactions_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_transactions_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &transactions_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 protocol_magic = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_protocol_magic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoSignTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoSignTx)
  return false;
#undef DO_
}

void CardanoSignTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoSignTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType inputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->inputs(static_cast<int>(i)),
      output);
  }

  // repeated .hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType outputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->outputs(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 transactions_count = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->transactions_count(), output);
  }

  // optional uint32 protocol_magic = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->protocol_magic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoSignTx)
}

::google::protobuf::uint8* CardanoSignTx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoSignTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType inputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType outputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->outputs(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 transactions_count = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->transactions_count(), target);
  }

  // optional uint32 protocol_magic = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->protocol_magic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoSignTx)
  return target;
}

size_t CardanoSignTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoSignTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .hw.trezor.messages.cardano.CardanoSignTx.CardanoTxInputType inputs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // repeated .hw.trezor.messages.cardano.CardanoSignTx.CardanoTxOutputType outputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outputs(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 transactions_count = 3;
    if (has_transactions_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->transactions_count());
    }

    // optional uint32 protocol_magic = 5;
    if (has_protocol_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->protocol_magic());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoSignTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoSignTx)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoSignTx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoSignTx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoSignTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoSignTx)
    MergeFrom(*source);
  }
}

void CardanoSignTx::MergeFrom(const CardanoSignTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoSignTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      transactions_count_ = from.transactions_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      protocol_magic_ = from.protocol_magic_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CardanoSignTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoSignTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoSignTx::CopyFrom(const CardanoSignTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoSignTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoSignTx::IsInitialized() const {
  return true;
}

void CardanoSignTx::Swap(CardanoSignTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoSignTx::InternalSwap(CardanoSignTx* other) {
  using std::swap;
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  CastToBase(&outputs_)->InternalSwap(CastToBase(&other->outputs_));
  swap(transactions_count_, other->transactions_count_);
  swap(protocol_magic_, other->protocol_magic_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoSignTx::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardanoTxRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoTxRequest::kTxIndexFieldNumber;
const int CardanoTxRequest::kTxHashFieldNumber;
const int CardanoTxRequest::kTxBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoTxRequest::CardanoTxRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoTxRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoTxRequest)
}
CardanoTxRequest::CardanoTxRequest(const CardanoTxRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_hash()) {
    tx_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_hash_);
  }
  tx_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_body()) {
    tx_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_body_);
  }
  tx_index_ = from.tx_index_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoTxRequest)
}

void CardanoTxRequest::SharedCtor() {
  tx_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_index_ = 0u;
}

CardanoTxRequest::~CardanoTxRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoTxRequest)
  SharedDtor();
}

void CardanoTxRequest::SharedDtor() {
  tx_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardanoTxRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoTxRequest::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoTxRequest& CardanoTxRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoTxRequest.base);
  return *internal_default_instance();
}


void CardanoTxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoTxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tx_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      tx_body_.ClearNonDefaultToEmptyNoArena();
    }
  }
  tx_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoTxRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoTxRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tx_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tx_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tx_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoTxRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoTxRequest)
  return false;
#undef DO_
}

void CardanoTxRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoTxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tx_index = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tx_index(), output);
  }

  // optional bytes tx_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->tx_hash(), output);
  }

  // optional bytes tx_body = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->tx_body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoTxRequest)
}

::google::protobuf::uint8* CardanoTxRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoTxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tx_index = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tx_index(), target);
  }

  // optional bytes tx_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->tx_hash(), target);
  }

  // optional bytes tx_body = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->tx_body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoTxRequest)
  return target;
}

size_t CardanoTxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoTxRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes tx_hash = 2;
    if (has_tx_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_hash());
    }

    // optional bytes tx_body = 3;
    if (has_tx_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_body());
    }

    // optional uint32 tx_index = 1;
    if (has_tx_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tx_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoTxRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoTxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoTxRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoTxRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoTxRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoTxRequest)
    MergeFrom(*source);
  }
}

void CardanoTxRequest::MergeFrom(const CardanoTxRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoTxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tx_hash();
      tx_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tx_body();
      tx_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_body_);
    }
    if (cached_has_bits & 0x00000004u) {
      tx_index_ = from.tx_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CardanoTxRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoTxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoTxRequest::CopyFrom(const CardanoTxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoTxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoTxRequest::IsInitialized() const {
  return true;
}

void CardanoTxRequest::Swap(CardanoTxRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoTxRequest::InternalSwap(CardanoTxRequest* other) {
  using std::swap;
  tx_hash_.Swap(&other->tx_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_body_.Swap(&other->tx_body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tx_index_, other->tx_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoTxRequest::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardanoTxAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoTxAck::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoTxAck::CardanoTxAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoTxAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoTxAck)
}
CardanoTxAck::CardanoTxAck(const CardanoTxAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_transaction()) {
    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoTxAck)
}

void CardanoTxAck::SharedCtor() {
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CardanoTxAck::~CardanoTxAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoTxAck)
  SharedDtor();
}

void CardanoTxAck::SharedDtor() {
  transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardanoTxAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoTxAck::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoTxAck& CardanoTxAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoTxAck.base);
  return *internal_default_instance();
}


void CardanoTxAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoTxAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    transaction_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoTxAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoTxAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoTxAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoTxAck)
  return false;
#undef DO_
}

void CardanoTxAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoTxAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes transaction = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->transaction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoTxAck)
}

::google::protobuf::uint8* CardanoTxAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoTxAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes transaction = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->transaction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoTxAck)
  return target;
}

size_t CardanoTxAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoTxAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes transaction = 1;
  if (has_transaction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->transaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoTxAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoTxAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoTxAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoTxAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoTxAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoTxAck)
    MergeFrom(*source);
  }
}

void CardanoTxAck::MergeFrom(const CardanoTxAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoTxAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_transaction()) {
    set_has_transaction();
    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
}

void CardanoTxAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoTxAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoTxAck::CopyFrom(const CardanoTxAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoTxAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoTxAck::IsInitialized() const {
  return true;
}

void CardanoTxAck::Swap(CardanoTxAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoTxAck::InternalSwap(CardanoTxAck* other) {
  using std::swap;
  transaction_.Swap(&other->transaction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoTxAck::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardanoSignedTx::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardanoSignedTx::kTxHashFieldNumber;
const int CardanoSignedTx::kTxBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardanoSignedTx::CardanoSignedTx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignedTx.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.cardano.CardanoSignedTx)
}
CardanoSignedTx::CardanoSignedTx(const CardanoSignedTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_hash()) {
    tx_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_hash_);
  }
  tx_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_body()) {
    tx_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_body_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.cardano.CardanoSignedTx)
}

void CardanoSignedTx::SharedCtor() {
  tx_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CardanoSignedTx::~CardanoSignedTx() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.cardano.CardanoSignedTx)
  SharedDtor();
}

void CardanoSignedTx::SharedDtor() {
  tx_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardanoSignedTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardanoSignedTx::descriptor() {
  ::protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardanoSignedTx& CardanoSignedTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dcardano_2eproto::scc_info_CardanoSignedTx.base);
  return *internal_default_instance();
}


void CardanoSignedTx::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.cardano.CardanoSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tx_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      tx_body_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardanoSignedTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.cardano.CardanoSignedTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes tx_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.cardano.CardanoSignedTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.cardano.CardanoSignedTx)
  return false;
#undef DO_
}

void CardanoSignedTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.cardano.CardanoSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes tx_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->tx_hash(), output);
  }

  // optional bytes tx_body = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->tx_body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.cardano.CardanoSignedTx)
}

::google::protobuf::uint8* CardanoSignedTx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.cardano.CardanoSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes tx_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->tx_hash(), target);
  }

  // optional bytes tx_body = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->tx_body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.cardano.CardanoSignedTx)
  return target;
}

size_t CardanoSignedTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.cardano.CardanoSignedTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes tx_hash = 1;
    if (has_tx_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_hash());
    }

    // optional bytes tx_body = 2;
    if (has_tx_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_body());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardanoSignedTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.cardano.CardanoSignedTx)
  GOOGLE_DCHECK_NE(&from, this);
  const CardanoSignedTx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardanoSignedTx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.cardano.CardanoSignedTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.cardano.CardanoSignedTx)
    MergeFrom(*source);
  }
}

void CardanoSignedTx::MergeFrom(const CardanoSignedTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.cardano.CardanoSignedTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tx_hash();
      tx_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tx_body();
      tx_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_body_);
    }
  }
}

void CardanoSignedTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.cardano.CardanoSignedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardanoSignedTx::CopyFrom(const CardanoSignedTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.cardano.CardanoSignedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardanoSignedTx::IsInitialized() const {
  return true;
}

void CardanoSignedTx::Swap(CardanoSignedTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardanoSignedTx::InternalSwap(CardanoSignedTx* other) {
  using std::swap;
  tx_hash_.Swap(&other->tx_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_body_.Swap(&other->tx_body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardanoSignedTx::GetMetadata() const {
  protobuf_messages_2dcardano_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dcardano_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace cardano
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoGetAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoGetAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoGetAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoGetPublicKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoGetPublicKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoGetPublicKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoPublicKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoPublicKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoPublicKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxInputType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoSignTx_CardanoTxOutputType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoSignTx* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoSignTx >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoSignTx >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoTxRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoTxRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoTxRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoTxAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoTxAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoTxAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::cardano::CardanoSignedTx* Arena::CreateMaybeMessage< ::hw::trezor::messages::cardano::CardanoSignedTx >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::cardano::CardanoSignedTx >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
